DATA_BLOCK "DB_WW"
TITLE =
//$Revision: 1.19 $
//$Date: 2008/04/29 17:26:38CEST $
//$Author: schmoelp $
VERSION : 0.1


  STRUCT 	
   Wz_reinigen_T : BOOL ;	//Start Werkzeug reinigen Tellermagazin
   FP_Wz_reinigen_T : BOOL ;	
   L6_aktiv : BOOL ;	//Werkzeugwechselzyklus aktiv
   PF_L6_aktiv : BOOL ;	
   PI_L6_aktiv : BOOL ;	
   MFkt_06 : BOOL ;	//M06 Werkzeugwechsel
   WW_Gst : BOOL ;	//Grundstellung Werkzeugwechsler
   PI_WW_Gst : BOOL ;	
   PF_WW_Gst : BOOL ;	
   WW_gestartet : BOOL ;	
   WW_T_Folge_1 : BOOL ;	//Tx M6 Spindel leer
   WW_T_Folge_2 : BOOL ;	//Tx M6 Spindel belegt
   WW_T_Folge_3 : BOOL ;	//T0 M6 Spindel belegt
   WW_SEMA_Folgen : BOOL ;	
   WW_T_Auftrag_1 : BOOL ;	//Ablegen Spindel leer
   WW_T_Auftrag_2 : BOOL ;	//Einwechseln neues Werkzeug
   WW_T_Auftrag_3 : BOOL ;	//Ablegen Spindel belegt
   WW_T_Auftrag_4 : BOOL ;	//Einwechseln kein Werkzeug
   WW_Frg_ins_Mag : BOOL ;	
   WW_Freifahren : BOOL ;	
   WW_Hschritt_1 : BOOL ;	
   WW_Hschritt_2 : BOOL ;	
   WW_HM_4 : BOOL ;	
   WW_Frg_Bewegung : BOOL ;	
   WW_vorwaerts : BOOL ;	
   WW_rueckwaerts : BOOL ;	
   WW_Frg_Ausgaenge : BOOL ;	
   WW_rueckwaerts_S : BOOL ;	
   WW_Anz_vorw : BOOL ;	
   WW_Anz_rueckw : BOOL ;	
   WW_Initialisieren : BOOL ;	
   PI_WW_beendet : BOOL ;	
   Schritt_T : ARRAY  [0 .. 15 ] OF //Schrittmerker Teller
   BOOL ;	
   WW_DT_ablegen : BOOL ;	
   WW_DT_aufnehmen : BOOL ;	
   WW_Mag_ein : BOOL ;	
   WW_Mag_aus : BOOL ;	
   MagPlatz_ok : BOOL ;	
   WW_Zange_auf : BOOL ;	
   WW_Wz_loesen : BOOL ;	
   M1_LS_entsichern : BOOL ;	
   Sp_gerichtet : BOOL ;	
   WW_Wz_spannen : BOOL ;	
   WW_Hand_S : BOOL ;	//Werkzeug spannen/entspannen angewählt
   PF_ART_verriegelt : BOOL ;	//PF: Arbeitsraumtür verriegelt
   PF_MFkt_M33 : BOOL ;	//PF: M33 Handwerkzeugwechsel
   WW_Hand_ART_oeffnen : BOOL ;	//Anforderung Arbeitsraumtür öffnen von WW-Hand
   PF_WW_Hand : BOOL ;	
   WW_Hand_Spanner_auf : BOOL ;	//Befehl Spanner öffnen von Hand
   WW_X_auf_WartePos : BOOL ;	//Befehl X-Achse auf Warteposition fahren
   PF_T_vorwaerts : BOOL ;	//PF: Taste vorwärts
   PF_T_rueckwaerts : BOOL ;	//PF: Taste rückwärts
   PF_X_im_WW : BOOL ;	//PF: X-Achse im Werkzeugwechsler
   PF_X_WW_Pos : BOOL ;	//PF: X-Achse auf Wechselposition
   NF_Wz_ausgefahren : BOOL ;	//NF: Werkzeug ausgefahren
   PF_loesen : BOOL ;	//PF: Werkzeug lösen
   PF_spannen : BOOL ;	//PF: Werkzeug spannen
   WW_Spanner_auf : BOOL ;	//Spanner öffnen im Werkzeugwechselablauf
   IB_Bit_Kontrolle_MagPl : BOOL ;	//Magazinplatzkontrolle ausschalten
   PF_WZ_LS_GST : BOOL ;	//PF: Werkzeugladestation Entriegelung in Grundstellung
   WZ_richtig_eingelegt : BOOL  := TRUE;	//Werkzeug wurde richtig eingelegt
   PF_Mag_in_pos_LST : BOOL ;	//PF: Magazin in Position Ladestation
   PF_WZ_Beladetuer_zu : BOOL ;	//PF: Werkzeug-Beladetür wurde geschlossen
   Option_Konus_ausblasen : BOOL ;	//0: nur beim Einfahren 1: beim ein- und ausfahren
   PF_T_Quitt_Entladen : BOOL ;	//PF: Taste quittieren Werkzeug entladen
   Schritt_K1 : ARRAY  [0 .. 31 ] OF //Schrittmerker Einfachkette
   BOOL ;	
   DT_aufnehmen : BOOL ;	//Datentausch 1 Magazin > Greifer
   DT_wechseln : BOOL ;	//Datentausch 2 Spindel <> Greifer
   DT_ablegen : BOOL ;	//Datentausch 3 Greifer > Magazin
   DT_GrSp : BOOL ;	//Datentausch Greifer -> Spindel Hand rückwärts
   DT_GrSp_Folge_Hand : BOOL ;	//Folgedatentausch Greifer -> Spindel Hand
   DT_GrSp_Folge_auto : BOOL ;	//Folgedatentausch Greifer -> Spindel auto
   AQ_umsetzen : BOOL ;	//Auswertung Quittung Umsetzen
   AQ_aufnehmen : BOOL ;	//Auswertung Quittung Datentausch 1
   AQ_wechseln : BOOL ;	//Auswertung Quittung Datentausch 2
   AQ_ablegen : BOOL ;	//Auswertung Quittung Datentausch 3
   Reserve_DT_15_2 : BOOL ;	
   Reserve_DT_15_3 : BOOL ;	
   Reserve_DT_15_4 : BOOL ;	
   WW_X_auf_WWPos : BOOL ;	//Befehl X-Achse auf Wechselposition fahren
   KR_ausfahren_EB : BOOL ;	//Kegelreinigung ausfahren
   KR_einfahren_EB : BOOL ;	//Kegelreinigung einfahren
   Klappe_auf_EB : BOOL ;	//Magazinklappe öffnen Einzelbewegung
   Klappe_zu_EB : BOOL ;	//Magazinklappe schliessen Einzelbewegung
   Spanner_auf_EB : BOOL ;	//Spanner öffnen Einzelbewegung
   Spanner_zu_EB : BOOL ;	//Spanner schliessen Einzelbewegung
   Halter_auf_EB_Ls : BOOL ;	//Werkzeughalter öffnen Einzelbewegung Ladestation
   Halter_zu_EB_Ls : BOOL ;	//Werkzeughalter schliessen Einzelbewegung Ladestation
   Halter_auf_EB_Sp : BOOL ;	//Werkzeughalter öffnen Einzelbewegung Spindelseite
   Halter_zu_EB_Sp : BOOL ;	//Werkzeughalter schliessen Einzelbewegung Spindelseite
   FP_Hub_ausgefahren : BOOL ;	//FP Magazinhub ausgefahren
   WW_velo : REAL ;	//Geschwindigkeit Magazinhub
   MAG_velo : REAL ;	//Geschwindigkeit Magazin drehen
   ASUP_Rettung : STRUCT 	
    PF_Start : BOOL ;	//Start ASUP DM_RETTUNG.SPF
    WW_Hub_ausfahren : BOOL ;	//Werkzeug aus Spindel ausfahren
    WW_Hub_einfahren : BOOL ;	//Werkzeug in Spindel einfahren
    X_Warteposition : BOOL ;	//X-Achse auf Warteposition fahren
    X_Wechselposition : BOOL ;	//X-Achse auf Wechselposition fahren
    AUTO_GST : BOOL ;	//automatisch in Grunstellung fahren
    Y_Wechselposition : BOOL ;	//Y-Achse auf Wechselposition fahren
    Spindel_Richtposition : BOOL ;	//Spindel auf Richtposition fahren
   END_STRUCT ;	
   KR_ausfahren : BOOL ;	//Kegelreinigung ausfahren gespeichert
   VSP_X_Wechsler : BOOL ;	//Vorschubsperre X-Achse Werkzeugwechsler
   VSP_Y_Wechsler : BOOL ;	//Vorschubsperre Y-Achse Werkzeugwechsler
   VSP_Z_Wechsler : BOOL ;	//Vorschubsperre Z-Achse Werkzeugwechsler
   VSP_WZM_Wechsler : BOOL ;	//Vorschubsperre WZM-Achse Werkzeugwechsler
   VSP_WW_Wechsler : BOOL ;	//Vorschubsperre WW-Achse Werkzeugwechsler
   ASUP : ARRAY  [1 .. 8 ] OF STRUCT 	
    PI_SERV_Req : BOOL ;	//FB4 Start
    PI_SERV_Error : BOOL ;	//FB4 Error
    PI_SERV_Done : BOOL ;	//FB4 Done
    PF_Anf_Ini : BOOL ;	//PF: Anforderung Initialisierung
    Anf_Ini : BOOL ;	//Anforderung Initialisierung
    PI_SERV_State : WORD ;	//Fehlerstatus
   END_STRUCT ;	
   PN_MAG_Hub_eingefahren : BOOL ;	
   PF_F_Mag_aus : BOOL ;	
   PF_F_Mag_ein : BOOL ;	
   PF_F_Mag_Pos : BOOL ;	
   PF_F_Zange_auf : BOOL ;	
   PF_F_Zange_zu : BOOL ;	
   PF_F_Wz_gespannt : BOOL ;	
   PF_F_Wz_geloest : BOOL ;	
   PF_F_Spindelpos : BOOL ;	
   PF_F_Klappe_auf : BOOL ;	
   PF_F_Klappe_zu : BOOL ;	
   PF_F_Spindel_leer : BOOL ;	
   O_WW_1_ZYL_SPI : BOOL ;	
   O_WW_1_ZYL_GST : BOOL ;	
   VM : STRUCT 	
    TPU_Greifer_0_Grad : BOOL ;	//Greifer steht auf 0 Grad bei belegter TPU
    TPU_Greifer_180_Grad : BOOL ;	//Greifer steht auf 180 Grad bei belegter TPU
   END_STRUCT ;	
   Timer_Blasluft_0 : S5TIME  := S5T#1S;	//Verzögerungszeit Konusausblasen langsamer Wechsel
   Timer_Blasluft_1 : S5TIME  := S5T#500MS;	//Verzögerungszeit Konusausblasen schneller Wechsel
   Timer_Blasluft_2 : S5TIME  := S5T#1S;	//Verzögerungszeit Konusausblasen Wechsel vertikal velo 2
   Timer_Blasluft_3 : S5TIME  := S5T#800MS;	//Verzögerungszeit Konusausblasen Wechsel vertikal velo 3
   Timer_Blasluft_4 : S5TIME  := S5T#600MS;	//Verzögerungszeit Konusausblasen Wechsel vertikal velo 4
   Timer_Blasluft_5 : S5TIME  := S5T#400MS;	//Verzögerungszeit Konusausblasen Wechsel vertikal velo 5
  END_STRUCT ;	
BEGIN
   Wz_reinigen_T := FALSE; 
   FP_Wz_reinigen_T := FALSE; 
   L6_aktiv := FALSE; 
   PF_L6_aktiv := FALSE; 
   PI_L6_aktiv := FALSE; 
   MFkt_06 := FALSE; 
   WW_Gst := FALSE; 
   PI_WW_Gst := FALSE; 
   PF_WW_Gst := FALSE; 
   WW_gestartet := FALSE; 
   WW_T_Folge_1 := FALSE; 
   WW_T_Folge_2 := FALSE; 
   WW_T_Folge_3 := FALSE; 
   WW_SEMA_Folgen := FALSE; 
   WW_T_Auftrag_1 := FALSE; 
   WW_T_Auftrag_2 := FALSE; 
   WW_T_Auftrag_3 := FALSE; 
   WW_T_Auftrag_4 := FALSE; 
   WW_Frg_ins_Mag := FALSE; 
   WW_Freifahren := FALSE; 
   WW_Hschritt_1 := FALSE; 
   WW_Hschritt_2 := FALSE; 
   WW_HM_4 := FALSE; 
   WW_Frg_Bewegung := FALSE; 
   WW_vorwaerts := FALSE; 
   WW_rueckwaerts := FALSE; 
   WW_Frg_Ausgaenge := FALSE; 
   WW_rueckwaerts_S := FALSE; 
   WW_Anz_vorw := FALSE; 
   WW_Anz_rueckw := FALSE; 
   WW_Initialisieren := FALSE; 
   PI_WW_beendet := FALSE; 
   Schritt_T[0] := FALSE; 
   Schritt_T[1] := FALSE; 
   Schritt_T[2] := FALSE; 
   Schritt_T[3] := FALSE; 
   Schritt_T[4] := FALSE; 
   Schritt_T[5] := FALSE; 
   Schritt_T[6] := FALSE; 
   Schritt_T[7] := FALSE; 
   Schritt_T[8] := FALSE; 
   Schritt_T[9] := FALSE; 
   Schritt_T[10] := FALSE; 
   Schritt_T[11] := FALSE; 
   Schritt_T[12] := FALSE; 
   Schritt_T[13] := FALSE; 
   Schritt_T[14] := FALSE; 
   Schritt_T[15] := FALSE; 
   WW_DT_ablegen := FALSE; 
   WW_DT_aufnehmen := FALSE; 
   WW_Mag_ein := FALSE; 
   WW_Mag_aus := FALSE; 
   MagPlatz_ok := FALSE; 
   WW_Zange_auf := FALSE; 
   WW_Wz_loesen := FALSE; 
   M1_LS_entsichern := FALSE; 
   Sp_gerichtet := FALSE; 
   WW_Wz_spannen := FALSE; 
   WW_Hand_S := FALSE; 
   PF_ART_verriegelt := FALSE; 
   PF_MFkt_M33 := FALSE; 
   WW_Hand_ART_oeffnen := FALSE; 
   PF_WW_Hand := FALSE; 
   WW_Hand_Spanner_auf := FALSE; 
   WW_X_auf_WartePos := FALSE; 
   PF_T_vorwaerts := FALSE; 
   PF_T_rueckwaerts := FALSE; 
   PF_X_im_WW := FALSE; 
   PF_X_WW_Pos := FALSE; 
   NF_Wz_ausgefahren := FALSE; 
   PF_loesen := FALSE; 
   PF_spannen := FALSE; 
   WW_Spanner_auf := FALSE; 
   IB_Bit_Kontrolle_MagPl := FALSE; 
   PF_WZ_LS_GST := FALSE; 
   WZ_richtig_eingelegt := TRUE; 
   PF_Mag_in_pos_LST := FALSE; 
   PF_WZ_Beladetuer_zu := FALSE; 
   Option_Konus_ausblasen := FALSE; 
   PF_T_Quitt_Entladen := FALSE; 
   Schritt_K1[0] := FALSE; 
   Schritt_K1[1] := FALSE; 
   Schritt_K1[2] := FALSE; 
   Schritt_K1[3] := FALSE; 
   Schritt_K1[4] := FALSE; 
   Schritt_K1[5] := FALSE; 
   Schritt_K1[6] := FALSE; 
   Schritt_K1[7] := FALSE; 
   Schritt_K1[8] := FALSE; 
   Schritt_K1[9] := FALSE; 
   Schritt_K1[10] := FALSE; 
   Schritt_K1[11] := FALSE; 
   Schritt_K1[12] := FALSE; 
   Schritt_K1[13] := FALSE; 
   Schritt_K1[14] := FALSE; 
   Schritt_K1[15] := FALSE; 
   Schritt_K1[16] := FALSE; 
   Schritt_K1[17] := FALSE; 
   Schritt_K1[18] := FALSE; 
   Schritt_K1[19] := FALSE; 
   Schritt_K1[20] := FALSE; 
   Schritt_K1[21] := FALSE; 
   Schritt_K1[22] := FALSE; 
   Schritt_K1[23] := FALSE; 
   Schritt_K1[24] := FALSE; 
   Schritt_K1[25] := FALSE; 
   Schritt_K1[26] := FALSE; 
   Schritt_K1[27] := FALSE; 
   Schritt_K1[28] := FALSE; 
   Schritt_K1[29] := FALSE; 
   Schritt_K1[30] := FALSE; 
   Schritt_K1[31] := FALSE; 
   DT_aufnehmen := FALSE; 
   DT_wechseln := FALSE; 
   DT_ablegen := FALSE; 
   DT_GrSp := FALSE; 
   DT_GrSp_Folge_Hand := FALSE; 
   DT_GrSp_Folge_auto := FALSE; 
   AQ_umsetzen := FALSE; 
   AQ_aufnehmen := FALSE; 
   AQ_wechseln := FALSE; 
   AQ_ablegen := FALSE; 
   Reserve_DT_15_2 := FALSE; 
   Reserve_DT_15_3 := FALSE; 
   Reserve_DT_15_4 := FALSE; 
   WW_X_auf_WWPos := FALSE; 
   KR_ausfahren_EB := FALSE; 
   KR_einfahren_EB := FALSE; 
   Klappe_auf_EB := FALSE; 
   Klappe_zu_EB := FALSE; 
   Spanner_auf_EB := FALSE; 
   Spanner_zu_EB := FALSE; 
   Halter_auf_EB_Ls := FALSE; 
   Halter_zu_EB_Ls := FALSE; 
   Halter_auf_EB_Sp := FALSE; 
   Halter_zu_EB_Sp := FALSE; 
   FP_Hub_ausgefahren := FALSE; 
   WW_velo := 0.000000e+000; 
   MAG_velo := 0.000000e+000; 
   ASUP_Rettung.PF_Start := FALSE; 
   ASUP_Rettung.WW_Hub_ausfahren := FALSE; 
   ASUP_Rettung.WW_Hub_einfahren := FALSE; 
   ASUP_Rettung.X_Warteposition := FALSE; 
   ASUP_Rettung.X_Wechselposition := FALSE; 
   ASUP_Rettung.AUTO_GST := FALSE; 
   ASUP_Rettung.Y_Wechselposition := FALSE; 
   ASUP_Rettung.Spindel_Richtposition := FALSE; 
   KR_ausfahren := FALSE; 
   VSP_X_Wechsler := FALSE; 
   VSP_Y_Wechsler := FALSE; 
   VSP_Z_Wechsler := FALSE; 
   VSP_WZM_Wechsler := FALSE; 
   VSP_WW_Wechsler := FALSE; 
   ASUP[1].PI_SERV_Req := FALSE; 
   ASUP[1].PI_SERV_Error := FALSE; 
   ASUP[1].PI_SERV_Done := FALSE; 
   ASUP[1].PF_Anf_Ini := FALSE; 
   ASUP[1].Anf_Ini := FALSE; 
   ASUP[1].PI_SERV_State := W#16#0; 
   ASUP[2].PI_SERV_Req := FALSE; 
   ASUP[2].PI_SERV_Error := FALSE; 
   ASUP[2].PI_SERV_Done := FALSE; 
   ASUP[2].PF_Anf_Ini := FALSE; 
   ASUP[2].Anf_Ini := FALSE; 
   ASUP[2].PI_SERV_State := W#16#0; 
   ASUP[3].PI_SERV_Req := FALSE; 
   ASUP[3].PI_SERV_Error := FALSE; 
   ASUP[3].PI_SERV_Done := FALSE; 
   ASUP[3].PF_Anf_Ini := FALSE; 
   ASUP[3].Anf_Ini := FALSE; 
   ASUP[3].PI_SERV_State := W#16#0; 
   ASUP[4].PI_SERV_Req := FALSE; 
   ASUP[4].PI_SERV_Error := FALSE; 
   ASUP[4].PI_SERV_Done := FALSE; 
   ASUP[4].PF_Anf_Ini := FALSE; 
   ASUP[4].Anf_Ini := FALSE; 
   ASUP[4].PI_SERV_State := W#16#0; 
   ASUP[5].PI_SERV_Req := FALSE; 
   ASUP[5].PI_SERV_Error := FALSE; 
   ASUP[5].PI_SERV_Done := FALSE; 
   ASUP[5].PF_Anf_Ini := FALSE; 
   ASUP[5].Anf_Ini := FALSE; 
   ASUP[5].PI_SERV_State := W#16#0; 
   ASUP[6].PI_SERV_Req := FALSE; 
   ASUP[6].PI_SERV_Error := FALSE; 
   ASUP[6].PI_SERV_Done := FALSE; 
   ASUP[6].PF_Anf_Ini := FALSE; 
   ASUP[6].Anf_Ini := FALSE; 
   ASUP[6].PI_SERV_State := W#16#0; 
   ASUP[7].PI_SERV_Req := FALSE; 
   ASUP[7].PI_SERV_Error := FALSE; 
   ASUP[7].PI_SERV_Done := FALSE; 
   ASUP[7].PF_Anf_Ini := FALSE; 
   ASUP[7].Anf_Ini := FALSE; 
   ASUP[7].PI_SERV_State := W#16#0; 
   ASUP[8].PI_SERV_Req := FALSE; 
   ASUP[8].PI_SERV_Error := FALSE; 
   ASUP[8].PI_SERV_Done := FALSE; 
   ASUP[8].PF_Anf_Ini := FALSE; 
   ASUP[8].Anf_Ini := FALSE; 
   ASUP[8].PI_SERV_State := W#16#0; 
   PN_MAG_Hub_eingefahren := FALSE; 
   PF_F_Mag_aus := FALSE; 
   PF_F_Mag_ein := FALSE; 
   PF_F_Mag_Pos := FALSE; 
   PF_F_Zange_auf := FALSE; 
   PF_F_Zange_zu := FALSE; 
   PF_F_Wz_gespannt := FALSE; 
   PF_F_Wz_geloest := FALSE; 
   PF_F_Spindelpos := FALSE; 
   PF_F_Klappe_auf := FALSE; 
   PF_F_Klappe_zu := FALSE; 
   PF_F_Spindel_leer := FALSE; 
   O_WW_1_ZYL_SPI := FALSE; 
   O_WW_1_ZYL_GST := FALSE; 
   VM.TPU_Greifer_0_Grad := FALSE; 
   VM.TPU_Greifer_180_Grad := FALSE; 
   Timer_Blasluft_0 := S5T#1S; 
   Timer_Blasluft_1 := S5T#500MS; 
   Timer_Blasluft_2 := S5T#1S; 
   Timer_Blasluft_3 := S5T#800MS; 
   Timer_Blasluft_4 := S5T#600MS; 
   Timer_Blasluft_5 := S5T#400MS; 
END_DATA_BLOCK

