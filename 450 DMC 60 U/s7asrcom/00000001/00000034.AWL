FUNCTION "FC_VIBRATIONSSENSOR" : VOID
TITLE =
//$Revision: 1.16 $
//$Date: 2008/09/12 12:56:41CEST $
//$Author: riedlh $
//Vibrationssensor
//Logbuch:
//
//V0.1 / 10.07.03 / STH
//
//
//- Modul Erstellt
AUTHOR : STH
VERSION : 0.1


VAR_TEMP
  Zwischenwert : REAL ;	
  Ist_Drehzahl_Prozentual : WORD ;	
  Zwischenwert_2 : REAL ;	
  Zwischenwert_3 : REAL ;	
  T_Error_FB2_1 : BOOL ;	
  T_Done_FB2_1 : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =Anwahl Vibrationssensorik und Spindelüberwachung
//
//
      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700909_VIB_Extr_Bereich; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700918_VIB_Rot_Bereich; 
      R     "DB_FEHLERMELDUNG".WARNUNG2._701413_Vibs_Ro_Bereich; 
      R     "DB_FEHLERMELDUNG".Meldung._702211_VMS_BEARING_MEL; 
      R     "DB_FEHLERMELDUNG".Warnung._701929_VMS_BEARING_WAR; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510118_VMS_BEARING_ERR; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510314_VMS_UNBALANCE_ME; 
      R     "DB_FEHLERMELDUNG".WARNUNG4._702305_VMS_UNBALANCE_WA; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510119_VMS_UNBALANCE_ER; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510315_VMS_CRASH_MEL; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510120_VMS_CRASH_ERROR; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510313_VMS_REFERENZ_MEL; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510312_VMS_REFERENZ_RUN; 
      R     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 

//Anwahl Vibrationssensor

      L     "DB_PLC_MD_DB20".UDInt._044_ANWAHL_VIBRATIONSEN; 
      L     0; 
      ==I   ; 
      SPB   hh4; 

NETWORK
TITLE =Umwandlung der Spindel-Istdrehzahl in ein Ausgangswort
//-Aufruf FC106
//     IN     :  Eingabewert der deskaliert werden soll
//     HI_LIM :  50000 U/min
//     LO_LIM :      0 U/min
//     BIPOLAR:  0= UNIPOLAR: Es wird angenommen, daß der ganzzahlige Eingabewert 
//                            zwischen 0 und 27648 liegt, deshalb sind K1 = 0,0   
//                             und K2 = +27648,0.
//               1= BIPOLAR : Es wird angenommen, daß der ganzzahlige Eingabewert 
//                             zwischen -27648 und 27648 liegt, deshalb sind K1 = 
// 
//                             -27648,0 und K2 = +27648,0.
//     RET_VAL:  0= Kein Fehler
//     OUT    :  Ergebnis der Deskalierug (Ausgabewert für Analogmodul)
//
      L     "DB_VIB_SCHNITTSTELLE".Spindel_Ist_Drehzahl; 
      ABS   ; 
      T     "MD_SPI_SPEED_ABS"; 

      CALL "FC_UNSCALE" (
           IN                       := "MD_SPI_SPEED_ABS",
           HI_LIM                   := 5.000000e+004,
           LO_LIM                   := 0.000000e+000,
           BIPOLAR                  := FALSE,
           RET_VAL                  := "MW_RET_VAL_UNSCALE",
           OUT                      := "MW_VMS_SPI_SPEED_RPM");

      L     "MW_VMS_SPI_SPEED_RPM"; // Ist-Drehzahl als analoge Spannung
      L     1382; // Offset (1382 = 0,5 V)
      +I    ; 
      T     "MW_VMS_SPI_SPEED_RPM"; 

NETWORK
TITLE =Umwandlung des Eingangswortes in einen Spannungswert (0....10)
//-Aufruf FC105
//     IN     :  Eingabewert der skaliert werden soll
//     HI_LIM :  10000mV
//     LO_LIM :      0mV
//     BIPOLAR:  0= UNIPOLAR: Es wird angenommen, daß der ganzzahlige Eingabewert 
//                            zwischen 0 und 27648 liegt, deshalb sind K1 = 0,0   
//                             und K2 = +27648,0.
//               1= BIPOLAR : Es wird angenommen, daß der ganzzahlige Eingabewert 
//                             zwischen -27648 und 27648 liegt, deshalb sind K1 = 
// 
//                             -27648,0 und K2 = +27648,0.
//     RET_VAL:  0= Kein Fehler
//     OUT    :  Ergebnis der Skalierug (Analoger Spannungswert in mV)  
// 
      L     "DB_PLC_MD_DB20".UDInt._044_ANWAHL_VIBRATIONSEN; 
      L     2; 
      >=I   ; 
      SPB   IFM; 

// IBIS System

      CALL "FC_SCALE" (
           IN                       := "MW_Wert_Vibrsensor",
           HI_LIM                   := 1.000000e+004,
           LO_LIM                   := 0.000000e+000,
           BIPOLAR                  := FALSE,
           RET_VAL                  := "MW_RET_VAL_SCALE",
           OUT                      := "MD_VIBS_Eing_SP");

      SPA   VEFF; 
//-------------------------------------------------------------------------

// IFM System

IFM:  CALL "FC_SCALE" (
           IN                       := "MW_VMS_VIBRATION_SPINDLE",
           HI_LIM                   := 1.000000e+004,
           LO_LIM                   := 0.000000e+000,
           BIPOLAR                  := FALSE,
           RET_VAL                  := "MW_RET_VAL_SCALE",
           OUT                      := "MD_VIBS_Eing_SP");

NETWORK
TITLE =Spindelüberwachung: Unwucht

      U     "I_VMS_UNBALANCE_WAR"; 
      O     "I_VMS_UNBALANCE_ERROR"; 
      UN    "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Unbalance_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".MELDUNG5._510314_VMS_UNBALANCE_ME; 

      U     "I_VMS_UNBALANCE_WAR"; 
      U     "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Unbalance_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".WARNUNG4._702305_VMS_UNBALANCE_WA; 
      S     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 

      U     "I_VMS_UNBALANCE_ERROR"; 
      U     "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Unbalance_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510119_VMS_UNBALANCE_ER; 
      S     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 
NETWORK
TITLE =Spindelüberwachung: Crash/Stoss

      U     "I_VMS_CRASH"; 
      UN    "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Collision_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".MELDUNG5._510315_VMS_CRASH_MEL; 

      U     "I_VMS_CRASH"; 
      U     "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Collision_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510120_VMS_CRASH_ERROR; 
      S     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 

// Zusätzliches Meldefenster (Hardkey 62: CVibrab.com --> Maske: Meldefenster)

      U     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510120_VMS_CRASH_ERROR; 
      UN    "M_VMS_MESSAGE_WINDOW"; 
      FP    "M_FP_VMS_CRASH"; 
      SPBN  noMF; 

      SET   ; 
      S     "M_VMS_MESSAGE_WINDOW"; 

      L     62; 
      T     "DB_SIEM_MMC".A_Hardkey; //PLC Hardkey setzen

noMF: NOP   0; 

NETWORK
TITLE =Spindelüberwachung: Spindellager

      U     "I_VMS_BEARING_WAR"; 
      O     "I_VMS_BEARING_ERROR"; 
      U     "O_VMS_MSG_BEA_START"; 
      UN    "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Bearing_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".Meldung._702211_VMS_BEARING_MEL; 

      U     "I_VMS_BEARING_WAR"; 
      U     "O_VMS_MSG_BEA_START"; 
      U     "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Bearing_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".Warnung._701929_VMS_BEARING_WAR; 
      S     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 

      U     "I_VMS_BEARING_ERROR"; 
      U     "O_VMS_MSG_BEA_START"; 
      U     "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Bearing_Mon_aktiv; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt1._510118_VMS_BEARING_ERR; 
      S     "DB_VIB_SCHNITTSTELLE".Spindelueberwach_Error; 
NETWORK
TITLE =Spindelüberwachung: Referenzlauf
// Referenzmessung Start
      U     "DB_NC_PLC".Zusatz.NC_an_PLC.A_VMS_MSG_BEA_START; 
      S     "O_VMS_MSG_BEA_START"; 

// Referenzmessung Stop
      U     "M_Reset_Taste"; 
      ON    "DB_NC_PLC".Zusatz.NC_an_PLC.A_VMS_MSG_BEA_START; 
      R     "O_VMS_MSG_BEA_START"; 

// Meldung Referenzlauf aktiv
      UN    "I_VMS_MEASURING_BEA_RDY"; 
      U     "O_VMS_MSG_BEA_START"; 
      S     "DB_FEHLERMELDUNG".MELDUNG5._510312_VMS_REFERENZ_RUN; 

      U     "M_Reset_Taste"; 
      ON    "O_VMS_MSG_BEA_START"; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510312_VMS_REFERENZ_RUN; 

// Referenzlauf beendet
      U     "I_VMS_MEASURING_BEA_RDY"; 
      =     "DB_NC_PLC".Zusatz.PLC_an_NC.E_VMS_MEASURING_BEA_RDY; 

// Rücksetzen/Neustart des Zeitintervalls nach Spindelreferenzlauf
      U     "I_VMS_MEASURING_BEA_RDY"; 
      SPBN  nset; 

      SET   ; 
      R     "M_VMS_MESSAGE_WINDOW"; 
      R     "DB_FEHLERMELDUNG".Meldung4._702421_VMS_REF_REQUIRED; 

      L     0; 
      T     "DB_REMANENT".VMS_REF_SPI_TIME_IST; 
      T     "DB_SIEM_MMC".A_Hardkey; //PLC Hardkey löschen

nset: NOP   0; 

// Referenzlauf fehlgeschlagen
      U     "O_VMS_MSG_BEA_START"; 
      L     S5T#1M; // Referenzlauf länger 1 Minute --> Fehler
      SE    "Te_REF_SPI_Error"; 

      U     "I_VMS_VIBRATION_FAULT_D"; 
      O     "Te_REF_SPI_Error"; 
      U     "O_VMS_MSG_BEA_START"; 
      S     "DB_NC_PLC".Zusatz.PLC_an_NC.E_VMS_VIBRATION_FAULT_D; 
      S     "DB_FEHLERMELDUNG".MELDUNG5._510313_VMS_REFERENZ_MEL; 

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_NC_PLC".Zusatz.PLC_an_NC.E_VMS_VIBRATION_FAULT_D; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510313_VMS_REFERENZ_MEL; 
      R     "Te_REF_SPI_Error"; 

NETWORK
TITLE =Zeitüberwachung des Spindelreferenzlaufs

      L     "DB_REMANENT".VMS_REF_SPI_TIME_MAX; 
      L     0; 
      ==I   ; 
      SPB   EndC; 

      U     "M_Takt_1s"; 
      UN    "M_Hauptspindel_steht"; 
      UN    "DB_ACHSE6_SPINDEL".E_Stat; 
      SPBN  EndC; 

      L     "MW_SPI_REF_Zeitintervall"; 
      INC   1; 
      T     "MW_SPI_REF_Zeitintervall"; 
      L     60; 
      <I    ; 
      SPB   EndC; 

      L     0; 
      T     "MW_SPI_REF_Zeitintervall"; 

// Überwachung des Zeitintervalls
      L     "DB_REMANENT".VMS_REF_SPI_TIME_IST; 
      INC   1; 
      T     "DB_REMANENT".VMS_REF_SPI_TIME_IST; 
      L     "DB_REMANENT".VMS_REF_SPI_TIME_MAX; 
      <I    ; 
      SPB   EndC; 

// Meldung Referenzlauf sollte gestartet werden
      SET   ; 
      S     "DB_FEHLERMELDUNG".Meldung4._702421_VMS_REF_REQUIRED; 

// Rücksetzen/Neustart des Zeitintervalls für Spindelreferenzlauf
      L     0; 
      T     "DB_REMANENT".VMS_REF_SPI_TIME_IST; 

EndC: NOP   0; 
NETWORK
TITLE =VIBRATIONSSENSOR: Anforderung Spindeldaten lesen
//Spindellast und Ist-Drehzahl lesen
VEFF: SET   ; 

      UN    "Timer_Req_SPI_DATA"; 
      S     "M_Req_SPI_DATA"; 
      L     S5T#500MS; 
      SV    "Timer_Req_SPI_DATA"; 


      CALL "FB_SIEM_GET" , "DI_FB2_VIB_SPI_DATA" (
           Req                      := "M_Req_SPI_DATA",
           NumVar                   := 2,
           Addr1                    := "DB_VIB_SCHNITTSTELLE".C1_SSP_driveLoad1_16,
           Addr2                    := "DB_VIB_SCHNITTSTELLE".C1_SSP_actSpeed1_2,
           Error                    := #T_Error_FB2_1,
           NDR                      := #T_Done_FB2_1,
           RD1                      := "DB_VIB_SCHNITTSTELLE".Spindellast1,
           RD2                      := "DB_VIB_SCHNITTSTELLE".Spindel_Ist_Drehzahl);

// "DB_Vibs_Schnittstelle".Spindellast1
//  U     #T_Done_FB2_1               // immer wenn nicht Ready dann wird 
//  =     M    147.1                  //"M_NCVar_lesen_Ready"       // Request neu gesetzt --> in FC150

      O     #T_Done_FB2_1; 
      O     #T_Error_FB2_1; 
      R     "M_Req_SPI_DATA"; //"M_NCVar_lesen_Request" 


NETWORK
TITLE =Auswertung
// Grüner Bereich  2 bis 3.6V
      L     "MD_VIBS_Eing_SP"; 
      RND   ; 
      L     "DB_PLC_MD_DB20".UDInt._154_Vib_Grenzw_Gr_Ge; // 3600                        // 3600mV
      <=I   ; 
      SPBN  yel; 

      L     1; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      ==I   ; 
      SPB   end; 

      U     "M_Takt_1s"; // Taktmerker 1s
      SPBN  nex; 

      L     "MW_Zaehler_in_Bereich"; 
      L     1; 
      +D    ; 
      T     "MW_Zaehler_in_Bereich"; 

nex:  L     "MW_Zaehler_in_Bereich"; 
      L     5; 
      ==I   ; 
      SPBN  end; 
      L     1; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 

      L     0; 
      T     "MW_Zaehler_in_Bereich"; 
      SPA   end; 

// Gelber Bereich   3,6V bis 5,84V

yel:  L     "MD_VIBS_Eing_SP"; 
      RND   ; 
      L     "DB_PLC_MD_DB20".UDInt._155_Vib_Grenzw_Ge_Ro; // 5840                        //5840mV
      <=I   ; 
      SPBN  red; 

      L     2; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      ==I   ; 
      SPB   end; 

      U     "M_Takt_1s"; // Taktmerker 1s
      SPBN  nex1; 

      L     "MW_Zaehler_in_Bereich"; 
      L     1; 
      +D    ; 
      T     "MW_Zaehler_in_Bereich"; 

nex1: L     "MW_Zaehler_in_Bereich"; 
      L     3; 
      ==I   ; 
      SPBN  end; 
      L     2; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 

      L     0; 
      T     "MW_Zaehler_in_Bereich"; 
      SPA   end; 

// Roter Bereich  5,84V bis 7,12V

red:  L     "MD_VIBS_Eing_SP"; 
      RND   ; 
      L     "DB_PLC_MD_DB20".UDInt._156_Vib_Grenzw_Ro_Extr; //7120                        //7120mV
      <=I   ; 
      SPBN  extr; 

      L     3; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      ==I   ; 
      SPB   end; 

      U     "M_Takt_1s"; // Taktmerker 1s
      SPBN  nex2; 

      L     "MW_Zaehler_in_Bereich"; 
      L     1; 
      +D    ; 
      T     "MW_Zaehler_in_Bereich"; 

nex2: L     "MW_Zaehler_in_Bereich"; 
      L     2; 
      ==I   ; 
      SPBN  end; 
      L     3; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 

      L     0; 
      T     "MW_Zaehler_in_Bereich"; 
      SPA   end; 

// Extremer Bereich Über 7,12V

extr: L     4; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      ==I   ; 
      O     "M_WZW_Aktiv"; 
      SPB   end; 

      L     4; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 

      UN    "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Veff_Mon_aktiv; 
      O     "DB_PLC_MD_DB20".UDHex._07_BIT2_Vibs_Fehlerart; //Konstante Fehlerart =1-->Meldung,=0-->Fehler
      SPB   mel0; 

      SET   ; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700909_VIB_Extr_Bereich; 
      SPA   end; 

mel0: SET   ; 
      S     "DB_FEHLERMELDUNG".WARNUNG2._701413_Vibs_Ro_Bereich; 

end:  NOP   0; 

//-----Reaktionsart und Dauer im Roten(3) Bereich----------------------------

      L     3; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      ==I   ; 
      SPBN  end2; 

      U     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700918_VIB_Rot_Bereich; 
      O     "DB_FEHLERMELDUNG".WARNUNG2._701413_Vibs_Ro_Bereich; 
      SPB   end2; 

      U     "M_Takt_1s"; // Taktmerker 1s
      SPBN  nex3; 

      L     "MW_Zaehler_in_Bereich"; 
      L     1; 
      +D    ; 
      T     "MW_Zaehler_in_Bereich"; 

nex3: L     "MW_Zaehler_in_Bereich"; 
      L     "DB_PLC_MD_DB20".UDInt._157_Vib_Zeit_Reakt_RoBe; 
      ==I   ; 
      SPBN  end2; 

      L     0; 
      T     "MW_Zaehler_in_Bereich"; 

      UN    "DB_ANWENDER_SOFTKEY".Spindle_Monitoring.VMS_Veff_Mon_aktiv; 
      O     "DB_PLC_MD_DB20".UDHex._07_BIT2_Vibs_Fehlerart; //Konstante Fehlerart =1-->Meldung,=0-->Fehler
      SPB   mel; 

      SET   ; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700918_VIB_Rot_Bereich; 
      SPA   end2; 

mel:  SET   ; 
      S     "DB_FEHLERMELDUNG".WARNUNG2._701413_Vibs_Ro_Bereich; 

end2: NOP   0; 

//---Dauer_vorheriger_Bereich Vibration----------------------------

      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      L     "DB_VIB_SCHNITTSTELLE".Vibration_Bereich_alt; 
      ==I   ; 
      SPB   as3; 

      L     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Vib_Bereich; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.DauerLetztBereich; 
      L     0; 
      T     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Vib_Bereich; 

      L     "DB_VIB_SCHNITTSTELLE".Vibration.Bereich; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration_Bereich_alt; 

as3:  U     "M_Takt_1s"; 
      SPBN  as4; 
      L     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Vib_Bereich; 
      L     1.000000e+000; 
      +R    ; 
      T     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Vib_Bereich; 

as4:  NOP   0; 
NETWORK
TITLE =Werte in Schnittstelle schreiben
//
//
//Wenn Wert unter 2000mV dann Null schreiben
      L     "MD_VIBS_Eing_SP"; 
      L     2.000000e+003; 
      <R    ; 
      SPBN  not0; 
      L     0; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Wert; 
      SPA   www; 

not0: L     "MD_VIBS_Eing_SP"; 
      L     2.000000e+003; 
      -R    ; 
      T     #Zwischenwert_2; 

      L     #Zwischenwert_2; 
      L     3.125000e-003; 
      *R    ; 
      RND   ; 
      T     "DB_VIB_SCHNITTSTELLE".Vibration.Wert; 

//Spindellast

      L     "DB_VIB_SCHNITTSTELLE".Spindellast1; 
      RND   ; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Wert; 


www:  L     "MD_VIBS_Eing_SP"; // in mVolt
      RND   ; // runden
      T     "DB_VIB_SCHNITTSTELLE".Vibwert_in_milliVolt; 

NETWORK
TITLE =
// Istdrehzahl in %
      L     "DB_VIB_SCHNITTSTELLE".Spindel_Ist_Drehzahl; //Bei linkslauf negieren, um pos. 
      L     0.000000e+000; //           Vorzeichen zu erhalten
      <R    ; 
      SPBN  rec; 
      L     "DB_VIB_SCHNITTSTELLE".Spindel_Ist_Drehzahl; 
      NEGR  ; 
      T     #Zwischenwert_3; 
      SPA   rec1; 

rec:  L     "DB_VIB_SCHNITTSTELLE".Spindel_Ist_Drehzahl; 
      T     #Zwischenwert_3; 

rec1: L     #Zwischenwert_3; 
      L     1.000000e+002; 
      *R    ; 
      T     #Zwischenwert; 
      RND   ; 
      L     #Zwischenwert; 
      TRUNC ; //      RND   
      L     "DB_PLC_MD_DB20".UDInt._066_MAX_SPINDELDREHZAHL; 
      /D    ; 
      T     #Ist_Drehzahl_Prozentual; 

//Auslastung Hauptspindel

//----------Nennmoment 2-50%-------------------------------

      L     "DB_VIB_SCHNITTSTELLE".Spindellast1; 
      L     5.000000e+001; 
      <=R   ; 
      SPBN  N_50; 

//Max-Drehzahl -14%
      L     #Ist_Drehzahl_Prozentual; 
      L     14; 
      <D    ; 
      SPBN  D_01; 
      L     1; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 
//Max-Drehzahl -55%
D_01: L     #Ist_Drehzahl_Prozentual; 
      L     55; 
      <D    ; 
      SPBN  D_02; 
      L     4; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 
//Max-Drehzahl -100%
D_02: L     #Ist_Drehzahl_Prozentual; 
      L     100; 
      <D    ; 
      SPBN  aus; 
      L     6; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 


//----------Nennmoment<100%-------------------------------

N_50: L     "DB_VIB_SCHNITTSTELLE".Spindellast1; 
      L     1.000000e+002; 
      <R    ; 
      SPBN  N100; 

//Max-Drehzahl -14%
      L     #Ist_Drehzahl_Prozentual; 
      L     14; 
      <D    ; 
      SPBN  D_03; 
      L     2; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 
//Max-Drehzahl -55%
D_03: L     #Ist_Drehzahl_Prozentual; 
      L     55; 
      <D    ; 
      SPBN  aus; 
      L     5; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 

//----------Nennmoment>100%-------------------------------

N100: L     "DB_VIB_SCHNITTSTELLE".Spindellast1; 
      L     1.000000e+002; 
      >=R   ; 
      SPBN  aus; 

//Max-Drehzahl -14%
      L     #Ist_Drehzahl_Prozentual; 
      L     14; 
      <D    ; 
      SPBN  D_04; 
      L     3; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 
//Max-Drehzahl -55%
D_04: L     #Ist_Drehzahl_Prozentual; 
      L     55; 
      <D    ; 
      SPBN  aus; 
      L     5; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      SPA   aus; 
//---------------------------------------------------------

//Dauer_vorheriger_Bereich Spindellast

aus:  L     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      L     "DB_VIB_SCHNITTSTELLE".Spindellast_Bereich_alt; 
      ==I   ; 
      SPB   as1; 

      L     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Spi_Bereich; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast.DauerLetztBereich; 
      L     0; 
      T     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Spi_Bereich; 

      L     "DB_VIB_SCHNITTSTELLE".Spindellast.Bereich; 
      T     "DB_VIB_SCHNITTSTELLE".Spindellast_Bereich_alt; 


as1:  U     "M_Takt_1s"; 
      SPBN  as2; 
      L     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Spi_Bereich; 
      L     1.000000e+000; 
      +R    ; 
      T     "DB_VIB_SCHNITTSTELLE".Zaehl_Dauer_Spi_Bereich; 


as2:  NOP   0; 
NETWORK
TITLE =Spindellauf und WZW an DB106 
//Spindel steht
      U     "DB_ACHSE6_SPINDEL".E_Stat; 
      UN    "DB_ACHSE6_SPINDEL".E_TCPlus; 
      SPBN  hh1; 
      L     5; 
      T     "DB_VIB_SCHNITTSTELLE".Word_for_SPILauf_WZW; 

//Spindel rechts
hh1:  UN    "DB_ACHSE6_SPINDEL".E_Stat; 
      U     "DB_ACHSE6_SPINDEL".E_TCPlus; 
      SPBN  hh2; 
      L     3; 
      T     "DB_VIB_SCHNITTSTELLE".Word_for_SPILauf_WZW; 

//Spindel links
hh2:  UN    "DB_ACHSE6_SPINDEL".E_Stat; 
      UN    "DB_ACHSE6_SPINDEL".E_TCPlus; 
      SPBN  hh3; 
      L     4; 
      T     "DB_VIB_SCHNITTSTELLE".Word_for_SPILauf_WZW; 

//WZW Aktiv
hh3:  U     "M_WZW_Aktiv"; 
      SPBN  hh4; 
      L     1; 
      T     "DB_VIB_SCHNITTSTELLE".Word_for_SPILauf_WZW; 

hh4:  NOP   0; 

NETWORK
TITLE =Ein und Ausblenden des Vibrations-Windows bei Shopmill 
//Window ausblenden bem Einschalten 
      U     "M_5_ter_OB1_Zyklus"; // "M_5_ter_OB1_Zyklus"
      SPBN  a01; 
      L     0; 
      T     "DB_VIB_SCHNITTSTELLE".Anzeige_ein; //Window ausschalten

//Window ausblenden wenn Shopmill geladen wird

a01:  L     "DB_VIB_SCHNITTSTELLE".Anzeige_ein; //Window ausschalten
      L     3; 
      ==I   ; 
      SPBN  a04; 

      U     "DB_CMM_PLC".CMM_OUT.start_up_activ; 
      FP    "M_FP_start_up_shopmill"; 
      SPBN  a04; 
      L     0; 
      T     "DB_VIB_SCHNITTSTELLE".Anzeige_ein; //Window ausschalten
      S     "M_Temp"; 
      SPA   a03; 

a04:  U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      FP    "M_FP_shopmill_activ"; 
      U     "M_Temp"; 
      SPBN  a02; 
      L     3; 
      T     "DB_VIB_SCHNITTSTELLE".Anzeige_ein; //Window ausschalten
      R     "M_FP_start_up_shopmill"; 

a02:  NOP   0; 

      U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      SPBN  a03; 

      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     20; 
      ==I   ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     19; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     21; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     30; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     50; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     90; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     200; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     230; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     2; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_CMM_PLC".CMM_OUT.mask_number; 
      L     4; 
      ==I   ; 
      )     ; 
      =     DB106.DBX   33.0; 

a03:  NOP   0; 
END_FUNCTION

