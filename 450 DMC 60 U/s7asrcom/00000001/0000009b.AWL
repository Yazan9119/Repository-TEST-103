FUNCTION "FC_PS_DrehSt_Pos" : VOID
TITLE =
//$Revision: 1.7 $
//$Date: 2007/07/16 13:14:37CEST $
//$Author: riedlh $
//
//Anordnung der Plätze
//
//1 = Maschinenübergabeplatz
//2 = Platz 2
//3 = Platz 3
//4 = Platz 4
//5 = Rüstplatz
{ S7_language := '7(1) Deutsch (Deutschland)  26.03.2008  08:00:15' }
AUTHOR : SCH
NAME : WZM160
VERSION : 0.1


VAR_INPUT
  EW_Platz : BYTE ;	//Anforderung Platz
  EX_Fahrbefehl : BOOL ;	//Anforderung fahren 
END_VAR
VAR_IN_OUT
  EAX_Fahrbefehl_Fertig : BOOL ;	//Rückmeldung Fahrbefehl abgeschlossen
END_VAR
VAR_TEMP
  T_X_Pos : REAL ;	
  T_Z_Pos : REAL ;	
  T_Typ : BYTE ;	
  T_Platz : INT ;	
  T_MAX_SPEICHERPLATZ : BYTE ;	
END_VAR
BEGIN
NETWORK
TITLE =Auswertung höchster Speicherplatz
//#EW_Platz
//Wert 1 = Übergabeplatz
//.
//Wert 4 = Rüstplatz
//Wert 5 = Speicherplatz 1
//Wert 6 = Speicherplatz 2
//Wert 7 = Speicherplatz 3
//Wert 8 = Speicherplatz 4
//Wert 9 = Speicherplatz 5
//Wert 10 = Speicherplatz 6
//Wert 11 = Speicherplatz 7
//Wert 12 = Speicherplatz 8
//Wert 13 = Speicherplatz 9
//Wert 14 = Speicherplatz 10
//
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS5_AKTIV; 
      SPBN  X001; 
      L     9; 
      SPA   X003; 

X001: U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      SPBN  X002; 
      L     14; 
      SPA   X003; 

X002: L     8; 
X003: T     #T_MAX_SPEICHERPLATZ; 
NETWORK
TITLE =Schrittkette Positionieren
//
//
      UN    #EX_Fahrbefehl; 
      SPBN  STRT; 
      L     0; 
      T     "MB_SKZ_Drehstation"; 
      SET   ; 
      R     "DB_Achs9_DrehSt".MX_Anf_Positionieren; 

STRT: L     "MB_SKZ_Drehstation"; 
      SPL   SK99; 
      SPA   SK00; 
      SPA   SK01; 
      SPA   SK02; 
      SPA   SK03; 

SK99: SPA   MEND; 

// -- Schritt 0 ----------------------------------------------------------------

SK00: UN    #EAX_Fahrbefehl_Fertig; 
      U     #EX_Fahrbefehl; 
      UN    "DB_Achs9_DrehSt".MX_Achse_Faehrt; 

      U(    ; 
      L     #EW_Platz; 
      L     0; 
      >I    ; 
      )     ; 
      SPBN  MEND; 

      U     "DB_LS_POS".Daten_OK; 
      SPB   E001; 
      SET   ; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701806_Pos_Ungueltig; 
      SPA   MEND; 

E001: L     1; 
      T     "MB_SKZ_Drehstation"; 

// -- Schritt 1 ----------------------------------------------------------------
// Platz Ausrechnen

// 0:Maschine,1:Überpl1,2:Überpl2,3:Transportw,4:Ruepl,5-xx:Speicherpl 1 -- xx 

// Rüstplatz
SK01: L     #EW_Platz; 
      L     4; 
      ==I   ; 
      SPBN  E011; 
      L     "DB_LS_POS".Dreh_Station_Pos_2; 
      T     "DB_Achs9_DrehSt".MR_SollPosition; 
      SPA   E012; 

// Übergabeplatz
E011: L     #EW_Platz; 
      L     1; 
      ==I   ; 
      SPBN  E013; 
      L     "DB_LS_POS".Dreh_Station_Pos_3; 
      T     "DB_Achs9_DrehSt".MR_SollPosition; 
      SPA   E012; 

// Speicherplätze
E013: L     #EW_Platz; 
      L     5; 
      >=I   ; 
      U(    ; 
      L     #EW_Platz; 
      L     #T_MAX_SPEICHERPLATZ; 
      <=I   ; 
      )     ; 
      SPBN  MEND; 

      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; // Bei RS10 Abfrage ob unten oder oben
      U(    ; 
      L     #EW_Platz; 
      L     10; 
      >=I   ; 
      )     ; 
      SPB   OBEN; 

// *** Auswertung der unteren Ebene (RS4+RS5 komplett, RS10 unten) ***
      AUF   "DB_LS_POS"; 
      L     #EW_Platz; 
      DEC   5; 
      L     4; 
      *I    ; 
      SLD   3; 
      LAR1  ; 
      L     54; 
      SLD   3; 
      +AR1  ; 
      L     DBD [AR1,P#0.0]; // X Position
      T     "DB_Achs9_DrehSt".MR_SollPosition; 
      SPA   E012; 

// *** Auswertung der Speicherpositionen 5-10 (RS10 oben) ***
OBEN: AUF   "DB_LS_POS"; 
      L     #EW_Platz; 
      DEC   10; 
      L     4; 
      *I    ; 
      SLD   3; 
      LAR1  ; 
      L     120; 
      SLD   3; 
      +AR1  ; 
      L     DBD [AR1,P#0.0]; // X Position
      T     "DB_Achs9_DrehSt".MR_SollPosition; 

E012: SET   ; 
      S     "DB_Achs9_DrehSt".MX_Anf_Positionieren; 

      L     2; 
      T     "MB_SKZ_Drehstation"; 

// -- Schritt 2 ----------------------------------------------------------------
// Warten bis Positioniert

SK02: U     "DB_Achs9_DrehSt".MX_Rueck_Positionieren; 
      UN    "DB_Achs9_DrehSt".MX_Achse_Faehrt; 
      SPBN  MEND; 

      L     3; 
      T     "MB_SKZ_Drehstation"; 

// -- Schritt 3 ----------------------------------------------------------------
// Quittierung setzen

SK03: SET   ; 
      S     #EAX_Fahrbefehl_Fertig; 
      R     "DB_Achs9_DrehSt".MX_Rueck_Positionieren; 

      L     0; 
      T     "MB_SKZ_Drehstation"; 

MEND: NOP   0; 

END_FUNCTION

