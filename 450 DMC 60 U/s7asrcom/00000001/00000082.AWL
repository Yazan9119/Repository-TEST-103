FUNCTION "FC_PV_PRGlesen_NC" : VOID
TITLE =
//$Revision: 1.20 $
//$Date: 2008/03/11 08:59:14CET $
//$Author: riedlh $
VERSION : 0.1


VAR_TEMP
  DB_Nr_1 : WORD ;	
  DB_Nr_2 : WORD ;	
  Z_Ende : DWORD ;	
  BytesIdent : BOOL ;	// alle überprüften Bytes sind identisch
  D_String : BOOL ;	
  ErrorLesenPrg : BOOL ;	
  NDRLesenPrg : BOOL ;	
  Lesen_beendet : BOOL ;	
  StateLesenPrg : WORD ;	
  t_str_dummy : STRING  [28 ];	
  t_b_dummy2 : BOOL ;	
  t_PI_BlockSearch : BOOL ;	
  T_ANZAHL_JOBS : INT ;	//Anzahl der Jobs
END_VAR
BEGIN
NETWORK
TITLE =Lokalvariablen mit 0 vorbesetzen

      U     "m_null"; 
      =     #BytesIdent; 
      =     #D_String; 
      =     #ErrorLesenPrg; 
      =     #NDRLesenPrg; 

NETWORK
TITLE =Auswertung Anzahl der Jobs

      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS5_AKTIV; 
      SPBN  J001; 
      L     12; 
      SPA   J003; 

J001: U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      SPBN  J002; 
      L     12; 
      SPA   J003; 

J002: L     10; 
J003: T     #T_ANZAHL_JOBS; 

NETWORK
TITLE =Satzsuchlauf

      U     "DB_SIEM_KANAL_1".E_BlockSearch; 
      FP    "M_FP_BlockSearch"; 
      =     #t_PI_BlockSearch; 


NETWORK
TITLE =Lesen aktive Programmnummer
//      U     "M_PW_Automatik"; 
      U(    ; 
      O     "DB_SIEM_KANAL_1".A_NCStart; 
      O     #t_PI_BlockSearch; 
      O     "M_PrgLesenNC_wiederh"; 
      )     ; 
      U     "DB_OEMDB2".RS4.Jobbetrieb; 
      U     "M_Automatik_Betrieb"; 
      S     "M_PV_akt_Prg_lesen"; 

      S     "DB_FEHLERMELDUNG".Einlesesperre._700553_Progr_pruefen; 
NETWORK
TITLE =Lesen der aktuellen Programmnummer

      U     "M_PV_akt_Prg_lesen"; 
      =     L     46.0; 
      BLD   103; 
      CALL "FB_SIEM_GET" , "DI_SIEM_GET_PrgKontrolle" (
           Req                      := L     46.0,
           NumVar                   := 2,
           Addr1                    := "DB_NC_VAR".C1_SPARPP_progName1_5,
           Addr2                    := "DB_NC_VAR".C1_SPARPP_workPNameLong,
           Error                    := #ErrorLesenPrg,
           NDR                      := #NDRLesenPrg,
           State                    := #StateLesenPrg,
           RD1                      := "DB_PrgAnwahl".PR_NC,
           RD2                      := "DB_PrgAnwahl".PATH_NC);

      NOP   0; 
NETWORK
TITLE =Lesen_beendet

      U     "M_PV_akt_Prg_lesen"; 
      U     #NDRLesenPrg; 
      =     "M_PrgLesenNCbeendet"; 

NETWORK
TITLE =Programmnummer lesen wiederholen bei Fehler

      U     "M_PrgLesenNC_Fehler"; 
      UN    #ErrorLesenPrg; 
      =     "M_PrgLesenNC_wiederh"; 
NETWORK
TITLE =Programmnummer lesen Fehler gespeichert

      U     #ErrorLesenPrg; 
      U     "M_PV_akt_Prg_lesen"; 
      S     "M_PrgLesenNC_Fehler"; 
      U     "M_PrgLesenNC_wiederh"; 
      R     "M_PrgLesenNC_Fehler"; 
      NOP   0; 
NETWORK
TITLE =Rücksetzen: lesen Programmnr. aktives laufendes Programm

      U(    ; 
      O     #ErrorLesenPrg; 
      O     #NDRLesenPrg; 
      )     ; 
      U     "M_PV_akt_Prg_lesen"; 
      R     "M_PV_akt_Prg_lesen"; 

NETWORK
TITLE =Keine Programmkontrolle, wenn Programm M60 angewaehlt ist

      U(    ; 
      U     "M_PrgLesenNCbeendet"; 
      SPBNB _003; 
      CALL "FC_UT_STRING_VGL" (
           String_1                 := "DB_PrgAnwahl".PR_NC,
           String_2                 := "DB_STRINGPW".FileM60,
           Identisch                := "M_M60_angewaehlt");
_003: U     BIE; 
      )     ; 
      U     "M_M60_angewaehlt"; 
      SPBNB _008; 
      CALL "FC_UT_STRING_VGL" (
           String_1                 := "DB_PrgAnwahl".PATH_NC,
           String_2                 := "DB_STRINGPW".PfadM60,
           Identisch                := "M_M60_angewaehlt");
_008: NOP   0; 
NETWORK
TITLE =Stringerzeugung aktuelle Programmauswahl

      U(    ; 
      U(    ; 
      U     "m_null"; 
      =     L     46.0; 
      BLD   103; 
      U     "M_PrgLesenNCbeendet"; 
      UN    "M_M60_angewaehlt"; 
      SPBNB _009; 
      CALL "FC_Prg_Anwahl_1" (
           i_bPalwechsel            := L     46.0,
           i_iPWart                 := 0,
           iAnzahlJobs              := #T_ANZAHL_JOBS,
           o_strPrg                 := "DB_PrgAnwahl".PR_VGL,
           o_strPfad                := "DB_PrgAnwahl".PATH_VGL,
           o_test                   := #t_str_dummy,
           retWert                  := #t_b_dummy2);
_009: U     BIE; 
      )     ; 
      SPBNB _00a; 
      CALL "FC_UT_STRING_VGL" (
           String_1                 := "DB_PrgAnwahl".PR_NC,
           String_2                 := "DB_PrgAnwahl".PR_VGL,
           Identisch                := #BytesIdent);
_00a: U     BIE; 
      )     ; 
      U     #BytesIdent; 
      SPBNB _00b; 
      CALL "FC_UT_STRING_VGL" (
           String_1                 := "DB_PrgAnwahl".PATH_NC,
           String_2                 := "DB_PrgAnwahl".PATH_VGL,
           Identisch                := #BytesIdent);
_00b: NOP   0; 
NETWORK
TITLE =700433 "VS-HALT, Prgn-Nr auf Palette falsch oder kein M160"

      U     "M_Reset_Taste"; 
      R     "DB_FEHLERMELDUNG".VS_Halt._700433_Prg_auf_Pal_fals; 

      U     "M_PrgLesenNCbeendet"; 
      UN    "M_M60_angewaehlt"; 
      UN    #BytesIdent; 

      S     "DB_FEHLERMELDUNG".VS_Halt._700433_Prg_auf_Pal_fals; 

      NOP   0; 
NETWORK
TITLE =700553 "Einl.SP, Programm prüfen"

      U(    ; 
      O     "M_PrgLesenNCbeendet"; 
      O     "M_Reset_Taste"; 
      )     ; 
      UN    "DB_FEHLERMELDUNG".VS_Halt._700433_Prg_auf_Pal_fals; 
      R     "DB_FEHLERMELDUNG".Einlesesperre._700553_Progr_pruefen; 
END_FUNCTION

