FUNCTION "FC_WZW_STATUS" : VOID
TITLE =
//$Revision: 1.63 $
//$Date: 2008/10/20 08:21:14CEST $
//$Author: sth $
//
//V0.2 / 24.08.2000 / SCH
//- Modul überarbeitet
//-------------------------------------------------------------------------------
//Änderung: Datum      / Abteilung / Name / Version x.y
//Änderung: 22.06.2006 /          / slh   / V0.2
//        :Lokaldaten laden/retten mit SFC20 BLKMOVE, "DB_WWZ".TMDR löschen mit
//        :SFC21 FILL; Doppelwortzugriffe entfernt (Absolutadressen vermeiden)
//        :
//Änderung:           /          /        / V
//        :
//-------------------------------------------------------------------------------
AUTHOR : SJA
FAMILY : DM_WZW
VERSION : 0.2


VAR_INPUT
  E_Enabled : BOOL ;	//Modul Freigabe
END_VAR
VAR_TEMP
  T_Flanke_SKR : BOOL ;	//Flanke SKR
  tx_frg_hub_ast : BOOL ;	
  tx_frg_reinigung : BOOL ;	
  tx_wzk_grdst : BOOL ;	
  tx_wzsp_zu : BOOL ;	
  tx_XAx_Frg : BOOL ;	
  tx_YAx_Frg : BOOL ;	
  tx_XAx_VP : BOOL ;	
  tx_XAx_faehrt : BOOL ;	
  tx_YAx_faehrt : BOOL ;	
  tx_Tuere_Frg : BOOL ;	
  tx_Verr_Grdst : BOOL ;	
  tx_frg_grf : BOOL ;	
  tx_frg_M19 : BOOL ;	
  tx_Y_WP_FRG : BOOL ;	
  tx_frg_hub_gst : BOOL ;	
  tx_frg_wzsp : BOOL ;	
  tx_XAx_frg_ast : BOOL ;	
  tx_frg_reset : BOOL ;	
  tx_frg_verriegelung : BOOL ;	
  tx_frg_regal : BOOL ;	
  tx_Sp_leer : BOOL ;	
  tx_Y_WP_Ausw : BOOL ;	
  tx_Grf2_verriegeln : BOOL ;	
  tx_X_WP_WFK : BOOL ;	
  tx_Start_M19Pos : BOOL ;	
  tw_iw_wmr_tnr_umsetzen : INT ;	
  tx_wz_spa_geloest : BOOL ;	
  tx_wz_spa_gespannt : BOOL ;	
  beweg_nr : INT ;	
  s : "UDT_WWZ_0";	//statische Daten für Fc
  svAr1 : DWORD ;	
  Meld : STRUCT 	
   noChRset : BOOL ;	//WzwGf:Kanal 1 muss im Resetzustand sein
   noChAkt : BOOL ;	//WzwGf:Kanal 1 darf nicht aktiv sein
   WwGfRdy : BOOL ;	//Wzw.bereits in Grundstlg.
   noRett : BOOL ;	//kein autom.WzwGf. bei aktivem Rettungsbild
   noWwBew : BOOL ;	//kein autom.WzwGf.:Wzw.wurde im Einrichten bewegt
   MaTypNiO : BOOL ;	//kein autom.WzwGf.:MaschTyp muss 3070 oder 3071 sein (SwCam X-ArbRaum)!
   SpiNoGl : BOOL ;	//fehlende WsB:Spi.nicht gelöst
   SpiNoGs : BOOL ;	//fehlende WsB:Spi.nicht gespannt
   XnoWwPos : BOOL ;	//fehlende WsB:X-Achse nicht in WzwPos.
   bx_1 : BOOL ;	
   bx_2 : BOOL ;	
   bx_3 : BOOL ;	
   bx_4 : BOOL ;	
   bx_5 : BOOL ;	
   bx_6 : BOOL ;	
   bx_7 : BOOL ;	
  END_STRUCT ;	
  LPTMD0 : BYTE ;	//Anzahl leere ZwiSpPlätze bei gespeichertem WzZwiSp
  LP_akt : BYTE ;	//Anzahl leere ZwiSpPlätze bei aktuellem WzZwiSp
  loopctr : BYTE ;	
  WertInt : INT ;	//Zwischenspeicher für Integerwert
  iReg : STRUCT 	//Signale von Regal
   WziGr : BOOL ;	//Regalgrf.Wz vorhanden (geschloss.mit Wz)
   UeBer : BOOL ;	//Regalgreifer in Übergabebereich
   WPos : BOOL ;	//Regalgreifer steht bei Übergabeposition
   VPos : BOOL ;	//Regalgreifer steht bei Werkzeugvorposition (Aushub 60mm)
   noStoe : BOOL ;	//Keine Störung an Regal
   bereit : BOOL ;	//Regal bereit für Transport
   GrOffen : BOOL ;	//Regalgreifer offen
   GrZuOWz : BOOL ;	//Regalgreifer geschlossen ohne WZ
   bx : BOOL ;	
   bx_1 : BOOL ;	
   bx_2 : BOOL ;	
   bx_3 : BOOL ;	
   bx_4 : BOOL ;	
   bx_5 : BOOL ;	
   bx_6 : BOOL ;	
   bx_7 : BOOL ;	
  END_STRUCT ;	
  LOp0 : BOOL ;	//lokaler Operationsmerker 0, Zwischenmerker
  LOp1 : BOOL ;	//lokaler Operationsmerker 1, Zwischenmerker
  LOp2 : BOOL ;	//lokaler Operationsmerker 2, Zwischenmerker
  Fa : BOOL ;	//Freigabe Ausgänge
  Srw : BOOL ;	//Schrittwechsel
  SKw : BOOL ;	//Schrittkette weiterschalten
  nK0 : BOOL ;	//Schrittkette im Sr.0 bzw.kein Sr gesetzt
  DKons : BOOL ;	//TM-Daten konsistent (aktu ZwiSp==gespeicherter ZwiSp)
  NCausw : BOOL ;	//L164 auswechseln war aktiv
  NCeinw : BOOL ;	//L164 einwechseln war aktiv
  NCvoll : BOOL ;	//L164 vollwechseln war aktiv
  TNrSpi0 : BOOL ;	//TNr.von Spindel = 0
  FpSpiGs : BOOL ;	//pos.Flanke:Spindel gespannt
  FpSpiGeloest : BOOL ;	//pos.Flanke:Spindel geloest
  XAx_VP : BOOL ;	//X-Achse im Bereich Wzw-Vorpos.(aus SwNock.15)
  noWasch : BOOL ;	//Waschen abgewählt(aus Db20.dbw24 Wert0=aus)
  noBruKtr : BOOL ;	//Bruchkontrolle abgewählt(aus Db20.dbw20 Wert0=aus)
  SfSpiZNcS : BOOL ;	//SpindelWzSpannvorr. in von Nc geforderter Stlg.
  SiemRegal : BOOL ;	//Option Siemens-Regal, aus DB20.dbx407.7=DB20UDHex._07_BIT7_Siemens_Regal
  VbMOReg : BOOL ;	//gemeinsame Vorbedingung weiter Gf.mit/ohne Regal
  fpiReqGf : BOOL ;	//Flanke Anford.Grundstlg.fahren
  tx_GRF_FRG_ARST : BOOL ;	
  tx_GRF_FRG_GRDST : BOOL ;	
  t_WZW_VKETTE_OHNE_TPU : BOOL ;	
  t_Frg_Greifer_drehen : BOOL ;	
  t_Frg_Mag_fahren : BOOL ;	
  t_XRichtung_AST : BOOL ;	
  t_XRichtung_GST : BOOL ;	
  noVorAbl : BOOL ;	
  t_PI_Greifer_eingefahren : BOOL ;	//positiver Impuls Greifer eingefahren
  t_X_Achse_Fahrbe_gedreht : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =WZW: Reset aller Module des WZW
// Netzwerk-Übersicht
// ==================
// NW 1: WZW: Reset aller Module des WZW
// NW 2: 2nd software limit switch plus
// NW 3: 2nd software limit switch minus
// NW 4: WZW: Werkzeug an Magazinposition ist entriegelt
// NW 5: Merker ob ein WZ im Greifer ist
// NW 6: Option "Siemens-Regal" gesetzt
// NW 7: Eingangssignale von Regal laden
// NW 8: Steuerung hochgelaufen und bereit
// NW 9: PLC an NC: Umsetzen Regal
// NW 10: Werkzeugwechsler aktiv 
// NW 11: WZW: Greifer 1 Position Magazin
// NW 12: X im Bereich Wzw-Vorpos
// NW 13: Service-Funktion Magazin drehen Richtungstasten
// NW 14: Service-Funktion Greifer drehen Richtungstasten
// NW 15: Rettungsmenü Werkzeugwechsler
// NW 16: Rettungsmenü Werkzeugwechsler 2
// NW 17: Rettungsmenü Werkzeugwechsler 3
// NW 18: Rettungsmenü Omron Regal
// NW 19: Rettungsmenü Winkelfräskopf
// NW 20: WZW: Grundstellung
// NW 21: WZW: Grundstellung für Oem-Anzeige und autom.Gst.fahren
// NW 22: Ausgang Werkzeugverriegelung verriegeln
// NW 23: PLC an NC: Winkelfräskopf Späneabdeckung montiert
// NW 24: Hubausgänge beim Einschalten setzen
// NW 25: X-Achse auf Wechselpos, X-Achse ausserhalb von WZW-Klappe
// NW 26: ab hier:Werkzeugwechsler Grundstellung fahren
// NW 27: Lokaldaten laden 
// NW 28: Signale retten bei Flanke "Wz.vorbereitet" od."M_WZ_Rdy_Ablegen"
// NW 29: WzGrfStlg. bei Spindel lösen (nicht BaJog) speichern
// NW 30: letzte Schrittnr.aus L164 $A_DBB[103] speichern
// NW 31: letzter von Nc angeforderte Spindelbefehl:Spi.lösen
// NW 32: SpindelWzSpannvorr. in von Nc geforderter Stlg.
// NW 33: pos.Flanke: Spindel gespannt
// NW 34: Frg.TM-Daten bei WzwReset sichern
// NW 35: Lokalvariable initialisieren
// NW 36: WzWechsler wurde im Jog bewegt
// NW 37: Erfassung Anzahl Leerplätze gespeich+aktu Wz-Zwischenspeicher
// NW 38: int.T-Nr.von aktu.ZwiSp.Gr1 war auch bei "Wz.vorbereitet" vh
// NW 39: int.T-Nr.von aktu.ZwiSp.Gr1/2 war auch bei "Wz.vorbereitet" vh
// NW 40: WzZwiSpDaten konsistent
// NW 41: L164 einwechseln war aktiv
// NW 42: L164 auswechseln war aktiv
// NW 43: L164 vollwechseln war aktiv
// NW 44: Schrittkette rücksetzen
// NW 45: wenn Bedingung erfüllt ... Schrittkette rücksetzen
// NW 46: Schrittkette im Sr0 bzw. kein Sr gesetzt
// NW 47: Start Wzw Grundstlg. fahren
// NW 48: Start Wzw Grundstlg. fahren
// NW 49: Reset Start der Wartezeit
// NW 50: Schrittkette weiterschalten
// NW 51: Gf:Wzw Reset auslösen
// NW 52: Gf:Spi.in den zuletzt von Nc geford.Zust.stell.
// NW 53: Gf nach Einwechseln:Gr1 --> Mag/Spi fahren
// NW 54: Gf nach Einwechseln:Gr1 --> Mag/Spi fahren
// NW 55: Gf nach Einwechseln:Spi.spannen
// NW 56: Gf nach Einwechseln:Gr.2 entriegeln
// NW 57: Gf nach Auswechseln:Gr1 --> Mag/Spi fahren
// NW 58: Gf nach Auswechseln:Gr1 --> Mag/Spi fahren
// NW 59: Gf nach Auswechseln:Spi.spannen
// NW 60: Gf nach Auswechseln:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.
// NW 61: Gf nach Auswechseln:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.
// NW 62: Gf nach Vollwechsel:umspeichern Spi-->Gr
// NW 63: Gf nach Vollwechsel:umspeichern Spi-->Gr
// NW 64: Gf nach Vollwechsel:Gr1 --> Mag fahren
// NW 65: Gf nach Vollwechsel:Gr1 --> Mag fahren
// NW 66: Gf nach Vollwechsel:Gr1 --> Spi fahren
// NW 67: Gf nach Vollwechsel:Gr1 --> Spi fahren
// NW 68: Gf nach Vollwechsel:Spi.spannen
// NW 69: Gf nach Vollwechsel:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.
// NW 70: Gf nach Vollwechsel:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.
// NW 71: Gf nach Wz.vorbereiten:WzGr.zur Grundstlg.
// NW 72: Gf nach Wz.vorbereiten:WzGr.zur Grundstlg.
// NW 73: Gf:Bruchktrl.zurück
// NW 74: Gf: Wz-Reinigung zurück
// NW 75: Gf ohne Regal: Wz-Hub zurück
// NW 76: Gf mit Regal nach vorber.:Regalgrf.Vorpos.an-/fertigfahren
// NW 77: Gf mitRegal nach Wz ablegen:Regalgrf.Pos.an-/fertigfahren
// NW 78: Gf mitRegal nach Wz ablegen:umspeichern Gr[Mag]->Mag
// NW 79: Gf mitRegal nach Wz ablegen:umspeichern Gr[Mag]->Mag
// NW 80: Gf mit Regal:WzGrf.2 entriegeln
// NW 81: Gf mit Regal,kein Wz.vorber/ablegen:Wz-Hub zurück
// NW 82: Gf mit Regal:Wz-Hub zurück
// NW 83: Gf mit Regal:Regalgrf.zur Gasse bzw.Regal Init/Gst.fahren
// NW 84: Gf: Wz-Verriegelung zurück
// NW 85: Gf: X-Achse zum Arbeitsraum
// NW 86: Gf: Wzw-Tür schliessen
// NW 87: Gf fertig, Ende SrKette
// NW 88: Ansteuerung Wartezeit TWa
// NW 89: Ansteuerung Überwachungszeit TUe
// NW 90: Befehlsausgabe (BefA):umspeichern Greifer 1 zur Spindel
// NW 91: BefA:umspeichern Greifer 2 zur Spindel
// NW 92: BefA:umspeichern Spindel zu Greifer 1
// NW 93: BefA:umspeichern Spindel zu Greifer 2
// NW 94: BefA:umspeichern Grf.[Mag]->Regalmagazin
// NW 95: BefA:WzwRset auslösen
// NW 96: Wzw Grundstlg.fahren:Spi.in den zuletzt von Nc geford.Zust.stell
// NW 97: BefA:Gr.1 zur Spindel fahren
// NW 98: BefA:Gr.1 zum Magazin fahren
// NW 99: BefA:Spindel spannen
// NW 100: BefA:Grf.2 entriegeln
// NW 101: BefA:Bruchkontrolle zurück (vorerst nicht benutzt)
// NW 102: BefA:Wz-Reinigung zurück
// NW 103: BefA:Wzw-Hub zurück
// NW 104: BefA:Regalgrf.Vorpos (ca.60mm über Wechselpos) anfahren
// NW 105: BefA:Regalgrf.Wechselpos anfahren
// NW 106: BefA:Regalgrf. zur Gasse bzw. Regal Init/Gst.anfahren
// NW 107: BefA:Wz-Verriegelung am Übergabeplatz zurück
// NW 108: BefA:X-Achse freifahren zum Arbeitsraum
// NW 109: BefA:Wzw-Tür schliessen
// NW 110: BefA:Halt Asup
// NW 111: Bedienungshinweise
// NW 112: Anzeige fehlende Weiterschaltbedingungen
// NW 113: Lokaldaten retten
//
      U     "M_WZW_Aktiv"; 
      R     "M_WZW_Reset_Module"; 

      O     "M_WZW_Prozess_Aktiv"; // Prozess Aktiv und
      O     "M_WZW_Err"; // Fehler
      ON    "M_WZW_Grdst"; 
      O     "DB_NC_PLC".WZW_NC_Aktiv; 
      O     "M_Handbetrieb"; 
      U     "M_Reset_Taste"; // oder Reset
      O     "M_3_ter_OB1_Zyklus"; // Initialisierung
      S     "M_WZW_Reset"; // Merker Reset setzen

      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.WZW_VKETTE_OHNE_TPU; 
      =     #t_WZW_VKETTE_OHNE_TPU; 

      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.WZW_HORIZONTALE_KETTE; 
      UN    #t_WZW_VKETTE_OHNE_TPU; 
      ON    #E_Enabled; // Modul freigegeben
      BEB   ; 

NETWORK
TITLE =2nd software limit switch plus
//Zweiter Softwareendschalter Plus aktiv sobald Türe offen und BA 2,3 oder 4 
//(--> nicht bei H-Maschinen)
      O(    ; 
      U     "DB_OEM".OEM_WZW_REttbildaktiv; 
      O     "DB_OEM".OEM_WZW2_Rettbildaktiv; 
      O     "DB_OEM".OEM_PW2_Rettbildaktiv; 
      O     "DB_OEM".OEM_Winkelkopfrettaktiv; 
      U     "M_Handbetrieb"; 
      )     ; 
      O     "M_PW_Aktiv"; 
      O(    ; 
      O     "M_WZW_Aktiv"; 
      O     "DB_NC_PLC".WZW_NC_Aktiv; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      )     ; 
      O     "m_wwgf_XArbRaum"; 
      O(    ; 
      U     "M_Einrichtbetrieb"; 
      O     "M_3Te_Betriebsart"; 
      O     "M_4Te_Betriebsart"; 
      UN    "M_Spritz_Tuer_Zu"; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      )     ; 
      =     "DB_ACHSE1_X".A_SWLimit2Plus; 

NETWORK
TITLE =2nd software limit switch minus
//Zweiter Softwareendschalter Minus aktiv
      O(    ; 
      U     "DB_OEM".OEM_WZW_REttbildaktiv; 
      O     "DB_OEM".OEM_WZW2_Rettbildaktiv; 
      O     "DB_OEM".OEM_PW2_Rettbildaktiv; 
      O     "DB_OEM".OEM_Winkelkopfrettaktiv; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      )     ; 
      O     "M_PW_Aktiv"; 
      O     "M_WZW_Aktiv"; 
      O     "DB_NC_PLC".WZW_NC_Aktiv; 
      O     "DB_NC_PLC".MANWZW_NC_Aktiv; 
      O     "m_wwgf_XArbRaum"; 
      =     "DB_ACHSE1_X".A_SWLimit2Minus; 

NETWORK
TITLE =WZW: Werkzeug an Magazinposition ist entriegelt
//Positionen der Werkzeugverriegelung auswerten
//Werkzeug an Magazinposition ist entriegelt
      U     "I_TM_MAG_TOOL_UNLOCK"; 
      UN    "I_TM_MAG_TOOL_LOCK"; 
      =     "M_TM_MAG_TOOL_UNLOCK"; 

//Werkzeug an Magazinposition ist verriegelt
      UN    "I_TM_MAG_TOOL_UNLOCK"; 
      U     "I_TM_MAG_TOOL_LOCK"; 
      =     "M_TM_MAG_TOOL_LOCK"; 

//Werkzeug am Rüstplatz ist entriegelt
      U     "I_TM_TLOAD_TOOL_UNLOCK"; 
      UN    "I_TM_TLOAD_TOOL_LOCK"; 
      =     "M_TM_TLOAD_TOOL_UNLOCK"; 

//Werkzeug am Rüstplatz ist verriegelt
      UN    "I_TM_TLOAD_TOOL_UNLOCK"; 
      U     "I_TM_TLOAD_TOOL_LOCK"; 
      =     "M_TM_TLOAD_TOOL_LOCK"; 

NETWORK
TITLE =Merker ob ein WZ im Greifer ist
//Meldung WZ im Greifer wird ausgegeben
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     0; 
      <>I   ; 
      =     "M_SPI_belegt"; 

      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      L     0; 
      <>I   ; 
      =     "M_WZGr1_belegt"; 

      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      L     0; 
      <>I   ; 
      =     "M_WZGr2_belegt"; 

      U     "M_WZGr1_belegt"; 
      O     "M_WZGr2_belegt"; 
      =     "DB_REMANENT".WZ_Im_Greifer; 

NETWORK
TITLE =Option "Siemens-Regal" gesetzt

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      =     #SiemRegal; 
NETWORK
TITLE =Eingangssignale von Regal laden

      U     "M_WZM_Regal_angewaehlt"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_offen; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_zu_ohne_WZ; 
      =     #iReg.WziGr; 
      U     L     45.0; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Uebergabeber; 
      =     #iReg.UeBer; 
      U     L     45.0; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Vorposition; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      =     #iReg.WPos; 
      U     L     45.0; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Vorposition; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      =     #iReg.VPos; 
      U     L     45.0; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Keine_Stoerung_Regal; 
      =     #iReg.noStoe; 
      U     L     45.0; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Regal_bereit; 
      =     #iReg.bereit; 
      U     L     45.0; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_offen; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_zu_ohne_WZ; 
      =     #iReg.GrOffen; 
      U     L     45.0; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_offen; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_zu_ohne_WZ; 
      =     #iReg.GrZuOWz; 
NETWORK
TITLE =Steuerung hochgelaufen und bereit

      U     "M_WZM_Regal_angewaehlt"; 
      U     "DB_SIEM_NCK".E_MMCBTSSready; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.Steuerung_bereit; 
NETWORK
TITLE =PLC an NC: Umsetzen Regal

      L     "DB_SCHNITTST_OMRON".IW_WMR_TNR_UMSETZEN; 
      SRW   8; 
      L     "DB_SCHNITTST_OMRON".IW_WMR_TNR_UMSETZEN; 
      SLD   24; 
      SRD   16; 
      OW    ; 
      T     "DB_NC_PLC".TNR_REGAL_UMSETZEN; 

NETWORK
TITLE =Werkzeugwechsler aktiv 

      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      L     "DI_WZV_ABL_REGAL".Schritt; 
      L     0; 
      <>I   ; 
      )     ; 
      O(    ; 
      L     "B_SKZ_Ablauf"; 
      L     0; 
      <>I   ; 
      )     ; 
      SAVE  ; 
      =     "DB_FEHLERMELDUNG".Meldung._702146_WZW_aktiv; 

      U     BIE; 
      O     "DI_WZV_ABL_REGAL".Req_Regal_Tx; 
      O(    ; 
      U     "M_WZW_Aktiv"; 
      U     "DI_WZV_ABL_REGAL".A_Anf_change_M6; 
      )     ; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZ_Uebergabe_aktiv; 

NETWORK
TITLE =WZW: Greifer 1 Position Magazin
//Endlagen an NC melden
      U     "I_WW_1GRF_MAG"; 
      UN    "I_WW_1GRF_SPI"; 
      O     "DB_SIEM_NCK".E_SWCamPlus[30]; 
      =     "M_WZW_Gre1_Pos_Mag"; 
      =     "DB_NC_PLC".WZW_Grei2_SPi; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZ_Greifer1_in_WP; 


      UN    "I_WW_1GRF_MAG"; 
      U     "I_WW_1GRF_SPI"; 
      O     "DB_SIEM_NCK".E_SWCamPlus[31]; 
      =     "M_WZW_Gre1_Pos_Spi"; 
      =     "DB_NC_PLC".WZW_Grei1_SPi; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZ_Greifer2_in_WP; 


//Greifer Grundstellung
      U     "M_WZW_Gre1_Pos_Mag"; 
      X     "M_WZW_Gre1_Pos_Spi"; 
      =     "M_WZW_Greifer_OK"; 

//Greifer 2 Entriegelung
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  kent; 
      U     "I_WW_GRF_ENTRIEGELT"; 
      =     "DB_NC_PLC".WZW_Grf2_entriegelt; 
      NOT   ; 
      =     "DB_NC_PLC".WZW_Grf2_verriegelt; 
kent: NOP   0; 

//Werkzeugwechslertüre
      U     "I_WW_1_Klappe_auf"; 
      UN    "I_WW_1_Klappe_zu"; 
      =     "DB_NC_PLC".WZW_Tuere_offen; 

//Positionen der Querhubachse auswerten
//Hub am Magazin

      UN    "I_WW_1_ZYL_GST"; 
      U     "I_WW_1_ZYL_WZM"; 
      O     ; 
      UN    "I_TC_SPIPOS"; 
      U     "I_TC_MAGAZINPOS"; 
      =     "M_WZW_Hub_Magazin"; 

//Greifer in Spindelposition an Zyklus
      U     "M_WZW_Hub_GrdSt"; 
      L     S5T#100MS; 
      SA    "Ta_TPU_UEB_ENTPR"; 
      U     "Ta_TPU_UEB_ENTPR"; 
      =     "DB_NC_PLC".WZW_TPU_in_Uebergabe; 

//Hub Grundstellung

      U     "I_WW_1_ZYL_GST"; 
      UN    "I_WW_1_ZYL_WZM"; 
      O     ; 
      U     "I_TC_SPIPOS"; 
      UN    "I_TC_MAGAZINPOS"; 
      =     "M_WZW_Hub_GrdSt"; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZW_Hub_in_Grdst; 
      =     "DB_NC_PLC".WZW_Hub_Grdst; 

//WZ-Spannerzustände an NC
      U     "M_WZ_Spanner_Auf"; 
      UN    "M_WZ_Spanner_Zu"; 
      =     "DB_NC_PLC".WZW_Spanner_Auf; 

      U     "M_WZ_Spanner_Zu"; 
      =     "DB_NC_PLC".WZW_Spanner_Zu; 


//      U     "M_WZW_Aktiv"
      U     "M_WZW_Vorber_laeuft"; 
      O     "M_WZW_Ausw"; 
      O     "DB_DM_M_FUNKTION".MX_M[283]; 
      O     "DB_DM_M_FUNKTION".MX_M[284]; 
      O(    ; 
      UN    "M_WZM_Regal_angewaehlt"; 
      U     "DI_TM_T_BEFEHL".Req_Tx; 
      O(    ; 
      L     "B_SKZ_Ablauf"; 
      L     0; 
      <>I   ; 
      )     ; 
      )     ; 
      O(    ; 
      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      U     "DI_WZV_ABL_REGAL".Req_Tx; 
      O(    ; 
      L     "DI_WZV_ABL_REGAL".Schritt; 
      L     0; 
      <>I   ; 
      )     ; 
      )     ; 
      )     ; 
      O     ; 
      U     "M_WZW_Aktiv"; 
      UN    #t_WZW_VKETTE_OHNE_TPU; 
      L     S5T#1S; //1s
      SA    "Ta_WZW_Aktiv"; 
      U     "Ta_WZW_Aktiv"; 
      =     "DB_NC_PLC".WZW_PLC_Aktiv; // "DB_NCPlc_DB70".WZW_310

//T-Funktionsersetzung sperren solange WZ-Vorbereitung läuft
      U     "M_WZW_Vorber_laeuft"; 
//      O     "M_WZW_VORG_AUSWERTUNG"
      L     S5T#1S; 
      SA    "Ta_Vorbereiten_aktiv"; 

      U     "Ta_Vorbereiten_aktiv"; 
      =     "DB_NC_PLC".WZW_Vorbereiten_aktiv; 

      U     "M_WZW_Ausw"; 
      O     "DB_DM_M_FUNKTION".MX_M[283]; 
      O     "DB_DM_M_FUNKTION".MX_M[284]; 
      L     S5T#1S; //1s
      SA    "Ta_WZ_ablegen_aktiv"; 
      U     "Ta_WZ_ablegen_aktiv"; 
      =     "DB_NC_PLC".WZW_Ablegen_aktiv; 

      U     "TMSpindleIF".IFNo[1]; 
      U     "TMSpindleIF".IF[1].Prepare; 
      O     ; 
      U     "M_MAG_Laeuft"; 
      UN    "DB_NC_PLC".WZW_WZ_Vorbereitet; 
      O     "M_WZW_Vorber_laeuft"; 
      L     S5T#500MS; 
      SA    "Ta_T_Prepare_aktiv"; 
      U     "Ta_T_Prepare_aktiv"; 
      =     "DB_NC_PLC".WZW_T_Prepare_aktiv; 

//Abspeicher der Bereitstellungsnummer für WZV
      U     "M_WZW_Gre1_Pos_Mag"; 
      SPBN  A01; 
      L     2; 
      T     "MW_Nr_Bereitst"; 
      SPA   A02; 

A01:  U     "M_WZW_Gre1_Pos_Spi"; 
      SPBN  A02; 
      L     3; 
      T     "MW_Nr_Bereitst"; 

//Informationen für Regalmagazin (Greiferpositionen)
A02:  U     "M_WZM_Regal_angewaehlt"; 
      SPBN  n3a; 

      U     "M_WZW_Gre1_Pos_Mag"; 
      U     "M_WZW_Hub_Magazin"; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZ_Greifer1_in_WP; 

      U     "M_WZW_Gre1_Pos_Spi"; 
      U     "M_WZW_Hub_Magazin"; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.WZ_Greifer2_in_WP; 

//      U     "DB_OEM".OEM_WZW_REttbildaktiv
//      UN    "M_WZW_Hub_GrdSt"
//      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung

n3a:  NOP   0; 
NETWORK
TITLE =X im Bereich Wzw-Vorpos

      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      UN    "DB_SIEM_NCK".E_SWCamPlus[15]; 
      O     ; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3070_AKTIV; 
      U     "DB_SIEM_NCK".E_SWCamPlus[15]; 
      =     "M_WW_X_imArbeitsraum"; 
      =     #tx_XAx_VP; 
      =     #XAx_VP; 
NETWORK
TITLE =X-Achse Verfahrbereich ist gedreht
//Bei H-Maschinen oder P-Maschinen mit Schwenkrundtisch
//X+ --> Richtung WZW-Wand
//X- --> Richtung Kabinentür
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      O(    ; 
      L     "DB_PLC_MD_DB20".UDInt._043_ANWAHL_TISCH; 
      L     2; 
      ==I   ; 
      )     ; 
      =     #t_X_Achse_Fahrbe_gedreht; 
NETWORK
TITLE =Service-Funktion Magazin drehen Richtungstasten

      U     "DB_OEM".OEM_WZW3_Rettbildaktiv; 
      U     "M_Handbetrieb"; // JOG
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      =     #t_Frg_Greifer_drehen; 

      U     #t_Frg_Greifer_drehen; 
      U     "DB_EINRICHTFUNKTION".Bewegung_59_Minus; 
      =     "DB_Achs11_VMAG_Greifer".MX_FahrAnf_Minus; 

      U     #t_Frg_Greifer_drehen; 
      U     "DB_EINRICHTFUNKTION".Bewegung_59_Plus; 
      =     "DB_Achs11_VMAG_Greifer".MX_FahrAnf_Plus; 
NETWORK
TITLE =Service-Funktion Greifer drehen Richtungstasten

      U     "DB_OEM".OEM_WZW3_Rettbildaktiv; 
      U     "M_Handbetrieb"; // JOG
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      U     "M_TM_MAG_TOOL_LOCK"; 
      U     "M_TM_TLOAD_TOOL_LOCK"; 
      U(    ; 
      L     "DB_REMANENT".A7_INDEX_ASIGN_POS_TAB; 
      L     0; 
      ==I   ; 
      O     "M_WZW_Hub_GrdSt"; 
      )     ; 
      =     #t_Frg_Mag_fahren; 
      SPBN  _dse; 

      U     #t_Frg_Mag_fahren; 
      U     "DB_EINRICHTFUNKTION".Bewegung_58_Minus; 
      =     "DB_ACHS7_WZM".MX_FahrAnf_Minus; 

      U     #t_Frg_Mag_fahren; 
      U     "DB_EINRICHTFUNKTION".Bewegung_58_Plus; 
      =     "DB_ACHS7_WZM".MX_FahrAnf_Plus; 

_dse: NOP   0; 
NETWORK
TITLE =Rettungsmenü Werkzeugwechsler
//****************** Zeile 1 ***********************************************
//Autorettung
      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "m_null",
           Freigabe_GST_Hand        := "m_null",
           Endlage_AST              := "m_null",
           Endlage_GST              := "m_null",
           Ventil_AST               := "m_null",
           Ventil_GST               := "m_null",
           Bewegungsnummer          := 1);

//****************** Zeile 2 ***********************************************
//Werkzeugwechsler Hub
      UN    "M_MAG_Laeuft"; 
      U(    ; 
      O     "M_WZW_Greifer_OK"; // und die Greifer stehen richtig
      O     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      )     ; 
      U(    ; 
      UN    "M_WZM_Regal_angewaehlt"; 
      O     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Uebergabeber; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      ==I   ; 
      O     "I_WZB_Parkstellung"; // Bruch in Parkstellung
      )     ; 
      U(    ; 
      UN    "M_WZGr1_belegt"; 
      UN    "M_WZGr2_belegt"; 
      O     ; 
      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      UN    "I_WW_Uebergabeplatz"; 
      ON    #t_WZW_VKETTE_OHNE_TPU; 
      )     ; 
      O     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      UN    "DB_FEHLERMELDUNG".Meldung._702146_WZW_aktiv; 
      UN    "I_TM_TST_OCC"; 
      =     "M_Frg_Hub_MagPos"; 

      U     "M_Frg_Hub_MagPos"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_hub_ast; 


      U(    ; 
      UN    #t_WZW_VKETTE_OHNE_TPU; 
      U(    ; // Kegel in Grdstl 
      L     "DB_PLC_MD_DB20".UDInt._012_ANWAHL_WKZ_WASCHEN; 
      L     0; 
      ==I   ; 
      O     "I_WW_Rein_in_GST"; 
      )     ; 
      O     ; 
      U     #t_WZW_VKETTE_OHNE_TPU; 
      U(    ; 
      U     "M_WZW_Greifer_OK"; 
      U     "M_TM_MAG_TOOL_LOCK"; 
      O     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      )     ; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      =     "M_Frg_Hub_SpiPos"; 

      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      U     "M_Frg_Hub_SpiPos"; 
      =     #tx_frg_hub_gst; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_frg_hub_ast,
           Freigabe_GST_Hand        := #tx_frg_hub_gst,
           Endlage_AST              := "M_WZW_Hub_Magazin",
           Endlage_GST              := "M_WZW_Hub_GrdSt",
           Ventil_AST               := "O_TC_MAGAZINPOS",
           Ventil_GST               := "O_TC_SPIPOS",
           Bewegungsnummer          := 2);

//****************** Zeile 3 ***********************************************
// Greifer aus- einfahren

//****************** Zeile 4 ***********************************************
//Werkzeugwechslertüre horizontales Magazin
// Bei vertikalem Magazin im FC_WZW_ABLAUF

      U     #t_WZW_VKETTE_OHNE_TPU; 
      SPB   EWZK; 

      U     "DB_SIEM_NCK".E_SWCamPlus[15]; 
      U     "M_Leistung_Steht_an"; 
      O     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_Tuere_Frg; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := TRUE,//#tx_Tuere_Frg
           Freigabe_GST_Hand        := #tx_XAx_VP,//#tx_Tuere_Frg
           Endlage_AST              := "I_WW_1_Klappe_auf",
           Endlage_GST              := "I_WW_1_Klappe_zu",
           Ventil_AST               := "O_WW_1_Klappe_auf",
           Ventil_GST               := "O_WW_1_Klappe_zu",
           Bewegungsnummer          := 4);

EWZK: NOP   0; 

//****************** Zeile 5 ***********************************************
//Werkzeugspanner
      U     "DB_OEM".OEM_WZW_REttbildaktiv; 
      SPBN  WIKO; 

      L     5; 
      SPB   ANZE; 

WIKO: NOP   0; 
      U     "DB_OEM".Anwahl.Speicher.Maske4; 
      SPBN  DEFT; 

      L     44; 
      SPB   ANZE; 

DEFT: NOP   0; 
      L     0; 

ANZE: T     #beweg_nr; 

      UN    "O_AL_WZ_Spanner_Loesen"; 
      =     #tx_wzsp_zu; 

      U     "M_Leistung_Steht_an"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_wzsp; 

      U(    ; 
      U     "I_WZ_SPA_geloest"; 
      UN    "I_WZ_SPA_gespannt"; 
      )     ; 
      O(    ; 
      U     "M_WZ_SPA_geloe_Analog"; 
      UN    "M_WZ_SPA_gesp_Analog"; 
      )     ; 
      =     #tx_wz_spa_geloest; 

      U(    ; 
      U     "I_WZ_SPA_gespannt"; 
      UN    "I_WZ_SPA_geloest"; 
      )     ; 
      O(    ; 
      U     "M_WZ_SPA_gesp_Analog"; 
      UN    "M_WZ_SPA_geloe_Analog"; 
      )     ; 
      =     #tx_wz_spa_gespannt; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_frg_wzsp,
           Freigabe_GST_Hand        := #tx_frg_wzsp,
           Endlage_AST              := #tx_wz_spa_geloest,
           Endlage_GST              := #tx_wz_spa_gespannt,
           Ventil_AST               := "O_AL_WZ_Spanner_Loesen",
           Ventil_GST               := #tx_wzsp_zu,
           Bewegungsnummer          := 5);

//****************** Zeile 6 ***********************************************
//Werkzeuggreifer drehen
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.WZW_VKETTE_OHNE_TPU; 
      SPB   VKET; 

      U     "M_WZW_Hub_GrdSt"; 
      U     "M_Leistung_Steht_an"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._012_ANWAHL_WKZ_WASCHEN; 
      L     0; 
      ==I   ; 
      O     "I_WW_Rein_in_GST"; 
      )     ; 
      U(    ; 
      U     "I_WZ_SPA_geloest"; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      O     "M_WW_X_imArbeitsraum"; 
      O     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      )     ; 
      =     #tx_frg_grf; 

      U     #tx_frg_grf; 
      UN    "M_WZW_Gre1_Pos_Mag"; 
      =     #tx_GRF_FRG_ARST; 

      U     #tx_frg_grf; 
      UN    "M_WZW_Gre1_Pos_Spi"; 
      =     #tx_GRF_FRG_GRDST; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_GRF_FRG_ARST,
           Freigabe_GST_Hand        := #tx_GRF_FRG_GRDST,
           Endlage_AST              := "M_WZW_Gre1_Pos_Mag",
           Endlage_GST              := "M_WZW_Gre1_Pos_Spi",
           Ventil_AST               := "O_WW_1GRF_MAG",
           Ventil_GST               := "O_WW_1GRF_SPI",
           Bewegungsnummer          := 6);

      SPA   EGRD; 

VKET: NOP   0; 
      U     "DB_PLC_MD_DB20".UDHex._20_Bit5_VM_MAG_SK50; 
      SPBN  typ7; 
      SET   ; 
      R     "M_Greifer_rechts"; 
      S     "M_Greifer_links"; 
      S     "DB_NC_PLC".WZW_GR_Drehen_links; 
      SPA   cuxx; 

typ7: U     "DB_NC_PLC".WZW_WZ_Einwechseln; 
      O(    ; 
      U     "DB_NC_PLC".WZW_WZ_Vollwechsel; 
      O     "DB_NC_PLC".WZW_WZ_Auswechseln; 
      U(    ; 
      L     "DI_TM_T_BEFEHL".T_SpWz_Typ; 
      L     7; 
      <I    ; 
      )     ; 
      )     ; 
      O(    ; 
      U     "DB_NC_PLC".WZW_WZ_AUS_EINWechseln; 
      )     ; 
      =     "M_Greifer_rechts"; 



      UN    "DB_NC_PLC".WZW_WZ_Einwechseln; 
      U(    ; 
      L     "DI_TM_T_BEFEHL".T_SpWz_Typ; 
      L     7; 
      ==I   ; 
      )     ; 
      =     "M_Greifer_links"; 
      =     "DB_NC_PLC".WZW_GR_Drehen_links; 


cuxx: U     "M_CU_Aktiv"; 
      SPBN  cs01; 
      SET   ; 
      =     "DB_ACHSE8".A_SWCam; 

      L     189; 
      T     #beweg_nr; 

      SPA   _cse; 
cs01: SET   ; 
      =     "DB_ACHSE14".A_SWCam; 

      L     6; 
      T     #beweg_nr; 

_cse: NOP   0; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_WWZ".gd0.Frg_Hand_Greifer_drehen,
           Freigabe_GST_Hand        := "DB_WWZ".gd0.Frg_Hand_Greifer_drehen,
           Endlage_AST              := "M_WZW_Gre1_Pos_Mag",
           Endlage_GST              := "M_WZW_Gre1_Pos_Spi",
           Ventil_AST               := "M_Grf1_0_Grad",
           Ventil_GST               := "M_Grf1_180_Grad",
           Bewegungsnummer          := #beweg_nr);

EGRD: NOP   0; 

NETWORK
TITLE =Rettungsmenü Werkzeugwechsler 2
//****************** Zeile 1 ***********************************************
//
//****************** Zeile 2 ***********************************************
//X-Achse
      U     #t_X_Achse_Fahrbe_gedreht; 
      U     "DB_ACHSE1_X".E_TCMinus; 
      O     ; 
      UN    #t_X_Achse_Fahrbe_gedreht; 
      U     "DB_ACHSE1_X".E_TCPlus; 
      =     #t_XRichtung_AST; 

      U     #t_X_Achse_Fahrbe_gedreht; 
      U     "DB_ACHSE1_X".E_TCPlus; 
      O     ; 
      UN    #t_X_Achse_Fahrbe_gedreht; 
      U     "DB_ACHSE1_X".E_TCMinus; 
      =     #t_XRichtung_GST; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_WWZ".gd0.Frg_Hand_X_zum_Arbeitsr,
           Freigabe_GST_Hand        := "DB_WWZ".gd0.Frg_Hand_X_zur_WW_Pos,
           Endlage_AST              := #tx_XAx_VP,
           Endlage_GST              := "Mx_X_ACHSE_WZW_POS",
           Ventil_AST               := #t_XRichtung_AST,
           Ventil_GST               := #t_XRichtung_GST,
           Bewegungsnummer          := 14);

//****************** Zeile 3 ***********************************************
//Y-Achse
      UN    "DB_SIEM_NCK".E_SWCamPlus[14]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[14]; 
      =     #tx_Y_WP_FRG; 
      =     "I_WW_Y_inWWPos"; 

      U     "DB_ACHSE2_Y".E_TCPlus; 
      O     "DB_ACHSE2_Y".E_TCMinus; 
      =     #tx_YAx_faehrt; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_WWZ".gd0.Frg_Hand_Y_zur_WW_Pos,
           Freigabe_GST_Hand        := "DB_WWZ".gd0.Frg_Hand_Y_zur_WW_Pos,
           Endlage_AST              := #tx_Y_WP_FRG,
           Endlage_GST              := "m_null",
           Ventil_AST               := #tx_YAx_faehrt,
           Ventil_GST               := #tx_YAx_faehrt,
           Bewegungsnummer          := 15);

//****************** Zeile 4 ***********************************************
//Spindel
      U     "DB_SIEM_NCK".E_SWCamPlus[16]; 
      =     "M_Sp_in_M19Pos"; 

      L     4; 
      L     "DB_NC_PLC".Rettung_FktNr; 
      ==I   ; 
      U     "Start_ASUP_Machine_Nr.1"; 
      =     #tx_Start_M19Pos; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := "DB_WWZ".gd0.Frg_Hand_SPI_zur_WW_Pos,
           Endlage_AST              := FALSE,
           Endlage_GST              := "M_Sp_in_M19Pos",
           Ventil_AST               := FALSE,
           Ventil_GST               := #tx_Start_M19Pos,
           Bewegungsnummer          := 16);

//****************** Zeile 5 ***********************************************
//Reset WZW
//      U     "DB_NC_PLC".WZW_PLC_Aktiv
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_reset; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := #tx_frg_reset,
           Endlage_AST              := FALSE,
           Endlage_GST              := FALSE,
           Ventil_AST               := FALSE,
           Ventil_GST               := "DB_OEM".WZW_Reset,
           Bewegungsnummer          := 17);

//****************** Zeile 6 ***********************************************
//Werkzeuge überprüft

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := "M_Handbetrieb",// "DB_SIEM_BAG".E_JOG
           Endlage_AST              := FALSE,
           Endlage_GST              := FALSE,
           Ventil_AST               := FALSE,
           Ventil_GST               := "DB_OEM".WZ_ueberprueft,
           Bewegungsnummer          := 18);

NETWORK
TITLE =Rettungsmenü Werkzeugwechsler 3
//****************** Zeile 1 ***********************************************
//
//
//****************** Zeile 2 ***********************************************
//Kegelreinigung
      L     "DB_PLC_MD_DB20".UDInt._012_ANWAHL_WKZ_WASCHEN; 
      L     0; 
      <>I   ; 
      U     "M_Leistung_Steht_an"; 
      U     "M_WZW_Hub_GrdSt"; 
      U(    ; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     "M_WZW_Gre1_Pos_Spi"; 
      )     ; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_reinigung; 

      UN    "O_WW_Hub_ZYL_in_Rein"; 
      =     #tx_wzk_grdst; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_frg_reinigung,
           Freigabe_GST_Hand        := #tx_frg_reinigung,
           Endlage_AST              := "I_WW_Rein_in_Rein_Pos",
           Endlage_GST              := "I_WW_Rein_in_GST",
           Ventil_AST               := "O_WW_Hub_ZYL_in_Rein",
           Ventil_GST               := #tx_wzk_grdst,
           Bewegungsnummer          := 56);

//****************** Zeile 3 ***********************************************
//Verriegelung
      UN    "O_WW_Rueck_MAG"; 
      =     #tx_Verr_Grdst; 

      U     "M_Leistung_Steht_an"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_verriegelung; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_frg_verriegelung,
           Freigabe_GST_Hand        := #tx_frg_verriegelung,
           Endlage_AST              := "I_WW_Rueck_hlt_AUSGEF",
           Endlage_GST              := "I_WW_Rueck_hlt_GST",
           Ventil_AST               := "O_WW_Rueck_MAG",
           Ventil_GST               := #tx_Verr_Grdst,
           Bewegungsnummer          := 57);

//****************** Zeile 4 ***********************************************
//Magazin Achse
      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #t_Frg_Mag_fahren,
           Freigabe_GST_Hand        := #t_Frg_Mag_fahren,
           Endlage_AST              := FALSE,
           Endlage_GST              := FALSE,
           Ventil_AST               := "DB_ACHSE7".E_TCMinus,
           Ventil_GST               := "DB_ACHSE7".E_TCPlus,
           Bewegungsnummer          := 58);

//****************** Zeile 5 ***********************************************
//14te Achse

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #t_Frg_Greifer_drehen,
           Freigabe_GST_Hand        := #t_Frg_Greifer_drehen,
           Endlage_AST              := FALSE,
           Endlage_GST              := FALSE,
           Ventil_AST               := "DB_ACHSE14".E_TCMinus,
           Ventil_GST               := "DB_ACHSE14".E_TCPlus,
           Bewegungsnummer          := 59);


NETWORK
TITLE =Rettungsmenü Omron Regal
//****************** Zeile 1 ***********************************************
//
//
//****************** Zeile 2 ***********************************************
//Regalgreifer zurück in Gasse
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Regal_bereit; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_regal; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := #tx_frg_regal,
           Endlage_AST              := FALSE,
           Endlage_GST              := "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Vorposition,
           Ventil_AST               := FALSE,
           Ventil_GST               := "M_RegGr_inGasse_aktiv",
           Bewegungsnummer          := 62);

//****************** Zeile 3 ***********************************************
//Spindel entleeren
      L     "DB_TOOL_DATA".T_NR; 
      L     0; 
      ==I   ; 
      =     #tx_Sp_leer; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := #tx_frg_regal,
           Endlage_AST              := FALSE,
           Endlage_GST              := #tx_Sp_leer,
           Ventil_AST               := FALSE,
           Ventil_GST               := "M_Sp_leeren aktiv",
           Bewegungsnummer          := 63);

//****************** Zeile 4 ***********************************************
// Querachse Servicefunktion

      U     "DB_EINRICHTFUNKTION".Bewegung_64_Minus; 
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      =     "DB_ACHSE_WZW_QUER".MX_FahrAnf_Plus; 

      U     "DB_EINRICHTFUNKTION".Bewegung_64_Plus; 
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      =     "DB_ACHSE_WZW_QUER".MX_FahrAnf_Minus; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR,
           Freigabe_GST_Hand        := "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR,
           Endlage_AST              := "M_WZW_Hub_Magazin",
           Endlage_GST              := "M_WZW_Hub_GrdSt",
           Ventil_AST               := "DB_ACHSE18".A_Plus,
           Ventil_GST               := "DB_ACHSE18".A_Minus,
           Bewegungsnummer          := 64);

//****************** Zeile 5 ***********************************************
// Längsachse Servicefunktion

      U     "DB_EINRICHTFUNKTION".Bewegung_65_Minus; 
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      =     "DB_ACHSE_WZW_LAENGS".MX_FahrAnf_Plus; 

      U     "DB_EINRICHTFUNKTION".Bewegung_65_Plus; 
      U     "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      =     "DB_ACHSE_WZW_LAENGS".MX_FahrAnf_Minus; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR,
           Freigabe_GST_Hand        := "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR,
           Endlage_AST              := "M_WZW_Hub_Magazin_2",
           Endlage_GST              := "M_WZW_Hub_Magazin_1",
           Ventil_AST               := "DB_ACHSE19".A_Plus,
           Ventil_GST               := "DB_ACHSE19".A_Minus,
           Bewegungsnummer          := 65);

NETWORK
TITLE =Rettungsmenü Winkelfräskopf
//****************** Zeile 1 ***********************************************
//
//
//****************** Zeile 2 ***********************************************
//X-Achse auf Wechselposition Winkelkopf
      U     "M_Leistung_Steht_an"; 
      U     "I_WW_1_Klappe_auf"; 
      U(    ; 
      UN    "DB_SIEM_NCK".E_SWCamPlus[27]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[27]; 
      O(    ; 
      UN    "DB_SIEM_NCK".E_SWCamPlus[28]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[28]; 
      )     ; 
      )     ; 
      U     "M_Sp_inM19PosWFK"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_XAx_Frg; 

      U     "M_Leistung_Steht_an"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_XAx_frg_ast; 

      U(    ; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      UN    "DB_SIEM_NCK".E_SWCamPlus[15]; 
      )     ; 
      O(    ; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3070_AKTIV; 
      U     "DB_SIEM_NCK".E_SWCamPlus[15]; 
      )     ; 
      =     #tx_XAx_VP; 

      U     "DB_ACHSE1_X".E_TCPlus; 
      O     "DB_ACHSE1_X".E_TCMinus; 
      =     #tx_XAx_VP; 

      UN    "DB_SIEM_NCK".E_SWCamPlus[26]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[26]; 
      =     #tx_X_WP_WFK; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := #tx_XAx_frg_ast,
           Freigabe_GST_Hand        := #tx_XAx_Frg,
           Endlage_AST              := #tx_XAx_VP,
           Endlage_GST              := #tx_X_WP_WFK,
           Ventil_AST               := "DB_ACHSE1_X".E_TCPlus,
           Ventil_GST               := "DB_ACHSE1_X".E_TCMinus,
           Bewegungsnummer          := 68);

//****************** Zeile 3 ***********************************************
//Vertikalachse auf Auswechsel- und Einwechselposition Winkelkopf
      U(    ; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      UN    "DB_SIEM_NCK".E_SWCamPlus[15]; 
      )     ; 
      O(    ; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3070_AKTIV; 
      U     "DB_SIEM_NCK".E_SWCamPlus[15]; 
      )     ; 
      UN    "Mx_X_ACHSE_WZW_POS"; 
      U     "M_Leistung_Steht_an"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_YAx_Frg; 

//Vertikalachse auf Einwechselposition
      UN    "DB_SIEM_NCK".E_SWCamPlus[27]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[27]; 
      =     #tx_Y_WP_FRG; 

//Vertikalachse auf Auswechselposition
      UN    "DB_SIEM_NCK".E_SWCamPlus[28]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[28]; 
      =     #tx_Y_WP_Ausw; 

      U     "DB_ACHSE2_Y".E_TCPlus; 
      O     "DB_ACHSE2_Y".E_TCMinus; 
      =     #tx_YAx_faehrt; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := "DB_WWZ".gd0.Frg_Hand_Y_zur_WW_Pos,
           Freigabe_GST_Hand        := "DB_WWZ".gd0.Frg_Hand_Y_zur_WW_Pos,
           Endlage_AST              := #tx_Y_WP_FRG,
           Endlage_GST              := #tx_Y_WP_Ausw,
           Ventil_AST               := #tx_YAx_faehrt,
           Ventil_GST               := #tx_YAx_faehrt,
           Bewegungsnummer          := 69);


//****************** Zeile 4 ***********************************************
//Spindel positionieren auf Winkelkopfposition
      U     "M_Leistung_Steht_an"; 
      U     "I_WZ_SPA_gespannt"; 
      UN    "Mx_XAx_in_WZW_RAUM"; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      =     #tx_frg_M19; 

      U     "DB_SIEM_NCK".E_SWCamPlus[29]; 
      =     "M_Sp_inM19PosWFK"; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := FALSE,
           Freigabe_GST_Hand        := #tx_frg_M19,
           Endlage_AST              := FALSE,
           Endlage_GST              := "M_Sp_inM19PosWFK",
           Ventil_AST               := FALSE,
           Ventil_GST               := FALSE,
           Bewegungsnummer          := 70);


//****************** Zeile 5 ***********************************************
//Greifer 2 entriegeln und verriegeln

      UN    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPB   kgr2; 
      UN    "O_WW_GRF_ENTRIEGELN"; 
      =     #tx_Grf2_verriegeln; 

      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := TRUE,
           Freigabe_GST_Hand        := TRUE,
           Endlage_AST              := "DB_NC_PLC".WZW_Grf2_entriegelt,
           Endlage_GST              := "M_Grf2_verz_verriegelt",
           Ventil_AST               := "O_WW_GRF_ENTRIEGELN",
           Ventil_GST               := #tx_Grf2_verriegeln,
           Bewegungsnummer          := 71);

kgr2: NOP   0; 
NETWORK
TITLE =WZW: Grundstellung

      U     "M_WZW_Hub_GrdSt"; 
      U(    ; 
      O     "M_WZW_Gre1_Pos_Mag"; 
      O     "M_WZW_Gre1_Pos_Spi"; 
      )     ; 
      U(    ; 
      O     "I_WW_Rein_in_GST"; 
      O     #t_WZW_VKETTE_OHNE_TPU; 
      O(    ; 
      L     "DB_PLC_MD_DB20".UDInt._012_ANWAHL_WKZ_WASCHEN; 
      L     0; 
      ==I   ; 
      )     ; 
      )     ; 
      U(    ; 
      O     "I_WW_Rueck_hlt_GST"; 
      O     "M_TM_MAG_TOOL_LOCK"; 
      O     "M_WZM_Regal_angewaehlt"; 
      )     ; 
      =     "M_WZW_Grdst"; 
NETWORK
TITLE =WZW: Grundstellung für Oem-Anzeige und autom.Gst.fahren

      U     "M_WZW_Grdst"; 
      U     "I_WW_1_Klappe_zu"; 
      U(    ; 
      UN    #iReg.WPos; 
      UN    #iReg.VPos; 
      O     #SiemRegal; 
      )     ; 
      =     "DB_OEM".WZW_in_Grdst; 
NETWORK
TITLE =Ausgang Werkzeugverriegelung verriegeln
//Rücksetzen der Ausgänge für die Kegelreinigung bei Not-Aus
      UN    "M_Leistung_Steht_an"; 
      R     "O_WW_Rueck_MAG"; 
NETWORK
TITLE =PLC an NC: Winkelfräskopf Späneabdeckung montiert

      U     "I_WK_SPINDEL_ABDECKUNG"; 
      =     "DB_NC_PLC".WFK_SpAbdeckung_montiert; 
NETWORK
TITLE =Hubausgänge beim Einschalten setzen

      U     "M_3_ter_OB1_Zyklus"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "M_WZW_Hub_GrdSt"; 
      S     "O_WW_1_ZYL_GST"; 
      S     "O_TC_SPIPOS"; 
      U     L     45.0; 
      U     "M_WZW_Hub_Magazin"; 
      S     "O_WW_1_ZYL_SPI"; 
      S     "O_TC_MAGAZINPOS"; 
NETWORK
TITLE =X-Achse auf Wechselpos, X-Achse ausserhalb von WZW-Klappe

      UN    "DB_SIEM_NCK".E_SWCamPlus[8]; 
      UN    "DB_SIEM_NCK".E_SWCamMinus[8]; 
      =     "Mx_X_ACHSE_WZW_POS"; 
NETWORK
TITLE =ab hier:Werkzeugwechsler Grundstellung fahren



NETWORK
TITLE =Lokaldaten laden 

      CALL "BLKMOVE" (
           SRCBLK                   := "DB_WWZ".s,
           RET_VAL                  := #WertInt,
           DSTBLK                   := #s);
      NOP   0; 
NETWORK
TITLE =Signale retten bei Flanke "M_WZDaten_lesen_ready_S"

      U     "M_WZDaten_lesen_ready_S"; 
      FP    #s.fk[5]; 
      U     #s.RqRdZSp; 
      =     L     45.0; 
      U     L     45.0; 
      BLD   102; 
      R     #s.RqRdZSp; 
      U     L     45.0; 
      SPBNB _001; 
      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      T     "DB_WWZ".TMD0.TNrGr1; 
_001: NOP   0; 
      U     L     45.0; 
      SPBNB _002; 
      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      T     "DB_WWZ".TMD0.TnrGr2; 
_002: NOP   0; 
      U     L     45.0; 
      SPBNB _003; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      T     "DB_WWZ".TMD0.TNrSpi; 
_003: NOP   0; 
NETWORK
TITLE =Signal retten bei Flanke "M_WZ_Rdy_Ablegen"

      U     "M_WZ_Rdy_Ablegen"; 
      FP    #s.fk[6]; 
      S     #s.RqRdZSp; 

NETWORK
TITLE =pos.Flanke: Spindel gespannt

      U     #tx_wz_spa_gespannt; 
      FP    #s.fk[1]; 
      =     #FpSpiGs; 
NETWORK
TITLE =pos.Flanke: Spindel geloest

      U     #tx_wz_spa_geloest; 
      FP    #s.fk[0]; 
      =     #FpSpiGeloest; 
NETWORK
TITLE =Flanke vorbereitet

      U     "DB_NC_PLC".WZW_WZ_Vorbereitet; 
      FP    #s.fk[4]; 
      =     #LOp0; 

      S     #s.RqRdZSp; 
NETWORK
TITLE =Greiferstellung speichern, wenn Spanner geloest ist

      U     #FpSpiGeloest; 
      UN    "M_Handbetrieb"; 
      U     "M_Leistung_Steht_an"; 
      UN    #s.SkStrt; // "DB_SIEM_BAG".E_JOG
      U     "DB_WWZ".gd0.FTMDsi; 
      =     #LOp1; 
NETWORK
TITLE =Speichern Greiferstellung

      O     #LOp0; 
      O     #LOp1; 
      =     L     45.0; 
      U     L     45.0; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      S     "DB_WWZ".TMD0.Gr1Mag; 
      R     "DB_WWZ".TMD0.Gr1Spi; 

      U     L     45.0; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      S     "DB_WWZ".TMD0.Gr1Spi; 
      R     "DB_WWZ".TMD0.Gr1Mag; 
NETWORK
TITLE =letzte Schrittnr.aus L164 $A_DBB[103] speichern

      L     #s.L164SrOld; 
      L     "DB_NC_PLC".ZustZaehlerWZW; 
      ==I   ; 
      SPB   _104; //keine Änderung, dann raus
      T     #s.L164SrOld; 
      L     0; 
      ==I   ; 
      SPB   _104; //nur Werte <>0 speichern
      TAK   ; 
      T     #s.L164Sr; 
_104: NOP   0; 
NETWORK
TITLE =letzter von Nc angeforderte Spindelbefehl:Spi.lösen

      U     "DB_DM_M_FUNKTION".MX_M[278]; 
      S     "DB_WWZ".gd0.NcSpiLoe; 
      U(    ; 
      O     "DB_DM_M_FUNKTION".MX_M[279]; 
      O     #s.Sr.SpiSpa; 
      )     ; 
      R     "DB_WWZ".gd0.NcSpiLoe; 
      NOP   0; 
NETWORK
TITLE =SpindelWzSpannvorr. in von Nc geforderter Stlg.

      U     "DB_WWZ".gd0.NcSpiLoe; 
      U     #tx_wz_spa_geloest; 
      O     ; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      U     #tx_wz_spa_gespannt; 
      =     #SfSpiZNcS; 
NETWORK
TITLE =Frg.TM-Daten bei WzwReset sichern

      U     "TMSpindleIF".IFNo[1]; 
      U     "TMSpindleIF".IF[1].Prepare; 
      FP    #s.fk[8]; 
      =     L     45.0; 
      U     L     45.0; 
      BLD   102; 
      S     "DB_WWZ".gd0.FTMDsi; 
      U     L     45.0; 
      SPBNB _004; 
      L     0; 
      T     #loopctr; 
_004: NOP   0; 
      U     L     45.0; 
      SPBNB _005; 
      CALL "FILL" (
           BVAL                     := #loopctr,
           RET_VAL                  := #WertInt,
           BLK                      := "DB_WWZ".TMDR);
_005: NOP   0; 
NETWORK
TITLE =bei letztem WzwReset war kein Wz.Vorbereiten/Wz.Ablegen aktiv

      UN    "DB_WWZ".TMDR.VorbLft; 
      UN    "DB_WWZ".TMDR.AblLft; 
      =     #noVorAbl; 
NETWORK
TITLE =Lokalvariable initialisieren

      U     "m_eins"; 
      =     L     45.0; 
      U     L     45.0; 
      BLD   102; 
      R     #Srw; 
      U     L     45.0; 
      U     "m_rqwwgf"; 
      FP    #s.fk[9]; 
      =     #fpiReqGf; 
      U     L     45.0; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._012_ANWAHL_WKZ_WASCHEN; 
      L     0; 
      ==I   ; 
      )     ; 
      =     #noWasch; 
      U     L     45.0; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      ==I   ; 
      )     ; 
      =     #noBruKtr; 
      U     L     45.0; 
      SPBNB _006; 
      L     S5T#30S; 
      T     #s.WTUe; 
_006: NOP   0; 
NETWORK
TITLE =WzWechsler wurde im Jog bewegt

      U(    ; 
      O     "DB_EINRICHTFUNKTION".Bewegung_5_Minus; 
      O     "DB_EINRICHTFUNKTION".Bewegung_5_Plus; 
      O     "DB_EINRICHTFUNKTION".Bewegung_44_Minus; 
      O     "DB_EINRICHTFUNKTION".Bewegung_44_Plus; 
      )     ; 
      S     #s.wwJogBew; 
      U     "TMSpindleIF".IFNo[1]; 
      U     "TMSpindleIF".IF[1].Prepare; 
      R     #s.wwJogBew; 
      NOP   0; 
NETWORK
TITLE =Erfassung Anzahl Leerplätze gespeich+aktu Wz-Zwischenspeicher
//---(1)--- Anzahl Leerplätze von gespeichertem ZwiSpeicher bei Flanke "Wz 
//vorbereitet" ------
      AUF   "DB_WWZ"; 
      LAR1  P#0.0; 
      L     B#16#0; 
      T     #LPTMD0; 
      L     B#16#3; 
s001: T     #loopctr; 
      L     B#16#0; 
      L     DBW [AR1,P#4.0]; 
      <>I   ; 
      SPB   s01a; 
      L     #LPTMD0; 
      +     1; 
      T     #LPTMD0; 
s01a: +AR1  P#2.0; 
      L     #loopctr; 
      LOOP  s001; 
//---(1)------------------------------------------------------------------------------------
//---(2)--- Anzahl Leerplätze von aktu. Zwischenspeicher -----------------------------------
      AUF   "DB_GREIFER_DATEN"; 
      LAR1  P#0.0; 
      L     B#16#0; 
      T     #LP_akt; 
      L     B#16#3; 
s002: T     #loopctr; 
      L     B#16#0; 
      L     DBW [AR1,P#30.0]; 
      <>I   ; 
      SPB   s02a; 
      L     #LP_akt; 
      +     1; 
      T     #LP_akt; 
s02a: +AR1  P#2.0; 
      L     #loopctr; 
      LOOP  s002; 
//---(2)------------------------------------------------------------------------------------
NETWORK
TITLE =int.T-Nr.von aktu.ZwiSp.Gr1 war auch bei "Wz.vorbereitet" vh

      U(    ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      L     "DB_WWZ".TMD0.TNrGr1; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      L     "DB_WWZ".TMD0.TnrGr2; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      L     "DB_WWZ".TMD0.TNrSpi; 
      ==I   ; 
      )     ; 
      )     ; 
      U     "M_WZGr1_belegt"; 
      ON    "M_WZGr1_belegt"; 
      =     #LOp0; 
NETWORK
TITLE =int.T-Nr.von aktu.ZwiSp.Gr1/2 war auch bei "Wz.vorbereitet" vh

      U(    ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      L     "DB_WWZ".TMD0.TNrGr1; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      L     "DB_WWZ".TMD0.TnrGr2; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      L     "DB_WWZ".TMD0.TNrSpi; 
      ==I   ; 
      )     ; 
      )     ; 
      U     "M_WZGr2_belegt"; 
      ON    "M_WZGr2_belegt"; 
      =     #LOp1; 
NETWORK
TITLE =WzZwiSpDaten konsistent
//Die Daten dürfen seit dem letzten "DB_NC_PLC".WZW_WZ_Vorbereitet bzw.
//"M_WZ_Rdy_Ablegen" nicht verändert worden sein, nur dann ist das ev. 
//Umspeichern und somit das autom. Grundstellung fahren des Werkzeugwechslers 
//erlaubt.
      U(    ; 
      U(    ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     "DB_WWZ".TMD0.TNrGr1; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     "DB_WWZ".TMD0.TnrGr2; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     "DB_WWZ".TMD0.TNrSpi; 
      ==I   ; 
      )     ; 
      )     ; 
      U(    ; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     0; 
      <>I   ; 
      )     ; 
      O(    ; 
      U(    ; 
      L     "DB_GREIFER_DATEN".TNR_Spindel; 
      L     0; 
      ==I   ; 
      )     ; 
      =     #TNrSpi0; 
      U     #TNrSpi0; 
      )     ; 
      )     ; 
      U     #LOp0; 
      U     #LOp1; 
      U(    ; 
      L     #LPTMD0; 
      L     #LP_akt; 
      ==I   ; 
      )     ; 
      =     #DKons; 
NETWORK
TITLE =L164 einwechseln war aktiv

      U(    ; 
      L     #s.L164Sr; 
      L     25; 
      >=I   ; 
      )     ; 
      U(    ; 
      L     #s.L164Sr; 
      L     45; 
      <=I   ; 
      )     ; 
      =     #NCeinw; 
NETWORK
TITLE =L164 auswechseln war aktiv

      U(    ; 
      L     #s.L164Sr; 
      L     105; 
      >=I   ; 
      )     ; 
      U(    ; 
      L     #s.L164Sr; 
      L     150; 
      <=I   ; 
      )     ; 
      =     #NCausw; 
NETWORK
TITLE =L164 vollwechseln war aktiv

      U(    ; 
      L     #s.L164Sr; 
      L     205; 
      >=I   ; 
      )     ; 
      U(    ; 
      L     #s.L164Sr; 
      L     240; 
      <=I   ; 
      )     ; 
      =     #NCvoll; 
NETWORK
TITLE =Schrittkette rücksetzen

      UN    #s.SkStrt; 
      UN    "M_Einzelsatz"; 
      O     ; 
      U     "M_Reset_Taste"; 
      U     "M_Einzelsatz"; 
      =     #LOp1; 
NETWORK
TITLE =wenn Bedingung erfüllt ... Schrittkette rücksetzen

      UN    #LOp1; 
      SPB   e002; 
      TAR1  #svAr1; 
      LAR1  P##s; 
      L     0; 
      T     LD [AR1,P#0.0]; 
      LAR1  #svAr1; 
e002: NOP   0; 
NETWORK
TITLE =Schrittkette im Sr0 bzw. kein Sr gesetzt

      TAR1  #svAr1; 
      LAR1  P##s; 
      L     0; 
      L     LD [AR1,P#0.0]; 
      ==D   ; 
      =     #nK0; 
      LAR1  #svAr1; 
NETWORK
TITLE =Start Wzw Grundstlg. fahren
//"m_konstruktion": Wzw. wurde im Einr.bewegt
      U(    ; 
      UN    "DB_SIEM_KANAL_1".E_ChanActive; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      U(    ; 
      ON    "M_Einzelsatz"; 
      O     #fpiReqGf; 
      )     ; 
      O     ; 
      U     #s.SkStrt; 
      U(    ; 
      ON    "M_Einzelsatz"; 
      ON    "T_wgfTWa"; 
      )     ; 
      UN    #nK0; 
      )     ; 
      U     "m_rqwwgf"; 
      UN    "DB_OEM".WZW_in_Grdst; 
      U     "M_Leistung_Steht_an"; 
      UN    "DB_OEM".Einrichten_Aktiv; 
      UN    #s.wwJogBew; 
      U(    ; 
      O     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3070_AKTIV; 
      O     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      )     ; 
      =     #s.SkStrt; 
      =     "m_wwgf_SkStrt"; 
      L     S5T#1S; 
      SA    "Ta_wgfStrt"; 

NETWORK
TITLE =Reset Start der Wartezeit

      U     "m_eins"; 
      R     #s.TWaS; 
NETWORK
TITLE =Schrittkette weiterschalten

      U     #s.SkStrt; 
      =     #SKw; 
NETWORK
TITLE =Gf:Wzw Reset auslösen

      U     #SKw; 
      U     #nK0; 
      S     #s.Sr.wwRset; 
NETWORK
TITLE =------ Anfang Wechsler in Grundstellung fahren horizontale Kette

      U     #t_WZW_VKETTE_OHNE_TPU; 
      SPB   S_VK; 

NETWORK
TITLE =Gf:Spi.in den zuletzt von Nc geford.Zust.stell.

      U     #s.Sr.wwRset; 
      UN    "DB_WWZ".gd0.FTMDsi; 
      U(    ; 
      O     "Mx_X_ACHSE_WZW_POS"; 
      ON    "DB_WWZ".gd0.NcSpiLoe; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.SpiZNcS; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _007; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_007: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:Gr1 --> Mag/Spi fahren

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #DKons; 
      U     #NCeinw; 
      U     #tx_wz_spa_geloest; 
      UN    "M_WZW_Greifer_OK"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Spi; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Mag; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _008; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_008: NOP   0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Mag; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Spi; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _009; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_009: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:Spi.spannen

      U(    ; 
      U     #s.Sr.Gr1Mag; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     ; 
      U     #s.Sr.Gr1Spi; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     "M_WZW_Greifer_OK"; 
      )     ; 
      U     #DKons; 
      U     #NCeinw; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.Gr1Mag; 
      R     #s.Sr.Gr1Spi; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.SpiSpa; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _00a; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00a: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:Gr.2 entriegeln

      U     #s.Sr.SpiSpa; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      U     #tx_wz_spa_gespannt; 
      U     #NCeinw; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiSpa; 
      S     #s.Sr.Gr2entr; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _00b; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00b: NOP   0; 
NETWORK
TITLE =Gf nach Auswechseln:Gr1 --> Mag/Spi fahren

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #DKons; 
      U     #NCausw; 
      U     #tx_wz_spa_geloest; 
      UN    "M_WZW_Greifer_OK"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Spi; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Mag; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _00c; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00c: NOP   0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Mag; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Spi; 
      S     #Srw; 
      U     L     45.1; 
      SPBNB _00d; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00d: NOP   0; 
NETWORK
TITLE =Gf nach Auswechseln:Spi.spannen

      U(    ; 
      U     #s.Sr.Gr1Mag; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     ; 
      U     #s.Sr.Gr1Spi; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     "M_WZW_Greifer_OK"; 
      )     ; 
      U     #DKons; 
      U     #NCausw; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.Gr1Mag; 
      R     #s.Sr.Gr1Spi; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.SpiSpa; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _00e; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00e: NOP   0; 
NETWORK
TITLE =Gf nach Auswechseln:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #NCausw; 
      U     #tx_wz_spa_gespannt; 
      UN    "M_WZW_Greifer_OK"; 
      UN    "DB_REMANENT".WZ_Im_Greifer; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1MagT0; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _00f; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_00f: NOP   0; 
NETWORK
TITLE =Gf nach Vollwechsel:umspeichern Spi-->Gr

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #DKons; 
      U     #NCvoll; 
      U     #tx_wz_spa_geloest; 
      UN    "M_WZW_Greifer_OK"; 
      UN    #TNrSpi0; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Spi; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.uSpiGr1; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _010; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_010: NOP   0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Mag; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.uSpiGr2; 
      S     #Srw; 
      U     L     45.1; 
      SPBNB _011; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_011: NOP   0; 
NETWORK
TITLE =Gf nach Vollwechsel:Gr1 --> Mag fahren

      U(    ; 
      O     #s.Sr.uSpiGr1; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #tx_wz_spa_geloest; 
      )     ; 
      UN    "M_WZW_Greifer_OK"; 
      U     #DKons; 
      U     #NCvoll; 
      U     "DB_WWZ".TMD0.Gr1Spi; 
      U     #TNrSpi0; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.uSpiGr1; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Mag; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _012; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_012: NOP   0; 
NETWORK
TITLE =Gf nach Vollwechsel:Gr1 --> Spi fahren

      U(    ; 
      O     #s.Sr.uSpiGr2; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #tx_wz_spa_geloest; 
      )     ; 
      UN    "M_WZW_Greifer_OK"; 
      U     #DKons; 
      U     #NCvoll; 
      U     "DB_WWZ".TMD0.Gr1Mag; 
      U     #TNrSpi0; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.uSpiGr2; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1Spi; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _013; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_013: NOP   0; 
NETWORK
TITLE =Gf nach Vollwechsel:Spi.spannen

      U(    ; 
      U     #s.Sr.Gr1Mag; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     ; 
      U     #s.Sr.Gr1Spi; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     "M_WZW_Greifer_OK"; 
      )     ; 
      U     #DKons; 
      U     #NCvoll; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.Gr1Mag; 
      R     #s.Sr.Gr1Spi; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.SpiSpa; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _014; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_014: NOP   0; 
NETWORK
TITLE =Gf nach Vollwechsel:Gr1 --> Mag fahren ohne umspeich,Spi.gespa.

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #NCvoll; 
      U     #tx_wz_spa_gespannt; 
      UN    "M_WZW_Greifer_OK"; 
      UN    "DB_REMANENT".WZ_Im_Greifer; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1MagT0; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _015; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_015: NOP   0; 
NETWORK
TITLE =Gf nach Wz.vorbereiten:WzGr.zur Grundstlg.

      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     "DB_WWZ".TMDR.VorbLft; 
      UN    #NCausw; 
      UN    #NCeinw; 
      UN    #NCvoll; 
      U     #tx_wz_spa_gespannt; 
      UN    "M_WZW_Greifer_OK"; 
      UN    "DB_REMANENT".WZ_Im_Greifer; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.Gr1MagT0; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _016; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_016: NOP   0; 
NETWORK
TITLE =Gf:Bruchktrl.zurück

      U(    ; 
      U     #s.Sr.Gr2entr; 
      U(    ; 
      O     "I_WW_GRF_ENTRIEGELT"; 
      ON    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      )     ; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     ; 
      U     #s.Sr.SpiSpa; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      U     #tx_wz_spa_gespannt; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      )     ; 
      U     #NCeinw; 
      O     ; 
      U(    ; 
      U     #s.Sr.SpiSpa; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      U     #tx_wz_spa_gespannt; 
      O     ; 
      U     #s.Sr.Gr1MagT0; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      )     ; 
      U(    ; 
      O     #NCausw; 
      O     #NCvoll; 
      )     ; 
      O     ; 
      U     #s.Sr.SpiZNcS; 
      U     #SfSpiZNcS; 
      U     #tx_wz_spa_gespannt; 
      U     "M_WZW_Greifer_OK"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.Gr2entr; 
      R     #s.Sr.SpiSpa; 
      R     #s.Sr.Gr1MagT0; 
      R     #s.Sr.SpiZNcS; 
      S     #s.Sr.BruchGf; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _017; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_017: NOP   0; 
NETWORK
TITLE =Gf: Wz-Reinigung zurück

      U     #s.Sr.BruchGf; 
      U(    ; 
      O     "I_WZB_Parkstellung"; 
      O     #noBruKtr; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.BruchGf; 
      S     #s.Sr.ReinGf; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _018; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_018: NOP   0; 
NETWORK
TITLE =Gf ohne Regal horizontale Kette: Wz-Hub zurück

      U     #s.Sr.ReinGf; 
      U(    ; 
      O     "I_WW_Rein_in_GST"; 
      O     #noWasch; 
      )     ; 
      =     #VbMOReg; 
      U     #VbMOReg; 
      UN    "M_WZM_Regal_angewaehlt"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      S     #s.Sr.WzHubGf; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _019; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_019: NOP   0; 
NETWORK
TITLE =Gf mit Regal nach vorber.:Regalgrf.Vorpos.an-/fertigfahren

      U     #VbMOReg; 
      U     "M_WZM_Regal_angewaehlt"; 
      U     "DB_WWZ".TMDR.VorbLft; 
      U     "M_WZW_Hub_Magazin"; 
      U(    ; 
      UN    #iReg.WPos; 
      UN    #iReg.VPos; 
      O     ; 
      U     #iReg.WPos; 
      U     #iReg.GrOffen; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      S     #s.Sr.RGrRqVp1; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _01a; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01a: NOP   0; 
NETWORK
TITLE =Gf mitRegal nach Wz ablegen:Regalgrf.Pos.an-/fertigfahren

      U     #VbMOReg; 
      U     "M_WZM_Regal_angewaehlt"; 
      U     "DB_WWZ".TMDR.AblLft; 
      U     "M_WZW_Hub_Magazin"; 
      UN    #iReg.WPos; 
      UN    #iReg.VPos; 
      =     L     45.0; 
      U     L     45.0; 
      UN    #SiemRegal; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      S     #s.Sr.RGrRqWp; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _01b; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01b: NOP   0; 
      U     L     45.0; 
      U     #SiemRegal; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      S     #s.Sr.RGrRqPos; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _01c; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01c: NOP   0; 
NETWORK
TITLE =Gf mitRegal nach Wz ablegen:umspeichern Gr[Mag]->Mag

      U     "M_WZM_Regal_angewaehlt"; 
      U     "DB_WWZ".TMDR.AblLft; 
      U     "M_WZW_Hub_Magazin"; 
      U(    ; 
      O     #VbMOReg; 
      O     #s.Sr.RGrRqWp; 
      O     #s.Sr.RGrRqPos; 
      )     ; 
      U     #iReg.WPos; 
      U     #iReg.WziGr; 
      U(    ; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      U     "M_WZGr1_belegt"; 
      O     ; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      U     "M_WZGr2_belegt"; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      R     #s.Sr.RGrRqWp; 
      R     #s.Sr.RGrRqPos; 
      S     #s.Sr.uGrMagMag; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _01d; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01d: NOP   0; 
NETWORK
TITLE =Gf mit Regal:WzGrf.2 entriegeln

      U     "M_WZM_Regal_angewaehlt"; 
      U     "M_WZW_Hub_Magazin"; 
      U(    ; 
      U     "DB_WWZ".TMDR.VorbLft; 
      U     #VbMOReg; 
      U     #iReg.WPos; 
      U     #iReg.WziGr; 
      O     ; 
      U     "DB_WWZ".TMDR.AblLft; 
      U(    ; 
      U(    ; 
      O     #s.Sr.RGrRqWp; 
      O     #s.Sr.RGrRqPos; 
      O     #VbMOReg; 
      )     ; 
      U     #iReg.WPos; 
      U     #iReg.WziGr; 
      O     #s.Sr.uGrMagMag; 
      )     ; 
      U(    ; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      UN    "M_WZGr1_belegt"; 
      O     ; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      UN    "M_WZGr2_belegt"; 
      )     ; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinGf; 
      R     #s.Sr.RGrRqWp; 
      R     #s.Sr.RGrRqPos; 
      R     #s.Sr.uGrMagMag; 
      S     #s.Sr.Gr2entr2; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _01e; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01e: NOP   0; 
NETWORK
TITLE =Gf mit Regal,kein Wz.vorber/ablegen:Wz-Hub zurück
//UN "DB_WWZ".gd0.FTMDsi: Da Fc311 vor den Aktionen bei WzwReset aufgerufen wird
//  muss das Ergebnis des WzwReset für diese Entscheidung abgewartet werden.
      U(    ; 
      U(    ; 
      U(    ; 
      O     #iReg.WziGr; 
      O     #iReg.GrZuOWz; 
      )     ; 
      U     #iReg.WPos; 
      O     #iReg.VPos; 
      )     ; 
      U     "M_WZW_Hub_Magazin"; 
      ON    "M_WZW_Hub_Magazin"; 
      )     ; 
      UN    "DB_WWZ".TMDR.VorbLft; 
      UN    "DB_WWZ".TMDR.AblLft; 
      =     #LOp2; 
NETWORK
TITLE =Gf mit Regal:Wz-Hub zurück

      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      U(    ; 
      O     "DB_WWZ".TMDR.VorbLft; 
      O     "DB_WWZ".TMDR.AblLft; 
      )     ; 
      U(    ; 
      U(    ; 
      O     #s.Sr.RGrRqVp1; 
      O     ; 
      U     #VbMOReg; 
      U     "M_WZW_Hub_Magazin"; 
      )     ; 
      U     #iReg.VPos; 
      O     ; 
      U     #VbMOReg; 
      UN    "M_WZW_Hub_Magazin"; 
      UN    "M_WZW_Hub_GrdSt"; 
      )     ; 
      O     ; 
      U     "DB_WWZ".TMDR.AblLft; 
      U     "M_WZW_Hub_Magazin"; 
      U     #s.Sr.RGrRqPos; 
      U     #iReg.VPos; 
      O     ; 
      U(    ; 
      O     "DB_WWZ".TMDR.VorbLft; 
      O     "DB_WWZ".TMDR.AblLft; 
      )     ; 
      U     #s.Sr.Gr2entr2; 
      U(    ; 
      O     "I_WW_GRF_ENTRIEGELT"; 
      ON    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      O     "M_WZW_Gre1_Pos_Mag"; 
      )     ; 
      O     ; 
      U     #VbMOReg; 
      U     #LOp2; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.RGrRqVp1; 
      R     #s.Sr.ReinGf; 
      R     #s.Sr.Gr2entr2; 
      R     #s.Sr.RGrRqPos; 
      S     #s.Sr.WzHubGf2; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _01f; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_01f: NOP   0; 
NETWORK
TITLE =Gf mit Regal:Regalgrf.zur Gasse bzw.Regal Init/Gst.fahren

      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      O     #s.Sr.WzHubGf2; 
      O     #VbMOReg; 
      )     ; 
      U     "M_WZW_Hub_GrdSt"; 
      U(    ; 
      O     #iReg.WPos; 
      O     #iReg.VPos; 
      )     ; 
      UN    #SiemRegal; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.WzHubGf2; 
      R     #s.Sr.ReinGf; 
      S     #s.Sr.RegGf; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _020; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_020: NOP   0; 
NETWORK
TITLE =Gf: Wz-Verriegelung zurück

      UN    "M_WZM_Regal_angewaehlt"; 
      U     #s.Sr.WzHubGf; 
      U     "M_WZW_Hub_GrdSt"; 
      O     ; 
      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      U     #s.Sr.RegGf; 
      U     "DB_COMM_WZREGAL".Kommando[9].Pos_Quitt; 
      O     ; 
      U     #s.Sr.WzHubGf2; 
      U     "M_WZW_Hub_GrdSt"; 
      )     ; 
      U(    ; 
      UN    #iReg.WPos; 
      UN    #iReg.VPos; 
      O     #SiemRegal; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.WzHubGf; 
      R     #s.Sr.RegGf; 
      R     #s.Sr.WzHubGf2; 
      S     #s.Sr.WzwvGf; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _021; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_021: NOP   0; 
NETWORK
TITLE =----------  Vertikale Kette ---------

      U     #t_WZW_VKETTE_OHNE_TPU; 
      SPBN  E_VK; 

NETWORK
TITLE =



NETWORK
TITLE =Gf:Spi.lösen, wenn GrfStlg.niO (vertikale Kette)

S_VK: U     #s.Sr.wwRset; 
      UN    "DB_WWZ".gd0.FTMDsi; 
      U     #DKons; 
      UN    "M_WZW_Greifer_OK"; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      U     "M_WZW_Hub_GrdSt"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.SpiLoe; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _022; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_022: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:Gr1 --> Mag/Spi fahren (vertikale Kette)

      U     #s.Sr.SpiLoe; 
      U     #tx_wz_spa_geloest; 
      U     #DKons; 
      UN    "M_WZW_Greifer_OK"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Spi; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiLoe; 
      S     #s.Sr.Gr1Mag; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _023; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_023: NOP   0; 
      U     L     45.0; 
      U     "DB_WWZ".TMD0.Gr1Mag; 
      =     L     45.1; 
      U     L     45.1; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiLoe; 
      S     #s.Sr.Gr1Spi; 
      S     #Srw; 
      U     L     45.1; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.1; 
      SPBNB _024; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_024: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:Spi.spannen (vertikale Kette)

      U(    ; 
      U(    ; 
      U     #s.Sr.Gr1Mag; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      O     ; 
      U     #s.Sr.Gr1Spi; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      )     ; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      O     ; 
      U     #s.Sr.wwRset; 
      UN    "DB_WWZ".gd0.FTMDsi; 
      U     "M_WZW_Greifer_OK"; 
      UN    #tx_wz_spa_gespannt; 
      )     ; 
      U     #DKons; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.Gr1Mag; 
      R     #s.Sr.Gr1Spi; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.SpiSpa; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _025; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_025: NOP   0; 
NETWORK
TITLE =Gf nach Einwechseln:umspeichern wenn schon Grf.ok & Spi.gespannt

      U     #s.Sr.wwRset; 
      UN    "DB_WWZ".gd0.FTMDsi; 
      U     #tx_wz_spa_gespannt; 
      U     "M_WZW_Greifer_OK"; 
      U     #DKons; 
      U(    ; 
      U     "M_WZGr1_belegt"; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      O     ; 
      U     "M_WZGr2_belegt"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.uGrSpi; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _026; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_026: NOP   0; 
NETWORK
TITLE =Gf:WzKegelreinigung Blasluft aus (vertikale Kette)

      U     #s.Sr.SpiSpa; 
      U     #tx_wz_spa_gespannt; 
      O     ; 
      U     #s.Sr.uGrSpi; 
      U(    ; 
      UN    "M_WZGr1_belegt"; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      O     ; 
      UN    "M_WZGr2_belegt"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.SpiSpa; 
      R     #s.Sr.uGrSpi; 
      S     #s.Sr.ReinAus; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _027; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_027: NOP   0; 
NETWORK
TITLE =Gf: Werkzeug im Magazin entriegeln (vertikale Kette)
//Start Grundstellungfahren, wenn Greifer weder ein- noch ausgefahren im Magazin 
//steht.
      U(    ; 
      U     #s.Sr.ReinAus; 
      UN    "O_TM_TPU_AIR_CLEANING"; 
      U(    ; 
      O     "DB_WWZ".TMDR.VorbLft; 
      O     "DB_WWZ".TMDR.AblLft; 
      )     ; 
      O     #s.Sr.wwRset; 
      )     ; 
      UN    "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      UN    "M_WZW_Greifer_OK"; 
      U     "M_WZW_Hub_Magazin"; 
      U(    ; 
      O     "I_WZB_Parkstellung"; 
      O     #noBruKtr; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.wwRset; 
      R     #s.Sr.ReinAus; 
      S     #s.Sr.MagTUnlock; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _028; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_028: NOP   0; 
NETWORK
TITLE =Gf: Greifer ausfahren (vertikale Kette)

      U     #s.Sr.MagTUnlock; 
      U     "M_TM_MAG_TOOL_UNLOCK"; 
      U     "M_WZW_Hub_Magazin"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.MagTUnlock; 
      S     #s.Sr.GrAus; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _029; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_029: NOP   0; 
NETWORK
TITLE =Gf: Werkzeug im Magazin Verriegeln (vertikale Kette)
//Start Grundstellungfahren, wenn Greifer eingefahren ist.
      U     #s.Sr.GrEin; 
      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_eingefahren; 
      O     ; 
      U     #s.Sr.wwRset; 
      U     "M_WZW_Greifer_OK"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.ReinAus; 
      R     #s.Sr.GrEin; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.MagTLock; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _02a; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_02a: NOP   0; 
NETWORK
TITLE =Gf: Querhub in Grundstellung fahren (vertikale Kette)

      U     #s.Sr.MagTLock; 
      U     "M_TM_MAG_TOOL_LOCK"; 
      U     "M_WZW_Greifer_OK"; 
      O     ; 
      U     #s.Sr.GrAus; 
      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      =     L     44.0; 
      U     L     44.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      =     L     44.1; 
      O     L     44.1; 
      O     "DB_OEM".WZW_in_Grdst; 
      R     #s.Sr.MagTLock; 
      R     #s.Sr.GrAus; 
      U     L     44.1; 
      BLD   102; 
      S     #Srw; 
      U     L     44.1; 
      BLD   102; 
      S     #s.Sr.WzHubGf; 
      U     L     44.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     44.0; 
      SPBNB _051; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_051: NOP   0; 
NETWORK
TITLE =Gf: Greifer einfahren (vertikale Kette)
//Start Grundstellungfahren, wenn der Greifer weder ein- noch ausgefahren und der 
//querhub in Grundstellung ist.
      U     #s.Sr.WzHubGf; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      O     ; 
      U     #s.Sr.wwRset; 
      UN    "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      UN    "M_WZW_Greifer_OK"; 
      U     "M_WZW_Hub_GrdSt"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.WzHubGf; 
      R     #s.Sr.wwRset; 
      S     #s.Sr.GrEin; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _02b; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_02b: NOP   0; 
NETWORK
TITLE =----- Ende vertikale Kette -----

E_VK: NOP   0; 

NETWORK
TITLE =Gf: X-Achse zum Arbeitsraum

      U     #s.Sr.WzwvGf; 
      U(    ; 
      O     "I_WW_Rueck_hlt_GST"; 
      O     "M_WZM_Regal_angewaehlt"; 
      )     ; 
      O     ; 
      U     #s.Sr.WzHubGf; 
      U     "M_WZW_Hub_GrdSt"; 
      O     ; 
      U     #s.Sr.GrEin; 
      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_eingefahren; 
      O     ; 
      U     #s.Sr.ReinAus; 
      UN    "O_TM_TPU_AIR_CLEANING"; 
      =     L     44.0; 
      U     L     44.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      =     L     44.1; 
      O     L     44.1; 
      O     "DB_OEM".WZW_in_Grdst; 
      R     #s.Sr.WzwvGf; 
      R     #s.Sr.WzHubGf; 
      R     #s.Sr.GrEin; 
      R     #s.Sr.ReinAus; 
      U     L     44.1; 
      BLD   102; 
      S     #s.Sr.XArbRaum; 
      U     L     44.1; 
      BLD   102; 
      S     #Srw; 
      U     L     44.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     44.0; 
      SPBNB _053; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_053: NOP   0; 
NETWORK
TITLE =Gf: Wzw-Tür schliessen

      U     #s.Sr.XArbRaum; 
      U     #XAx_VP; 
      UN    "DB_ACHSE1_X".E_TCPlus; 
      UN    "DB_ACHSE1_X".E_TCMinus; 
      =     L     45.0; 
      U     L     45.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      R     #s.Sr.XArbRaum; 
      S     #s.Sr.Tzu; 
      S     #Srw; 
      U     L     45.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     45.0; 
      SPBNB _02c; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_02c: NOP   0; 
NETWORK
TITLE =Gf fertig, Ende SrKette
//Schritt muss auch ohne Weiterschaltbedingung beendet werden, da sonst im 
//Einzelschritt der Schritt gesetzt bleibt.
//Grund: Wenn Werkzeugwechsler in Grundstellung ist wird kein Startimpuls 
//mehr ausgeloest.
      U     #s.Sr.Tzu; 
      U     "I_WW_1_Klappe_zu"; 
      UN    "I_WW_1_Klappe_auf"; 
      =     L     44.0; 
      U     L     44.0; 
      U     "T_wgfTWa"; 
      U     #SKw; 
      =     L     44.1; 
      O     L     44.1; 
      O     "DB_OEM".WZW_in_Grdst; 
      R     #s.Sr.Tzu; 
      R     #s.Sr.GrEin; 
      R     #s.Sr.WzHubGf; 
      U     L     44.1; 
      BLD   102; 
      S     #Srw; 
      U     L     44.0; 
      BLD   102; 
      S     #s.TWaS; 
      U     L     44.0; 
      SPBNB _055; 
      L     S5T#100MS; 
      T     #s.WTWa; 
_055: NOP   0; 
NETWORK
TITLE =Ansteuerung Wartezeit TWa
//Verweilzeit zwischen den Schritten der Schrittkette
//Die Zeitbasis wird jeweils über #WTWa übergeben! 
      U     #s.TWaS; 
      UN    #Srw; 
      L     #s.WTWa; 
      SE    "T_wgfTWa"; 
NETWORK
TITLE =Ansteuerung Überwachungszeit TUe
//Verweilzeit zwischen den Schritten der Schrittkette
//Die Zeitbasis wird jeweils über #WTWa übergeben! 
      UN    #s.TWaS; 
      UN    #Srw; 
      U     #s.SkStrt; 
      L     #s.WTUe; 
      SE    "T_wgfTUe"; 
NETWORK
TITLE =Befehlsausgabe (BefA):umspeichern Greifer 1 zur Spindel

      U(    ; 
      U     #FpSpiGs; 
      U     "Ta_wgfStrt"; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      O     ; 
      U     #s.Sr.uGrSpi; 
      UN    "Mx_X_ACHSE_WZW_POS"; 
      )     ; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZGr1_belegt"; 
      U     #TNrSpi0; 
      S     "M_Umsp_Gr1-Spdl"; 
NETWORK
TITLE =BefA:umspeichern Greifer 2 zur Spindel

      U(    ; 
      U     #FpSpiGs; 
      U     "Ta_wgfStrt"; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      O     ; 
      U     #s.Sr.uGrSpi; 
      UN    "Mx_X_ACHSE_WZW_POS"; 
      )     ; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZGr2_belegt"; 
      U     #TNrSpi0; 
      S     "M_Umsp_Gr2-Spdl"; 
NETWORK
TITLE =BefA:umspeichern Spindel zu Greifer 1

      U     "M_WZW_Gre1_Pos_Spi"; 
      FN    #s.fk[14]; 
      U     #s.Sr.Gr1Mag; 
      UN    "M_WZGr1_belegt"; 
      UN    #TNrSpi0; 
      S     "M_Umsp_Spdl_Gr1"; 
NETWORK
TITLE =BefA:umspeichern Spindel zu Greifer 2

      U     "M_WZW_Gre1_Pos_Mag"; 
      FN    #s.fk[15]; 
      U     #s.Sr.Gr1Spi; 
      UN    "M_WZGr2_belegt"; 
      UN    #TNrSpi0; 
      S     "M_Umsp_Spdl_Gr2"; 
NETWORK
TITLE =BefA:umspeichern Grf.[Mag]->Magazin

      U     "M_WZW_Hub_Magazin"; 
      FN    #s.fk[2]; 
      U(    ; 
      O     #s.Sr.WzHubGf; 
      O     "DB_OEM".WZW_in_Grdst; 
      )     ; 
      U(    ; 
      U     #t_WZW_VKETTE_OHNE_TPU; 
      U     "M_WZW_Greifer_OK"; 
      O     "I_WW_Rueck_hlt_AUSGEF"; 
      )     ; 
      O(    ; 
      U     #s.Sr.uGrMagMag; 
      FP    #s.fk[10]; 
      )     ; 
      =     L     45.0; 
      U     L     45.0; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      U     "M_WZGr2_belegt"; 
      S     "M_Umsp_Gr2-Mag"; 
      U     L     45.0; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      U     "M_WZGr1_belegt"; 
      S     "M_Umsp_Gr1-Mag"; 
NETWORK
TITLE =positiver Impuls Greifer eingefahren

      U     "DB_Achs11_VMAG_Greifer".MX_Greifer_eingefahren; 
      FP    #s.fk[12]; 
      =     #t_PI_Greifer_eingefahren; 
NETWORK
TITLE =WZV: Umspeichern Magazin-Greifer 1

      U     #t_PI_Greifer_eingefahren; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      UN    "M_WZGr1_belegt"; 
      S     "M_Umsp_Mag-Gr1"; 
NETWORK
TITLE =WZV: Umspeichern Magazin-Greifer 2

      U     #t_PI_Greifer_eingefahren; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      UN    "M_WZGr2_belegt"; 
      S     "M_Umsp_Mag-Gr2"; 
NETWORK
TITLE =BefA:WzwRset auslösen

      U     #s.Sr.wwRset; 
      =     "m_wwgf_wwRset"; 
NETWORK
TITLE =Wzw Grundstlg.fahren:Spi.in den zuletzt von Nc geford.Zust.stell

      U     #s.Sr.SpiZNcS; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".gd0.NcSpiLoe; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      =     "m_wwgf_SpiZNcLoe"; 
      U     L     45.0; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      =     "m_wwgf_SpiZNcSpa"; 
NETWORK
TITLE =BefA:Gr.1 zur Spindel fahren

      U(    ; 
      U     #s.Sr.Gr1SpiT0; 
      UN    "M_WZGr1_belegt"; 
      UN    "M_WZGr2_belegt"; 
      U     #tx_wz_spa_gespannt; 
      O     #s.Sr.Gr1Spi; 
      )     ; 
      U(    ; 
      O     "DB_ACHSE14".E_TCPlus; 
      O     "DB_ACHSE14".E_TCMinus; 
      ON    "M_WZW_Gre1_Pos_Spi"; 
      )     ; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_Gr1Spi"; 
NETWORK
TITLE =BefA:Gr.1 zum Magazin fahren

      U(    ; 
      U     #s.Sr.Gr1MagT0; 
      UN    "M_WZGr1_belegt"; 
      UN    "M_WZGr2_belegt"; 
      U     #tx_wz_spa_gespannt; 
      O     #s.Sr.Gr1Mag; 
      )     ; 
      U(    ; 
      O     "DB_ACHSE14".E_TCPlus; 
      O     "DB_ACHSE14".E_TCMinus; 
      ON    "M_WZW_Gre1_Pos_Mag"; 
      )     ; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_Gr1Mag"; 
NETWORK
TITLE =BefA:Spindel lösen

      U     #s.Sr.SpiLoe; 
      U     "M_Leistung_Steht_an"; 
      U     "M_WZW_Hub_GrdSt"; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      =     "m_vwgf_SpiLoe"; 
NETWORK
TITLE =BefA:Spindel spannen

      U     #s.Sr.SpiSpa; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_SpiSpa"; 
NETWORK
TITLE =BefA:Grf.2 entriegeln

      U(    ; 
      O     #s.Sr.Gr2entr; 
      O     #s.Sr.Gr2entr2; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_Gr2entr"; 
NETWORK
TITLE =BefA:Bruchkontrolle zurück (vorerst nicht benutzt)

      U     #s.Sr.BruchGf; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_BruchGf"; 
NETWORK
TITLE =BefA:Wz-Reinigung zurück

      U     #s.Sr.ReinGf; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_ReinGf"; 
NETWORK
TITLE =BefA:Wzw-Hub zurück

      U(    ; 
      U     #s.Sr.WzHubGf; 
      UN    "M_MAG_Laeuft"; 
      O     ; 
      U     #s.Sr.WzHubGf2; 
      U     "M_WZM_Regal_angewaehlt"; 
      U(    ; 
      U     #iReg.WPos; 
      U(    ; 
      O     #iReg.WziGr; 
      O     #iReg.GrZuOWz; 
      )     ; 
      O     #iReg.VPos; 
      O     ; 
      UN    "M_WZW_Hub_Magazin"; 
      UN    "M_WZW_Hub_GrdSt"; 
      )     ; 
      )     ; 
      U(    ; 
      O     "M_WZW_Greifer_OK"; 
      O     "DB_Achs11_VMAG_Greifer".MX_Greifer_ausgefahren; 
      )     ; 
      U(    ; 
      ON    "M_WZM_Regal_angewaehlt"; 
      O     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Uebergabeber; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_WzHubGf"; 
NETWORK
TITLE =BefA:Regalgrf.Vorpos (ca.60mm über Wechselpos) anfahren

      U(    ; 
      O     #s.Sr.RGrRqVp1; 
      O     #s.Sr.RGrRqPos; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      U     #iReg.bereit; 
      =     "m_wwgf_RGrRqVp"; 
NETWORK
TITLE =BefA:Regalgrf.Wechselpos anfahren

      U     #s.Sr.RGrRqWp; 
      U     "M_Leistung_Steht_an"; 
      U     #iReg.bereit; 
      =     "m_wwgf_RGrRqWp"; 
NETWORK
TITLE =BefA:Regalgrf. zur Gasse bzw. Regal Init/Gst.anfahren
//Hier keine Abfrage von #iReg.bereit:
//Wenn das Omron-Regal nach einem Abbruch mit eingeschwenktem Greifer (-90°) bei 
//der Vorpos. steht kommt nach einem Abbruch kein #iReg.bereit vom Regal. Kommando
//[9] wird auch ohne #iReg.bereit von Omron angenommen. slh, bew, 6.12.2006
      U     #s.Sr.RegGf; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_RegGf"; 
NETWORK
TITLE =BefA:Wz-Verriegelung am Übergabeplatz zurück

      U     #s.Sr.WzwvGf; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_WzwvGf"; 
NETWORK
TITLE =BefA:Wz am Magazin autom.Wechselplatz verriegeln

      U     #s.Sr.MagTLock; 
      U     "M_Leistung_Steht_an"; 
      =     "m_vwgf_MagTLock"; 
NETWORK
TITLE =BefA:Wz am Magazin autom.Wechselplatz entriegeln

      U     #s.Sr.MagTUnlock; 
      U     "M_Leistung_Steht_an"; 
      =     "m_vwgf_MagTUnlock"; 
NETWORK
TITLE =BefA:Greifer im Magazin ausfahren

      U     #s.Sr.GrAus; 
      U     "M_Leistung_Steht_an"; 
      =     "m_vwgf_GrAus"; 
NETWORK
TITLE =BefA:Greifer im Magazin einfahren

      U     #s.Sr.GrEin; 
      U     "M_Leistung_Steht_an"; 
      =     "m_vwgf_GrEin"; 
NETWORK
TITLE =BefA:X-Achse freifahren zum Arbeitsraum

      U     #s.Sr.XArbRaum; 
      U(    ; 
      O     "DB_ACHSE1_X".E_TCPlus; 
      O     "DB_ACHSE1_X".E_TCMinus; 
      ON    #XAx_VP; 
      )     ; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_XArbRaum"; 
NETWORK
TITLE =BefA:Wzw-Tür schliessen

      U     #s.Sr.Tzu; 
      U     #XAx_VP; 
      U     "M_Leistung_Steht_an"; 
      =     "m_wwgf_Tzu"; 
NETWORK
TITLE =BefA:Halt Asup

      UN    "DB_ASUP_MACHINE".Start_Asup; 
      R     "m_vwgf_stpAsup1"; 
      UN    "m_wwgf_XArbRaum"; 
      UN    "m_wwgf_Gr1Spi"; 
      UN    "m_wwgf_Gr1Mag"; 
      UN(   ; 
      U     "IX_MSST_Ta_2_4"; 
      UN    "M_Handbetrieb"; 
      )     ; 
      FP    #s.fk[7]; 
      S     "m_vwgf_stpAsup1"; 
      NOP   0; 
NETWORK
TITLE =Bedienungshinweise

      U     "m_rqwwgf"; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_SIEM_KANAL_1".E_ChanActive; 
      UN    #s.SkStrt; 
      =     #Meld.noChAkt; 
      U     L     45.0; 
      UN    "DB_SIEM_KANAL_1".E_ChanReset; 
      =     #Meld.noChRset; 
      U     L     45.0; 
      U     "DB_OEM".WZW_in_Grdst; 
      =     #Meld.WwGfRdy; 
      U     L     45.0; 
      U     "DB_OEM".Einrichten_Aktiv; 
      =     #Meld.noRett; 
      U     L     45.0; 
      U     #s.wwJogBew; 
      =     #Meld.noWwBew; 
      U     L     45.0; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3070_AKTIV; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.MASCHTYP_3071_AKTIV; 
      =     #Meld.MaTypNiO; 
NETWORK
TITLE =Anzeige fehlende Weiterschaltbedingungen

      U     "T_wgfTUe"; 
      U     #s.Sr.SpiZNcS; 
      UN    #SfSpiZNcS; 
      =     L     45.0; 
      U     L     45.0; 
      U     "DB_WWZ".gd0.NcSpiLoe; 
      =     L     45.1; 
      U     L     45.1; 
      U     "Mx_X_ACHSE_WZW_POS"; 
      UN    #tx_wz_spa_geloest; 
      =     #Meld.SpiNoGl; 
      U     L     45.1; 
      UN    "Mx_X_ACHSE_WZW_POS"; 
      =     #Meld.XnoWwPos; 
      U     L     45.0; 
      UN    "DB_WWZ".gd0.NcSpiLoe; 
      UN    #tx_wz_spa_gespannt; 
      =     #Meld.SpiNoGs; 
NETWORK
TITLE =Lokaldaten retten

      CALL "BLKMOVE" (
           SRCBLK                   := #s,
           RET_VAL                  := #WertInt,
           DSTBLK                   := "DB_WWZ".s);
      NOP   0; 
END_FUNCTION

