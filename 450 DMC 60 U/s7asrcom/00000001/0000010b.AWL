FUNCTION "FC_ACHS_5" : VOID
TITLE =
//$Revision: 1.17 $
//$Date: 2008/10/28 08:43:29CET $
//$Author: hgc $
VERSION : 0.1


VAR_TEMP
  TX_Vorsch_Sperre_5 : BOOL ;	
  TX_Bremse_5_oeffnen : BOOL ;	
  tx_dummy_5 : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =5-Achse: Aktivierung Softwarenocken nachdem Achse referiert ist

      UN    "DB_PLC_MD_DB20".UDHex._02_BIT4_ACHSE5_MESSYST; 
      U     "DB_ACHSE5".E_RefSyn1; 
      O     ; 
      U     "DB_PLC_MD_DB20".UDHex._02_BIT4_ACHSE5_MESSYST; 
      U     "DB_ACHSE5".E_RefSyn2; 
      =     "DB_ACHSE5".A_SWCam; 
NETWORK
TITLE =AX: Achse 5 loesen

      U     "M_Reset_Taste"; //#EX_Reset_Taste
      O(    ; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      FP    "m_557.7"; 
      )     ; 
      U     "DB_PLC_MD_DB20".UDHex._11_BIT4_Klemmung_BAxe; //    #EX_Resetstatus_Klemmung
      S     "M_Achse5_loesen"; 


NETWORK
TITLE =Achse 5 B-Achse -> Aufruf FC_ACHSE_RUND

      CALL "FC_ACHSE_RUND" (
           EX_ENABLE                := TRUE,
           EX_Reset_Taste           := FALSE,//"M_Reset_Taste"
           EX_Ruecksetze_Fehler     := "M_Ruecksetze_Fehler",
           EX_Achse_vorhanden       := "M_5Achse_existiert",
           EX_I_Klemmung_Auf        := "I_AL_5ACHS_KLE_geloest",
           EX_I_Klemmung_zu         := "I_AL_5ACHS_KLE_GEKLEMMT",
           EX_Fahranf_Plus          := "DB_ACHSE5".E_TCMinus,
           EX_Fahranf_Minus         := "DB_ACHSE5".E_TCPlus,
           EX_Achse_steht           := "DB_ACHSE5".E_Stat,
           EX_Klemmvor_Aktiv        := "M_RundAchse_aktiv",
           EX_Achs_Typ              := "MB_5Achs_Typ",
           EX_Achs_Konfig           := "MB_5Achs_Konfig",
           EW_Einsch_Verz           := "DB_PLC_MD_DB20".UDInt._082_AUSSCHALTVERZ_5_AX,
           EW_Aussch_Verz           := "DB_PLC_MD_DB20".UDInt._083_EINSCHALTVERZ_5_AX,
           ET_Timer_Klemmung        := "Tv_Ax5_Klemmung",
           ET_Timer_Ueberwachung    := "Tv_Ax5_Fehl_Ueb",
           EX_Klemmung_offen_halten := FALSE,
           EX_Ax_E_f92x4            := "DB_ACHSE5".E_RLIact,
           Ex_JogReqAx_plusminus    := FALSE,
           EX_Takttisch             := FALSE,
           EX_Takttisch_Teilungspos := FALSE,
           EAX_Regler_ein           := "mx_fn_achs5",
           EAX_Vorschub_Sperre      := #tx_dummy_5,
           EAX_O_Klemmung_Auf       := "O_5_Klem_Bremse_Auf",
           EAX_Req_Auf_Klemmung     := "M_Achse5_loesen",
           EAX_Req_Zu_Klemmung      := "M_Achse5_klemmen",
           EAX_Ready_Klemmung       := "M_Achse5_Ready",
           EAX_Achse_Geloest        := "M_Achse5_geloest",
           EAX_Klemmung_Auf         := "M_A5_loes_aktiv",
           EAX_TR_Pos               := "M_Tr_pos_Ax5",
           EAX_TR_Neg               := "M_Tr_neg_Ax5",
           EAX_TO_Klemmung_Auf      := "MX_AX5_O_Klemm_Auf",
           EAX_Klemmvor_Aktiv       := "DB_FEHLERMELDUNG".Meldung._702041_Vor_Freig_5Ax,
           EAX_FP1_FUE              := "MX_AX5_FP1_FUe",
           EAX_FP2_FUE              := "MX_AX5_FP2_FUe",
           EAX_Klemmung_Zu_Os       := "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700746_5Ax_Klemm_Zu_0S,
           EAX_Klemmung_Auf_0s      := "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700745_5Ax_Klemm_Auf_0S,
           EAB_SKZ_Achse            := "MB_SKZ_5ACHS");

NETWORK
TITLE =Vorschubsperre

      UN    "M_Achse5_geloest"; 
      ON    "I_AL_5ACHS_KLE_geloest"; //"I_5Ax_Klemm_Auf"
      UN(   ; 
      L     "MB_5Achs_Typ"; 
      L     2; 
      ==I   ; 
      )     ; 
      O     "DB_FAMILIEN_MODUL".Gesamt.A_Vorschub_Halt_5_Achse; 
      O     "DB_FEHLERMELDUNG".Meldung._702041_Vor_Freig_5Ax; 
      =     #TX_Vorsch_Sperre_5; 
NETWORK
TITLE =Achse 5 B-Achse -> Aufruf FC_ACHSE_HAUPT

      CALL "FC_ACHSE_HAUPT" (
           EX_EN                    := TRUE,
           EX_UDHex_00_IB_Bit_Achse := "DB_PLC_MD_DB20".UDHex._00_BIT4_ACHSE5_AUSBLEND,
           EX_UDHex_01_Ax_Messystem := "DB_PLC_MD_DB20".UDHex._02_BIT4_ACHSE5_MESSYST,
           EX_Option_Safety         := "O_INFEED_ENABLE_NCU",// Bei Solutionline bleibt RF und ImpFrg für 3 Sek. nach Not-Aus anstehen
           EX_Safe_RF_aus           := FALSE,
           EX_Safe_StopC_aktiv      := FALSE,
           EX_Safe_StopA_aktiv      := "DB_ACHSE5".E_StopAB,
           EX_Safe_Teststop_laeuft  := "DB_SPL".IPLC_ZD_GR1_RUN,
           EX_Maschine_Ein          := "M_MA_Maschine_Ein",
           EX_Antrieb_Sperre        := "DB_FAMILIEN_MODUL".Achssperre_extern.E_Ax_5,
           EX_Freigabe_Regler       := "mx_fn_achs5",
           EX_Leistung_steht_an     := "M_Leistung_Steht_an",
           EX_GewSchn_Aktiv         := "M_Gewindeschneid_aktiv",
           EX_VSHalt_EinzelAchse    := #TX_Vorsch_Sperre_5,
           EX_VSHalt_Gruppe         := "M_Vorschub_Halt_Haupt",
           EX_VSHalt_Kanal          := "DB_FAMILIEN_MODUL".Gesamt.A_Vorschub_Halt_Kanal,
           EX_RefPkt_Achse          := FALSE,
           EX_Ax_E_MotOK_93x5       := "DB_ACHSE5".E_MotOK,
           EX_Ax_E_MTempWarn_94x0   := "DB_ACHSE5".E_MTempWarn,
           EX_Ax_E_Steht_61x4       := "DB_ACHSE5".E_Stat,
           EX_Ax_E_KTempWarn_94x1   := "DB_ACHSE5".E_HTempWarn,
           EX_Ax_E_LageRegler_61x5  := "DB_ACHSE5".E_PositContr,
           EX_Ax_E_IntSperr_93x6    := "DB_ACHSE5".E_IntegratDisable,
           EX_Ax_E_ImpFrei_93x7     := "DB_ACHSE5".E_PulseEnable,
           EX_Ax_E_DrehzRegler_61x6 := "DB_ACHSE5".E_SpeedContr,
           EX_Ax_E_StromRegler_61x7 := "DB_ACHSE5".E_CurrentContr,
           EX_Ax_E_FahrAF_61x0      := "DB_ACHSE5".E_TravRequ,
           EX_Ax_E_FBMinus_64x6     := "DB_ACHSE5".E_TCMinus,
           EX_Ax_E_FBPlus_64x7      := "DB_ACHSE5".E_TCPlus,
           EX_Eilgang_aktiv         := "M_Anf_Eilgang",
           EX_Fehler_Quit           := "M_Ruecksetze_Fehler",
           EX_RefNeu_Sync           := FALSE,
           EX_AxPark                := FALSE,
           EB_Achs_Typ              := "MB_5Achs_Typ",
           ET_Timer_Ax_Freigabe     := "Te_AX_B_Bremse_loesen",
           EAX_Ax_A_KorrW_1x7       := "DB_ACHSE5".A_ORactive,
           EAX_Ax_A_ReglerFrei_2x1  := "DB_ACHSE5".A_ContrEnable,
           EAX_Ax_A_ImpFrei_21x7    := "DB_ACHSE5".A_PulseEnable,
           EAX_Ax_A_VSSpHalt_4x3    := "DB_ACHSE5".A_FDSpStop,
           EAX_Ax_A_ASpSperre_1x3   := "DB_ACHSE5".A_ASpDisable,
           EAX_A_A_NachfBetr_1x4    := "DB_ACHSE5".A_Follow_upMode,
           EAX_Ax_A_LageMess1_1x5   := "DB_ACHSE5".A_PosMeas1,
           EAX_Ax_A_LageMess2_1x6   := "DB_ACHSE5".A_PosMeas2,
           EAX_Ax_A_EGUeberlag_4x5  := "DB_ACHSE5".A_RapidTrOR,
           EAX_Ax_A_RefVerzoeg_12x7 := "DB_ACHSE5".A_DelayRef,
           EAX_AX_A_Sp1Syn_16x4     := "DB_ACHSE5".A_Sp1Syn,
           EAX_Alarm_Regler         := "DB_FEHLERMELDUNG".Spi_VS_Halt._700120_5_IMP_REGFRG_0S,
           EAX_Alarm_VSSP_Mot_Temp  := "DB_FEHLERMELDUNG".Spi_VS_Halt._700132_5_TEMP_ZU_HOCH,
           EAX_Alarm_VSSP_KK_Temp   := "DB_FEHLERMELDUNG".Spi_VS_Halt1._510127_5_KK_TEMP_ZH,
           EAX_Alarm_NA_MotOK       := "DB_FEHLERMELDUNG".Spi_VS_Halt3._701136_5_DR_READY_0,
           EAX_M_Bremse_oeffnen     := #TX_Bremse_5_oeffnen);

NETWORK
TITLE =Bremse schliessen beim Bremsentest
//      U     #TX_Bremse_5_oeffnen
//      UN    "DB_SAFE_ZD".GR1_ZD.Bremse  // Zwangsdynamisierung  --> zumachen 
//wegen freiem Fall
//      UN    "DB_SAFE_ZD".GR2_BT.Bremse_schliessen    // Bremsentest --> fahren 
//gegen die Bremse
//      =     "O_AL_5ACHS_Bremse_auf"
//
      U     #TX_Bremse_5_oeffnen; 
      UN    "DB_SAFE_ZD".GR1_ZD.Bremse; 
      UN    "DB_SAFE_ZD".GR1_BT2.Bremse_schliessen; 
      =     "O_AL_5ACHS_Bremse_auf"; 
NETWORK
TITLE =Zwangsdynamisierung
// Bei Zwangsdynamisierung Reglerfreigabe wegnehmen --> arbeiten gegen Bremse
// Impulsfreigabe setzen
      U     "DB_SAFE_ZD".GR1_ZD.Reglerfreigabe; 
      SPBN  xx3; 
      R     "DB_ACHSE5".A_ContrEnable; 
      S     "DB_ACHSE5".A_PulseEnable; 
xx3:  NOP   0; 

      U     "DB_SAFE_ZD".Seco_Test.Test_Bremse_laeuft; 
      O     "DB_NC_PLC".WZW_NC_Aktiv; 
      =     "DB_ACHSE5".A_SWLimit2Minus; 
      =     "DB_ACHSE5".A_SWLimit2Plus; 

NETWORK
TITLE =SINAMICS / SOLUTIONLINE: Nahtstellensignal Bremse schliessen

      U     "DB_PLC_MD_DB20".UDHex._31_Bit1_SOLUTIONLINE; 
      U(    ; 
      O     "DB_SAFE_ZD".GR1_BT2.Bremse_schliessen; 
      O     "DB_SAFE_ZD".GR1_ZD.Bremse; 
      )     ; 
      =     "DB_ACHSE5".A_BrakeToClose; 
END_FUNCTION

