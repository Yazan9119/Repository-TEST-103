DATA_BLOCK "DB_OUT"
TITLE =
//$Revision: 1.14 $ 
//$Date: 2008/06/26 12:24:36CEST $  
//$Author: boa $   
AUTHOR : APetz
VERSION : 0.1


  STRUCT 	
   AMX_FEED_STOP : BOOL ;	//Vorschub Halt
   AMX_FEED_HOLD_CYCL : BOOL ;	//Vorschub Halt (gilt nicht bei Eilgang-G00)
   AMX_SPINDLE_FEED_STOP : BOOL ;	//Spindel und Vorschub Halt (mit Fehlermeldung)
   AMX_SPINDLE_FEED_STOP_P : BOOL ;	//Spindel und Vorschub Halt nach abgearb.Satz 
   AMX_EMERGENCY_STOP : BOOL ;	//Not-Aus
   AMX_EMERGENCY_STOP_P : BOOL ;	//Not-Aus nach abgearbeitetem Satz
   AMX_LUBRICATION_LEVEL : BOOL ;	//Füllstand Schmieraggregat
   AMX_SPINDLE_FEED_STOP_G0 : BOOL ;	//Spindel und Vorschub Halt beim nächsten G0
   AMX_PC_RELEASE : BOOL ;	//Freigabe Palettenwechsler 
   AMX_PC_LOCK : BOOL ;	//Pal Change not allowed
   AMX_PC_ENABLE : BOOL ;	//Palettenwechsel Ablauf freigeben
   AMX_STACKER_LOCK : BOOL ;	//Pal Change not allowed with RS
   AmxLockToolChanger : BOOL ;	//Werkzeugwechsler sperren
   QmxLockRotationTable : BOOL ;	//VORSCHUBSPERRE NC-RUNDTISCH
   QmxLockXYZAxis : BOOL ;	//VORSCHUBSPERRE XYZ-ACHSE
   frei1_7 : BOOL ;	
   AMX_ERROR_KSS : BOOL ;	//Fehlermeldung Späneförderer/Kühlmittel
   AMX_FLOW_CONTROL_M7 : BOOL ;	//Kühlmitteldurchfluss im Hochdruck
   AMX_FLOW_CONTROL_M8 : BOOL ;	//Kühlmitteldurchfluss im Niederdruck
   frei2_3 : BOOL ;	
   frei2_4 : BOOL ;	
   frei2_5 : BOOL ;	
   frei2_6 : BOOL ;	
   frei2_7 : BOOL ;	
   frei3_0 : BOOL ;	
   frei3_1 : BOOL ;	
   frei3_2 : BOOL ;	
   frei3_3 : BOOL ;	
   frei3_4 : BOOL ;	
   frei3_5 : BOOL ;	
   frei3_6 : BOOL ;	
   frei3_7 : BOOL ;	
   AMX_ZPS_RELEASED : BOOL ;	//Nullpunkt-Spannsystem gelöst
   AMX_ZPS_CLAMPED : BOOL ;	//Nullpunkt-Spannsystem gespannt
   frei4_2 : BOOL ;	
   frei4_3 : BOOL ;	
   frei4_4 : BOOL ;	
   frei4_5 : BOOL ;	
   frei4_6 : BOOL ;	
   frei4_7 : BOOL ;	
   AMX_SUS_COUPLE : BOOL ;	//Anforderung SpannHydraulik ankuppeln
   AmxSusDoorOpen : BOOL ;	//Rüstplatztüren sind vollständig geöffnet
   frei5_2 : BOOL ;	
   frei5_3 : BOOL ;	
   frei5_4 : BOOL ;	
   frei5_5 : BOOL ;	
   frei5_6 : BOOL ;	
   frei5_7 : BOOL ;	
   AMX_LOCK_NC_START : BOOL ;	//NC START SPERRE
   AMX_QUIT_FUNKTION1 : BOOL ;	//Quittieren des Funktionsaufrufs
   AMX_QUITT_MTH : BOOL ;	//Rückmeldung von M-Funktionen
   frei6_3 : BOOL ;	
   frei6_4 : BOOL ;	
   frei6_5 : BOOL ;	
   frei6_6 : BOOL ;	
   frei6_7 : BOOL ;	
   AMX_AXIS_MOVE_BACK : BOOL ;	//Rückzug in Werkzeugrichtung
   frei7_1 : BOOL ;	
   frei7_2 : BOOL ;	
   frei7_3 : BOOL ;	
   frei7_4 : BOOL ;	
   frei7_5 : BOOL ;	
   frei7_6 : BOOL ;	
   frei7_7 : BOOL ;	
   AMW_MESSAGENUMBER : WORD ;	//Übergabe der Meldungs-Nummer
   OmxDataRoutingBit0 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_0>
   OmxDataRoutingBit1 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_1>
   OmxDataRoutingBit2 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_2>
   OmxDataRoutingBit3 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_3>
   OmxDataRoutingBit4 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_4>
   OmxDataRoutingBit5 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_5>
   OmxDataRoutingBit6 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_6>
   OmxDataRoutingBit7 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_7>
   OmxDataRoutingBit8 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_8>
   OmxDataRoutingBit9 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_9>
   OmxDataRoutingBit10 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_10>
   OmxDataRoutingBit11 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_11>
   OmxDataRoutingBit12 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_12>
   OmxDataRoutingBit13 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_13>
   OmxDataRoutingBit14 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_14>
   OmxDataRoutingBit15 : BOOL ;	//Datensignal von digitalem Ausgang <OX_ROUTING_BIT_15>
  END_STRUCT ;	
BEGIN
   AMX_FEED_STOP := FALSE; 
   AMX_FEED_HOLD_CYCL := FALSE; 
   AMX_SPINDLE_FEED_STOP := FALSE; 
   AMX_SPINDLE_FEED_STOP_P := FALSE; 
   AMX_EMERGENCY_STOP := FALSE; 
   AMX_EMERGENCY_STOP_P := FALSE; 
   AMX_LUBRICATION_LEVEL := FALSE; 
   AMX_SPINDLE_FEED_STOP_G0 := FALSE; 
   AMX_PC_RELEASE := FALSE; 
   AMX_PC_LOCK := FALSE; 
   AMX_PC_ENABLE := FALSE; 
   AMX_STACKER_LOCK := FALSE; 
   AmxLockToolChanger := FALSE; 
   QmxLockRotationTable := FALSE; 
   QmxLockXYZAxis := FALSE; 
   frei1_7 := FALSE; 
   AMX_ERROR_KSS := FALSE; 
   AMX_FLOW_CONTROL_M7 := FALSE; 
   AMX_FLOW_CONTROL_M8 := FALSE; 
   frei2_3 := FALSE; 
   frei2_4 := FALSE; 
   frei2_5 := FALSE; 
   frei2_6 := FALSE; 
   frei2_7 := FALSE; 
   frei3_0 := FALSE; 
   frei3_1 := FALSE; 
   frei3_2 := FALSE; 
   frei3_3 := FALSE; 
   frei3_4 := FALSE; 
   frei3_5 := FALSE; 
   frei3_6 := FALSE; 
   frei3_7 := FALSE; 
   AMX_ZPS_RELEASED := FALSE; 
   AMX_ZPS_CLAMPED := FALSE; 
   frei4_2 := FALSE; 
   frei4_3 := FALSE; 
   frei4_4 := FALSE; 
   frei4_5 := FALSE; 
   frei4_6 := FALSE; 
   frei4_7 := FALSE; 
   AMX_SUS_COUPLE := FALSE; 
   AmxSusDoorOpen := FALSE; 
   frei5_2 := FALSE; 
   frei5_3 := FALSE; 
   frei5_4 := FALSE; 
   frei5_5 := FALSE; 
   frei5_6 := FALSE; 
   frei5_7 := FALSE; 
   AMX_LOCK_NC_START := FALSE; 
   AMX_QUIT_FUNKTION1 := FALSE; 
   AMX_QUITT_MTH := FALSE; 
   frei6_3 := FALSE; 
   frei6_4 := FALSE; 
   frei6_5 := FALSE; 
   frei6_6 := FALSE; 
   frei6_7 := FALSE; 
   AMX_AXIS_MOVE_BACK := FALSE; 
   frei7_1 := FALSE; 
   frei7_2 := FALSE; 
   frei7_3 := FALSE; 
   frei7_4 := FALSE; 
   frei7_5 := FALSE; 
   frei7_6 := FALSE; 
   frei7_7 := FALSE; 
   AMW_MESSAGENUMBER := W#16#0; 
   OmxDataRoutingBit0 := FALSE; 
   OmxDataRoutingBit1 := FALSE; 
   OmxDataRoutingBit2 := FALSE; 
   OmxDataRoutingBit3 := FALSE; 
   OmxDataRoutingBit4 := FALSE; 
   OmxDataRoutingBit5 := FALSE; 
   OmxDataRoutingBit6 := FALSE; 
   OmxDataRoutingBit7 := FALSE; 
   OmxDataRoutingBit8 := FALSE; 
   OmxDataRoutingBit9 := FALSE; 
   OmxDataRoutingBit10 := FALSE; 
   OmxDataRoutingBit11 := FALSE; 
   OmxDataRoutingBit12 := FALSE; 
   OmxDataRoutingBit13 := FALSE; 
   OmxDataRoutingBit14 := FALSE; 
   OmxDataRoutingBit15 := FALSE; 
END_DATA_BLOCK

