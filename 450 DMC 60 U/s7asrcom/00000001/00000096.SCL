FUNCTION FC_PS_JOB_FERTIG : VOID

TITLE= ''
//$Revision: 1.7 $
//$Date: 2008/04/14 15:07:07CEST $
//$Author: schmoelp $

VAR_INPUT
    // Eingangsparameter
    iAnzahlJobs: INT; 
END_VAR

VAR_IN_OUT
  // Durchgangsparameter
END_VAR

VAR_OUTPUT
 // Ausgangsparameter
END_VAR

VAR_TEMP
    i: INT;
    bResetfertig: BOOL;
    ILowPrio: INT;
    ILowPrioJob: INT;
  // temporäre Variablen
END_VAR

BEGIN

// Wenn neue Palette im Arbeitsraum ist Setzen von JOB fertig bei Priorität > 20
IF "DB_JOB".Pal_Nr_alt <> "DB_PAL_NR".Platz[0].Pal_Nr THEN
   "DB_JOB".Pal_Nr_alt:= "DB_PAL_NR".Platz[0].Pal_Nr;
   FOR i:=1 TO iAnzahlJobs BY 1 DO
       IF BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) > 20 THEN
          IF "DB_JOB".Job[i].Prg_Name = "DB_PAL_NR".Platz[0].Prg_name THEN
             "DB_JOB".Job[i].fertig:= TRUE;
          END_IF;
       END_IF;
   END_FOR;
END_IF;

// Rücksetzen Bit fertig, wenn bei allen vorhandenen aktiven Prioritäten > 20 das Bit fertig gesetzt ist.
bResetfertig:=FALSE;
FOR i := 1 TO iAnzahlJobs BY 1 DO
    IF (BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) > 20) AND "DB_JOB".Job[i].fertig = 1 THEN
       bResetfertig:=TRUE;
    END_IF;
    IF (BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) > 20) AND "DB_JOB".Job[i].fertig = 0 THEN
       bResetfertig:=FALSE;
    EXIT;
    END_IF;
END_FOR;
IF (bResetfertig=TRUE) THEN
   FOR i := 1 TO iAnzahlJobs BY 1 DO
   "DB_JOB".Job[i].fertig:=FALSE;
   END_FOR;
END_IF;

// Wenn in der Maschine die Palette mit der niedrigsten Priorität > 20 ist, muss das Bit fertig wieder gesetzt werden.
ILowPrio:=0;
ILowPrioJob:=0;
FOR i := 1 TO iAnzahlJobs BY 1 DO
    IF (BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) > 20) AND (BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) < ILowPrio) OR (ILowPrio = 0) THEN
       ILowPrio:=BYTE_TO_INT("DB_JOB".Job[i].Prioritaet);
       ILowPrioJob:=BYTE_TO_INT("DB_JOB".Job[i].Job_Nr);
    END_IF;
END_FOR;
IF (ILowPrioJob > 0) AND (INT_TO_BYTE(ILowPrioJob) = ("DB_JOB".Job_Maschinenplatz)) THEN
   "DB_JOB".Job[ILowPrioJob].fertig:=TRUE;
END_IF;

END_FUNCTION
