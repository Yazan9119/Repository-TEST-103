FUNCTION "FC_MA_PASS_FEI_WAR" : VOID
TITLE =
//$Revision: 1.13 $
//$Date: 2008/07/22 08:53:04CEST $
//$Author: sja $
AUTHOR : SJA
FAMILY : UT
NAME : UTKennw
VERSION : 0.1


VAR_INPUT
  E_enabled : BOOL ;	
END_VAR
VAR_TEMP
  temp_rueckgabewert : INT ;	
  temp_Reset_Kennwort : BOOL ;	
  temp_akt_Monatstag : DINT ;	
END_VAR
BEGIN
NETWORK
TITLE =Fehler rücksetzen / Modul enabled

      U     #E_enabled; 
      SPBN  ENDE; 

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".Meldung._702014_Kennwort_geloesc; 
      R     "DB_FEHLERMELDUNG".NotAus._700015_Feierabend; 
      R     "DB_FEHLERMELDUNG".MELDUNG2._701261_Warml_angewaehlt; 
      S     "O_AL_NEG_POWERSAVE_STBY"; 

NETWORK
TITLE =Aufruf: Service Agent
//- Intervalle für Wartung
      CALL "FC_SERVICE_AGENT" ;
      NOP   0; 
NETWORK
TITLE =Auslesen der Systemzeit (und des Systemdatums)

      U     "M_Takt_1s"; 
      S     "DB_UT_UHRZEIT".Uhr_lesen; 

      U     "DB_UT_UHRZEIT".Uhr_lesen; 
      SPBN  N2; 

NETWORK
TITLE =Uhrzeit lesen

      CALL "READ_CLK" (
           RET_VAL                  := #temp_rueckgabewert,// groesser, gleich null --> Fkt o.k.
           CDT                      := "DB_UT_UHRZEIT".Uhrzeit);

      R     "DB_UT_UHRZEIT".Uhr_lesen; 

//Anzeige Wizard
      L     DB234.DBB    0; 
      L     2000; 
      +I    ; 
      T     "DB_UT_UHRZEIT".Uhrzeit_Jahr; 

// alle 20 Minuten rücksetzen des Pasworts

      U(    ; 
      L     0; 
      L     DB234.DBB    4; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     32; 
      ==I   ; 
      )     ; 
      O(    ; 
      TAK   ; 
      L     64; 
      ==I   ; 
      )     ; 
      UN    "DB_PLC_MD_DB20".UDHex._04_BIT4_EINRICHT_BETR; 
      U     "DB_PLC_MD_DB20".UDHex._31_Bit4_PW_alle20Minute; 
      FP    "Mx_FP_20MinPasswrt_rueck"; 
      S     "DB_INST_FB4_DB374".Req; 


//--- oder Ruecksetzen des Passwortes bei Tageswechsel

      L     DB234.DBB    2; // Ist Tageszahl im Monat
      T     #temp_akt_Monatstag; 
      L     "DB_REMANENT".Aktueller_Tag_desMonats; // ungleich gespeicherter Tageszahl
      <>D   ; 
      UN    "I_AL_MASCHINE_EIN"; // Kennwort Ruecksetzwen nur wenn Maschine aus
      S     "DB_INST_FB4_DB374".Req; // 'Kennwort zurücksetzen'- Request setzen
      SPBN  KENW; 

      L     #temp_akt_Monatstag; // speichere neue Tageszahl
      T     "DB_REMANENT".Aktueller_Tag_desMonats; 


NETWORK
TITLE =Kennwort zurücksetzen bei neuem Tag

KENW: NOP   0; 
      CALL "FB_SIEM_PI" , "DB_INST_FB4_DB374" (// Kennwort zurücksetzen
           Req                      := "DB_INST_FB4_DB374".Req,
           PIService                := "DB_SIEM_PI".LOGOUT,
           Unit                     := 1,
           Error                    := "DB_INST_FB4_DB374".Error,
           Done                     := "DB_INST_FB4_DB374".Done,
           State                    := "DB_INST_FB4_DB374".State);


      O     "DB_INST_FB4_DB374".Error; // wenn Fehler oder wenn
      O     "DB_INST_FB4_DB374".Done; // wenn Request bearbeitet wurde
      R     "DB_INST_FB4_DB374".Req; 

      U     "DB_INST_FB4_DB374".Done; // wenn Request bearbeitet wurde
      S     "DB_FEHLERMELDUNG".Meldung._702014_Kennwort_geloesc; // Meldung ausgeben

NETWORK
TITLE =Uhrzeit stellen

N2:   UN    "DB_UT_UHRZEIT".Uhr_stellen; 
      SPB   N6a; 

      L     "DB_UT_UHRZEIT".Stell_Jahr; 
      L     2000; 
      -I    ; 
      ITB   ; 
      T     DB234.DBB    8; 

      L     "DB_UT_UHRZEIT".Stell_Monat; 
      ITB   ; 
      T     DB234.DBB    9; 

      L     "DB_UT_UHRZEIT".Stell_Tag; 
      ITB   ; 
      T     DB234.DBB   10; 

      L     "DB_UT_UHRZEIT".Stell_Stunde; 
      ITB   ; 
      T     DB234.DBB   11; 

      L     "DB_UT_UHRZEIT".Stell_Minute; 
      ITB   ; 
      T     DB234.DBB   12; 

      L     "DB_UT_UHRZEIT".Stell_Sekunde; 
      ITB   ; 
      T     DB234.DBB   13; 

      CALL "SET_CLK" (
           PDT                      := "DB_UT_UHRZEIT".Stell_Zeit,
           RET_VAL                  := #temp_rueckgabewert);

      R     "DB_UT_UHRZEIT".Uhr_stellen; 

NETWORK
TITLE =Uhrzeitalarm stellen

N6a:  U     "DB_PLC_MD_DB20".UDHex._07_BIT0_MANNLOSE_SCHICH; 
      SPBN  STEN; 

//-- bei Warmlauffkt. ausgeschaltet, Uhrzeitalarm deaktivieren
      U     "DB_ANWENDER_SOFTKEY".Warmlauf._Aktiv; 
      FN    "M_Warm_Fkt_FN_aktiv"; 
      SPB   CANC; 

//-- bei Warmlauffkt. eingeschaltet, Uhrzeit stellen Alarm aktivieren
      U     "DB_ANWENDER_SOFTKEY".Warmlauf._Aktiv; 
      FP    "M_Warm_Fkt__FP_aktiv"; 
      SPB   ACTI; 

      SPA   N3; 

CANC: CALL "CAN_TINT" (
           OB_NR                    := 10,
           RET_VAL                  := #temp_rueckgabewert);

      SPA   N3; 

ACTI: SET   ; 
      =     "DB_UT_UHRZEIT".Start_stellen; 

//-- Warmlaufzeit stellen
N3:   UN    "DB_UT_UHRZEIT".Start_stellen; 
      SPB   N6; 

// to do Stellzeit heute schon vorbei Datum erhoehen

// Datum
      L     "DB_UT_UHRZEIT".Stell_Jahr; 
      L     2000; 
      -I    ; 
      ITB   ; 
      T     DB234.DBB   16; 

      L     "DB_UT_UHRZEIT".Stell_Monat; 
      ITB   ; 
      T     DB234.DBB   17; 

      L     "DB_UT_UHRZEIT".Stell_Tag; 
      ITB   ; 
      T     DB234.DBB   18; 

// Stellzeit
      L     "DB_UT_UHRZEIT".Stell_Stunde; 
      ITB   ; 
      T     DB234.DBB   19; 

      L     "DB_UT_UHRZEIT".Stell_Minute; 
      ITB   ; 
      T     DB234.DBB   20; 

      L     "DB_UT_UHRZEIT".Stell_Sekunde; 
      ITB   ; 
      T     DB234.DBB   21; 

// Anzeige
      L     "DB_UT_UHRZEIT".Stell_Jahr; 
      T     "DB_UT_UHRZEIT".Warmlauf_Jahr; 

      CALL "SET_TINT" (
           OB_NR                    := 10,
           SDT                      := "DB_UT_UHRZEIT".Start_Warmlauf_Prog,
           PERIOD                   := W#16#1001,
           RET_VAL                  := #temp_rueckgabewert);

      CALL "ACT_TINT" (
           OB_NR                    := 10,
           RET_VAL                  := #temp_rueckgabewert);

STEN: R     "DB_UT_UHRZEIT".Start_stellen; 

NETWORK
TITLE =Warmlauf-Programm

N6:   U     "DB_ANWENDER_SOFTKEY".Warmlauf._Aktiv; 
      UN    "DB_SIEM_KANAL_1".E_ProgRunn; // Programm läuft
      U(    ; 
      U(    ; 
      U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.automatic; 
      )     ; 
      O(    ; 
      U     "M_Automatik_Betrieb"; //"DB_SIEM_BAG".E_AUTO
      UN    "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      )     ; 
      )     ; 
      SPBN  N7; 

      CALL "FB_SIEM_PI" , "DB_INST_FB4_ll" (
           Req                      := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Request_PI_SERVICE,//"STRINGPW".RequestPW
           PIService                := "DB_SIEM_PI".SELECT,
           Unit                     := 1,
           Addr1                    := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Pfad,//"STRINGPW".PfadPW
           Addr2                    := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.File,//"STRINGPW".FilePW
           Error                    := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Error,//"STRINGPW".ErrorPW
           Done                     := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Done,//"STRINGPW".DonePW
           State                    := "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.State);//"STRINGPW".StatePW

      U(    ; 
      U     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Error; 
      O     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Done; 
      U     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Request_PI_SERVICE; 
      )     ; 
      R     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Request_PI_SERVICE; 

      SET   ; 
      U     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Done; 
      R     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Request_PI_SERVICE; 

      U     "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Done; 
      FP    "M_FP_NCStart_Warmlpr"; //"M_FP_NCStart_RS4_PW"
      S     "M_Imp_NCStart"; //"M_PWMakro_NCStart"


      U     "M_Imp_NCStart"; //"M_PWMakro_NCStart"
      UN    "DB_SIEM_KANAL_1".E_ProgRunn; // Programm läuft
      U(    ; 
      U(    ; 
      U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.automatic; 
      )     ; 
      O(    ; 
      U     "M_Automatik_Betrieb"; //"DB_SIEM_BAG".E_AUTO        //sth 02.10.03
      UN    "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      )     ; 
      )     ; 
      UN    "DB_ANWENDER_SOFTKEY".Warmlaufprogramm_starten.Request_PI_SERVICE; 
      SPBN  ncst; 

      UN    "M_NC_Start_Warmlpr"; //"M_NC_Start_PW_RS4"
      =     "M_NC_Start_Warmlpr"; //"M_NC_Start_PW_RS4"         // NC-Start

      U     "M_Imp_NCStart"; 
      UN    "M_NC_Start_Warmlpr"; 
      R     "M_Imp_NCStart"; 

ncst: NOP   0; 


      U     "DB_ANWENDER_SOFTKEY".Warmlauf._Aktiv; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      =     "DB_FEHLERMELDUNG".MELDUNG2._701261_Warml_angewaehlt; 

NETWORK
TITLE =Feierabendschaltung
//Feierabendschaltung in Automatik-Betrieb:
//nach M30 + 5 min und keine Bewegung  --> Not-AUS 
N7:   UN    "M_Verfahrbefehl_steht_an"; 
      U(    ; 
      U(    ; 
      U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.automatic; 
      )     ; 
      O(    ; 
      U     "M_Automatik_Betrieb"; //"DB_SIEM_BAG".E_AUTO        //sth 02.10.03
      UN    "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      )     ; 
      )     ; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      FP    "M_pos_Flanke_M30"; 
      =     "M_M30_Kanal1"; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT1_FEIERABENDABEND; 
      U     "DB_ANWENDER_SOFTKEY".Feierabendschaltung; 
      SPBN  eend; 

//-- auskodieren ob Bewegung in Geo-Achsen
      U     "DB_SIEM_KANAL_1".E_Geo[1].TCPlus; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].TCMinus; 
      O     "DB_SIEM_KANAL_1".E_Geo[2].TCPlus; 
      O     "DB_SIEM_KANAL_1".E_Geo[2].TCMinus; 
      O     "DB_SIEM_KANAL_1".E_Geo[3].TCPlus; 
      O     "DB_SIEM_KANAL_1".E_Geo[3].TCMinus; 
      O     "DB_FEHLERMELDUNG".Meldung._702146_WZW_aktiv; 
      =     "M_Verfahrbefehl_steht_an"; 

// -------------- Schritt 0 -------------------------

      L     "MB_SKZ_Feierabend"; 
      L     0; 
      ==I   ; 
      SPBN  sc01; 

//----------------- Aktion --------------------------

//-- lösche Zähler ab
      L     0; 
      T     "MW_Zeit_Feierabend"; 

//----------------- Ereignis ------------------------

      UN    "M_Verfahrbefehl_steht_an"; 
      U(    ; 
      U(    ; 
      U     "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.automatic; 
      )     ; 
      O(    ; 
      U     "M_Automatik_Betrieb"; //"DB_SIEM_BAG".E_AUTO        //sth 02.10.03
      UN    "DB_CMM_PLC".CMM_OUT.cmm_mmc_activ; 
      )     ; 
      )     ; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      U     "M_MA_Maschine_Ein"; 
      SPBN  e0en; 

      L     1; 
      T     "MB_SKZ_Feierabend"; 

e0en: NOP   0; 


// ------------------- Schritt 1 -----------------------------

sc01: L     "MB_SKZ_Feierabend"; 
      L     1; 
      ==I   ; 
      SPBN  ENDE; 

// ------------------- Aktion -------------------------------- 

// erhöhe Zähler im 2 Sekunden Takt
      U     "M_Takt_2s"; 
      SPBN  e11; 

      L     "MW_Zeit_Feierabend"; 
      L     1; 
      +I    ; 
      T     "MW_Zeit_Feierabend"; 

// ------------------ Ereignis ------------------------------

e11:  L     "MW_Zeit_Feierabend"; 
      L     150; 
      >I    ; 
      SPB   e12; 

      U     "M_Verfahrbefehl_steht_an"; 
// ON    "BAG".E_AUTO                //sth 02.10.03
      ON    "DB_SIEM_KANAL_1".E_ChanReset; 
      SPB   e13; 
      SPA   eend; 

e12:  SET   ; 
      S     "DB_FEHLERMELDUNG".NotAus._700015_Feierabend; 

      R     "O_AL_NEG_POWERSAVE_STBY"; 


e13:  L     0; 
      T     "MB_SKZ_Feierabend"; 

eend: NOP   0; 

NETWORK
TITLE =ENDE

ENDE: NOP   0; 



END_FUNCTION

