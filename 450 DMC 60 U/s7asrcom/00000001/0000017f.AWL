DATA_BLOCK "DB_SAFE_ALLG1"
TITLE =
//$Revision: 1.1 $
//$Date: 2006/10/17 10:30:25CEST $
//$Author: riedlh $
//
//
VERSION : 0.1


  STRUCT 	
   SPL_Startspere : BOOL ;	
   SPL_Start_StartFB : BOOL ;	
   SPL_Clear_StartFB : BOOL ;	
   SPL_NC_OK : BOOL ;	
   SPL_Ready_StartFB : BOOL ;	
   Schritt : INT ;	
   FB4_error : BOOL ;	
   FC9_serror : BOOL ;	
   FC9_active : BOOL ;	
   FC9_error : BOOL ;	
   NCK_error : BOOL ;	
   ZD_Z_disable : BOOL ;	//Zwangsdynamisierung Z disable für IBS
   SPL_FP_SPI : BOOL ;	//Hilfsmerker SPL Spindel n<nx
   res4_7 : BOOL ;	
   HAX_BT_laeuft : BOOL ;	//Hauptachsen Bremsentest laeuft
   WAX_BT_laeuft : BOOL ;	//Magazinachsen Bremsentest laeuft
   HAX_Kein_Stop : BOOL ;	//Kein Stop Hauptachsen
   WAX_Kein_Stop : BOOL ;	//Kein Stop Magazinachsen
   Spi_Kein_Stop : BOOL ;	//Kein Stop Spindel
   Leistung_steht_an : BOOL ;	//Leistung an Achsen
   res5_6 : BOOL ;	
   FN_SafetyTest_Reissleine : BOOL ;	//Safety Teste Reissleine führt zu Stop A
   IM_Taste_Dach_entr : BOOL ;	
   Kette_Dach_entr : BOOL ;	
   Anf_Dach_entriegeln : BOOL ;	
   FP_Dach_entriegeln : BOOL ;	
   IM_Dach_entriegeln : BOOL ;	
   FP_Dach_verriegelt : BOOL ;	
   PS_ZD_disable : BOOL ;	//Palettenspeicher Zwangsdynamisierung disable für IBS
   PS_ZD_Tuere_zuhalten : BOOL ;	//Tuere zuhalten wenn keine Freigabe zum Zwangsdynamisieren
   PS_FP_Bremse_defekt : BOOL ;	
   PS_WIZ_Bremse_HUBAX_quit : BOOL ;	//Palettenspeicher Bremse Hub-Achse quittieren Sofftkey einblenden
   PS_NOT_AUS_Bremse_HUBAX : BOOL ;	//Notaus wenn Bremse defekt und Hub-Achse abgesenkt wurde
   PS_AX_BT_laeuft : BOOL ;	//Palettenspeicherachsen Bremsentest laeuft
   res7 : BYTE ;	
   Wiz_Bremse_Z_rep : BOOL ;	//Bremse in Z ist repariert
   Wiz_Bremse_ZW_rep : BOOL ;	//Bremse in Z ist repariert
   Wiz_Bremse_Z_NA_Quitt : BOOL ;	//Quittierung vom Sevicemann für den NOT-AUS 
   Wiz_Bremse_ZW_NA_Quit : BOOL ;	//Quittierung vom Sevicemann für den NOT-AUS 
   PS_WIZ_Bremse_HUB_rep : BOOL ;	//Palettenspeicher Bremse Hub-Achse ist repariert
   PS_WIZ_Bremse_HUB_Quitt : BOOL ;	//Palettenspeicher Bremse Hub-Achse quittiert durch Sofftkey
   Wiz_Tuere_zuhalten : BOOL ;	//Tuere zuhalten wenn keine Freigabe zum Zwangsdynamisieren
   Test_Abnahme_Bremse : BOOL ;	
   Wiz_Bremse_Z_quit : BOOL ;	//Bremsenreparatur Z 
   Wiz_Bremse_ZW_quit : BOOL ;	//Bremsenreparatur ZW 
   NOT_AUS_Bremse_Z : BOOL ;	//Notaus wenn Bremse defekt und Z-Achse abgesenkt wurde
   NOT_AUS_Bremse_ZW : BOOL ;	//Notaus wenn Bremse defekt und ZW-Achse abgesenkt wurde
   FP_NA_Bremse_Z : BOOL ;	
   FP_NA_Quit_Bremse_NA_Z : BOOL ;	
   FP_NA_Quit_Bremse_NA_ZW : BOOL ;	
   FP_IPLC_BLK_VERRIEGELN : BOOL ;	
   Err_RueckFuer_Kab : BOOL ;	//Rückführkreis Kabine Fehler -> Kein Kabine Verriegeln möglich
   Err_RueFuer_NAT : BOOL ;	//Rückführkreis NOT-AUS Fehler -> Kein Einschalten Verriegeln möglich
   res10_2 : BOOL ;	
   FP_Spanner_Freigabe : BOOL ;	
   FP_ST_geschlossen : BOOL ;	
   FP_Dach_geschlossen : BOOL ;	
   FP_Zustimmtaste : BOOL ;	
   FP_BLK_Verriegeln : BOOL ;	
   Meld_Tueren_oeffnen : BOOL ;	//Meldung Türen öffnen --> Verriegeln verhindern
   Anf_Tuer_Kontrolle_Zeit : BOOL ;	//Zeit für Tuerkontrolle abgelaufen
   HM_Tuer1_offen : BOOL ;	
   HM_Tuer2_offen : BOOL ;	
   HM_Dach_offen : BOOL ;	
   FP_Meld_Tuer_Oeffnen : BOOL ;	//Flankenmerker
   Anf_Tuer_Kontrolle : BOOL ;	//Meldung Türen dynamisieren
   Minuten_impuls : BOOL ;	
   res : ARRAY  [3 .. 8 ] OF BYTE ;	
   BA34_Time_Meld : INT  := 60;	//Zeitwert in BA34 bis Warnung kommt
   BA34_Time_Hupe : INT  := 60;	//Zeitwert in BA34 bis Hupe kommt
   BA34_Time_End : INT  := 60;	//Zeitwert in BA34 bis Einlesesperre
   B44_Time_Res : INT  := 60;	//Reserve
   BA4_Zeitwert : INT ;	//Zeitwert in BA 4
   Ba4_Meldung : BOOL ;	//Meldung in BA 4
   BA4_Hupe : BOOL ;	//Hupe in BA 4
   BA4_Stop_Satzgrenze : BOOL ;	//Stop an Satzgrenze in BA 4
   Ba34_Zeit_Abwahl : BOOL ;	//Abwahl der Zeitüberwachung in BA 4
   Ba4_FP_ZST : BOOL ;	//Zustimmtaste Flanke in BA 4
   Ba3_FP_ZST : BOOL ;	//Zustimmtaste Flanke in BA 3
   Ba2_FP_ZST : BOOL ;	//Zustimmtaste Flanke in BA 2
   Ba4res7 : BOOL ;	
   FP_Zustimmtaste1 : BOOL ;	
   IM_Zustimmtaste : BOOL ;	
   BA3_Zeitwert : INT ;	//Zeitwert in BA 3
   Ba3_Meldung : BOOL ;	//Meldung in BA 3
   BA3_Hupe : BOOL ;	//Hupe in BA 3
   BA3_Stop_Satzgrenze : BOOL ;	//Stop an Satzgrenze in BA 3
   Ba3res3 : BOOL ;	
   Ba3res4 : BOOL ;	
   Ba3res5 : BOOL ;	
   Ba3res6 : BOOL ;	
   Ba3res7 : BOOL ;	
   Mag_entr_S1 : BOOL ;	
   Mag_entr_S2 : BOOL ;	
   Mag_entr_S3 : BOOL ;	
   Mag_entr_S4 : BOOL ;	
   Mag_entr_S5 : BOOL ;	
   Mag_entr_S6 : BOOL ;	
   Mag_entr_S7 : BOOL ;	
   Mag_entr_S8 : BOOL ;	
   FP_Mag_entriegeln : BOOL ;	
   IM_Mag_entriegeln : BOOL ;	
   FP_Mag_Sicher_Sos : BOOL ;	
   IM_Mag_Sicher_Pos : BOOL ;	
   FP_Mag_verrieget : BOOL ;	
   IM_Mag_verrieget : BOOL ;	
   IM_Mag_entrriegeln_ZD : BOOL ;	
   Mag_ZD_laeuft : BOOL ;	
   res1 : ARRAY  [1 .. 12 ] OF BYTE ;	
   Tuer_Kontrolle_Zeitvorg : INT  := 480;	//Vorgabe Türe dynamisieren alle 8 Stunden (in Min)
   Tuer_Kontrolle_Zeitwert : DINT ;	
   Tuer_Meld_Zeitwert : DINT ;	
   Tuer_Meld_Zeitvorg : INT  := 480;	//Vorgabe Türe Meldung wiederholen (in Min)
   M_IMP_Test_HW_laueft : BOOL ;	
   M_FP_Test_HW_laueft : BOOL ;	//Flankenmerker
   M_FP_Pnotz_0_setzen : BOOL ;	//Flankenmerker
   M_SAFE_SPI_SYNC_STOPC_IM : BOOL ;	
   M_SAFE_SPI_SYNC_STOPC_FM : BOOL ;	
   M_Start_Asup_SPL : BOOL ;	
   M_Bremse_Z_schliessen : BOOL ;	
   M_Bremse_HUB_schliessen : BOOL ;	
   M_PS_IMP_Test_HW_laueft : BOOL ;	
   M_PS_FN_Test_HW_laueft : BOOL ;	//Flankenmerker
  END_STRUCT ;	
BEGIN
   SPL_Startspere := FALSE; 
   SPL_Start_StartFB := FALSE; 
   SPL_Clear_StartFB := FALSE; 
   SPL_NC_OK := FALSE; 
   SPL_Ready_StartFB := FALSE; 
   Schritt := 0; 
   FB4_error := FALSE; 
   FC9_serror := FALSE; 
   FC9_active := FALSE; 
   FC9_error := FALSE; 
   NCK_error := FALSE; 
   ZD_Z_disable := FALSE; 
   SPL_FP_SPI := FALSE; 
   res4_7 := FALSE; 
   HAX_BT_laeuft := FALSE; 
   WAX_BT_laeuft := FALSE; 
   HAX_Kein_Stop := FALSE; 
   WAX_Kein_Stop := FALSE; 
   Spi_Kein_Stop := FALSE; 
   Leistung_steht_an := FALSE; 
   res5_6 := FALSE; 
   FN_SafetyTest_Reissleine := FALSE; 
   IM_Taste_Dach_entr := FALSE; 
   Kette_Dach_entr := FALSE; 
   Anf_Dach_entriegeln := FALSE; 
   FP_Dach_entriegeln := FALSE; 
   IM_Dach_entriegeln := FALSE; 
   FP_Dach_verriegelt := FALSE; 
   PS_ZD_disable := FALSE; 
   PS_ZD_Tuere_zuhalten := FALSE; 
   PS_FP_Bremse_defekt := FALSE; 
   PS_WIZ_Bremse_HUBAX_quit := FALSE; 
   PS_NOT_AUS_Bremse_HUBAX := FALSE; 
   PS_AX_BT_laeuft := FALSE; 
   res7 := B#16#0; 
   Wiz_Bremse_Z_rep := FALSE; 
   Wiz_Bremse_ZW_rep := FALSE; 
   Wiz_Bremse_Z_NA_Quitt := FALSE; 
   Wiz_Bremse_ZW_NA_Quit := FALSE; 
   PS_WIZ_Bremse_HUB_rep := FALSE; 
   PS_WIZ_Bremse_HUB_Quitt := FALSE; 
   Wiz_Tuere_zuhalten := FALSE; 
   Test_Abnahme_Bremse := FALSE; 
   Wiz_Bremse_Z_quit := FALSE; 
   Wiz_Bremse_ZW_quit := FALSE; 
   NOT_AUS_Bremse_Z := FALSE; 
   NOT_AUS_Bremse_ZW := FALSE; 
   FP_NA_Bremse_Z := FALSE; 
   FP_NA_Quit_Bremse_NA_Z := FALSE; 
   FP_NA_Quit_Bremse_NA_ZW := FALSE; 
   FP_IPLC_BLK_VERRIEGELN := FALSE; 
   Err_RueckFuer_Kab := FALSE; 
   Err_RueFuer_NAT := FALSE; 
   res10_2 := FALSE; 
   FP_Spanner_Freigabe := FALSE; 
   FP_ST_geschlossen := FALSE; 
   FP_Dach_geschlossen := FALSE; 
   FP_Zustimmtaste := FALSE; 
   FP_BLK_Verriegeln := FALSE; 
   Meld_Tueren_oeffnen := FALSE; 
   Anf_Tuer_Kontrolle_Zeit := FALSE; 
   HM_Tuer1_offen := FALSE; 
   HM_Tuer2_offen := FALSE; 
   HM_Dach_offen := FALSE; 
   FP_Meld_Tuer_Oeffnen := FALSE; 
   Anf_Tuer_Kontrolle := FALSE; 
   Minuten_impuls := FALSE; 
   res[3] := B#16#0; 
   res[4] := B#16#0; 
   res[5] := B#16#0; 
   res[6] := B#16#0; 
   res[7] := B#16#0; 
   res[8] := B#16#0; 
   BA34_Time_Meld := 60; 
   BA34_Time_Hupe := 60; 
   BA34_Time_End := 60; 
   B44_Time_Res := 60; 
   BA4_Zeitwert := 0; 
   Ba4_Meldung := FALSE; 
   BA4_Hupe := FALSE; 
   BA4_Stop_Satzgrenze := FALSE; 
   Ba34_Zeit_Abwahl := FALSE; 
   Ba4_FP_ZST := FALSE; 
   Ba3_FP_ZST := FALSE; 
   Ba2_FP_ZST := FALSE; 
   Ba4res7 := FALSE; 
   FP_Zustimmtaste1 := FALSE; 
   IM_Zustimmtaste := FALSE; 
   BA3_Zeitwert := 0; 
   Ba3_Meldung := FALSE; 
   BA3_Hupe := FALSE; 
   BA3_Stop_Satzgrenze := FALSE; 
   Ba3res3 := FALSE; 
   Ba3res4 := FALSE; 
   Ba3res5 := FALSE; 
   Ba3res6 := FALSE; 
   Ba3res7 := FALSE; 
   Mag_entr_S1 := FALSE; 
   Mag_entr_S2 := FALSE; 
   Mag_entr_S3 := FALSE; 
   Mag_entr_S4 := FALSE; 
   Mag_entr_S5 := FALSE; 
   Mag_entr_S6 := FALSE; 
   Mag_entr_S7 := FALSE; 
   Mag_entr_S8 := FALSE; 
   FP_Mag_entriegeln := FALSE; 
   IM_Mag_entriegeln := FALSE; 
   FP_Mag_Sicher_Sos := FALSE; 
   IM_Mag_Sicher_Pos := FALSE; 
   FP_Mag_verrieget := FALSE; 
   IM_Mag_verrieget := FALSE; 
   IM_Mag_entrriegeln_ZD := FALSE; 
   Mag_ZD_laeuft := FALSE; 
   res1[1] := B#16#0; 
   res1[2] := B#16#0; 
   res1[3] := B#16#0; 
   res1[4] := B#16#0; 
   res1[5] := B#16#0; 
   res1[6] := B#16#0; 
   res1[7] := B#16#0; 
   res1[8] := B#16#0; 
   res1[9] := B#16#0; 
   res1[10] := B#16#0; 
   res1[11] := B#16#0; 
   res1[12] := B#16#0; 
   Tuer_Kontrolle_Zeitvorg := 480; 
   Tuer_Kontrolle_Zeitwert := L#0; 
   Tuer_Meld_Zeitwert := L#0; 
   Tuer_Meld_Zeitvorg := 480; 
   M_IMP_Test_HW_laueft := FALSE; 
   M_FP_Test_HW_laueft := FALSE; 
   M_FP_Pnotz_0_setzen := FALSE; 
   M_SAFE_SPI_SYNC_STOPC_IM := FALSE; 
   M_SAFE_SPI_SYNC_STOPC_FM := FALSE; 
   M_Start_Asup_SPL := FALSE; 
   M_Bremse_Z_schliessen := FALSE; 
   M_Bremse_HUB_schliessen := FALSE; 
   M_PS_IMP_Test_HW_laueft := FALSE; 
   M_PS_FN_Test_HW_laueft := FALSE; 
END_DATA_BLOCK

