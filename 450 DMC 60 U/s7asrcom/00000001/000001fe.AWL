DATA_BLOCK "DB_HR"
TITLE =
//$Revision: 3.37 $
//$Date: 2009/03/06 06:51:20CET $
//$Author: riedlh $
VERSION : 0.1


  STRUCT 	
   SI : STRUCT 	//0000...0007: SafetyIntegrated
    HM_NI_T_ART_auf : BOOL ;	//HM NI Taste Arbeitsraumtür öffnen
    NI_T_ART_auf : BOOL ;	//NI Taste Arbeitsraumtür öffnen
    ZD_Ber_1_Sperre : BOOL ;	//ZwangsDyn Bereich 1 sperren
    HM_PI_ART_verriegelt : BOOL ;	//HM PI Arbeitsraumtür verriegelt
    Abnahmetest : BOOL ;	//nur für Abnahmetest setzen
    f13 : BOOL ;	
    f14 : BOOL ;	
    f15 : BOOL ;	
    ACHTUNG : BOOL ;	//kontrollieren
    f17 : BOOL ;	
    f18 : BOOL ;	
    f19 : BOOL ;	
    f110 : BOOL ;	
    f111 : BYTE ;	
    hm_PI_MSSTst_ART_auf_zu : BOOL ;	//HM MSST Taste Arbeitsraumtür auf/zu
    PI_MSSTst_ART_auf_zu : BOOL ;	//PI MSST-Taste Arbeitsraumtür auf/zu
    PW_nicht_aktiv : BOOL ;	//Palettenwechsel nicht aktiv
    hm_RPT_Taste_auf_zu : BOOL ;	//HM RPT Taste Tür auf/zu
    PI_RPT_Taste_auf_zu : BOOL ;	//PI RPT Taste Tür auf/zu
    hm_WMTst_entriegeln : BOOL ;	//HM WerkzeugMagazinTür entriegeln
    PI_WMTst_entriegeln : BOOL ;	//PI WerkzeugMagazinTür entriegeln
    WW_nicht_aktiv : BOOL ;	//Werkzeugwechsel nicht aktiv
    hm_PI_KA_Sammelfehler : BOOL ;	//HM PI Kühlaggregat Sammelfehler
    hm_NI_KA_MMS_ok : BOOL ;	//HM NI Kühlaggregat Motorschutzschalter ok
    m_HYD_hochgefahren : BOOL ;	//Hydraulik nach Maschine_EIN Druck_ok erreicht
    hm_NI_700143 : BOOL ;	//HM NI 700143 Hydraulik P<min
    Sammel_Warnung : BOOL ;	//Alle Warnungen von FC224
    Sammel_Meldungen : BOOL ;	//Alle Meldungen von FC224
    hm_PI_T_Spuelpistole : BOOL ;	//HM PI Taste Spülpistole
    m_Spuelpistole_ein : BOOL ;	//Merker Spülpistole ein
    PI_WMT_zu : BOOL ;	//PI Werkzeugmagazintür geschlossen
    PF_WMT_zu : BOOL ;	//PF Werkzeugmagazintür geschlossen
    Start_ART_oeffnen : BOOL ;	//Start Arbeitsraumtür öffnen
    IB_Teststopp_Gr1 : BOOL ;	//IB: Teststopp Gruppe 1 (Arbeitsraum) aulösen
    IB_Teststopp_Gr2 : BOOL ;	//IB: Teststopp Gruppe 2 (Magazinraum) aulösen
    IB_Teststopp_Gr3 : BOOL ;	//IB: Teststopp Gruppe 3 (Rüstplatz) aulösen
    frei : ARRAY  [8 .. 9 ] OF //frei
    BYTE ;	
   END_STRUCT ;	
   KSA : STRUCT 	//0008...0015: Kühl- und Schmierstoff-Anlage
    H7_letzte_Eingabe : INT  := 40;	//letzte H7-IKZ-Hochdruck-Wert-Eingabe
    IKZ_PROP_Vorgabe : INT ;	//PROP-Vorgabe: Aktueller H7-Wert / "0" mit M9
    OA_IKZ_PROP_VENTIL : INT ;	//M-Ausgang-Analog: PROP-Ventil IKZ-Hochdruck variabel
    Z00_IKZ_GRST : BOOL ;	//IKZ-Z00: Grundstellung (M7=aus ohne Fehler)
    Z01_IKZ_Anlauf : BOOL ;	//IKZ-Z01: M7=ein Warten auf Durchfluss
    Z02_IKZ_G1_Freigabe : BOOL ;	//IKZ-Z02: M7=ein Durchfluss OK ==> Freigabe Vorschub G1
    Z03_IKZ_aus : BOOL ;	//IKZ-Z03: M7=aus Warten auf "kein Durchfluss"
    Z04_IKZ_FM_Anlauf : BOOL ;	//IKZ-Z04: Fehler beim Anlauf "Durchfluss fehlt" (init: 5 s)
    Z05_IKZ_FM_G1 : BOOL ;	//IKZ-Z05: Fehler während G1-FG "Durchfluss fehlt" (init: 1 s)
    Z06_IKZ_FM_Waechter : BOOL ;	//IKZ-Z06: Fehler nach M7=aus "weiterhin Durchfluss" (init: 10 s)
    Z07_IKZ_FM_eLeitung : BOOL ;	//IKZ-Z07: Fehler DF-Wächter elektrisch nicht OK
    HM_PI_KSA_Knoll_AUTO : BOOL ;	//HM KSA-Anlage KNOLL Eingang I_AUTOMATIK
    frei10 : BOOL ;	
    frei11 : BOOL ;	
    frei12 : BOOL ;	
    frei13 : BOOL ;	
    frei14 : BOOL ;	
    frei15 : BOOL ;	
    ABST_Test_IKZ : BOOL ;	//ABST: "Gelbe Taste" für Simulation "Durchfluss vorhanden"
   END_STRUCT ;	
   SPF : STRUCT 	//0016...0017: Späneförderer
    hm_PI_Rechtslauf : BOOL ;	//HM PI Schalter SPF-Rechtslauf
    hm_PI_Automatik : BOOL ;	//HM PI Schalter SPF-Automatik
    hm_PI_Linkslauf : BOOL ;	//HM PI Schalter SPF-Linkslauf
    Schnecke_Wechsel_Betrieb : BOOL ;	//0=Schnecke 1   / 1=Schnecke 2
    HMI_SpF_ein : BOOL ;	//HMI Späneförderer eingeschaltet
   END_STRUCT ;	
   TempKomp : STRUCT 	//0018...0021: Temperatur-Kompensation
    SPI_PT100 : REAL ;	//Spindeltemperatur von PT100 als REAL
   END_STRUCT ;	
   DB_VAR : INT ;	//0022...0023: vorläufige Platzhaltervariable
   RPT_Folgen : STRUCT 	//0024...0027: RüstPlatzTür-Folgen
    res4 : BOOL ;	
    res5 : BOOL ;	
    res6 : BOOL ;	
    res7 : BOOL ;	
    res8 : BOOL ;	
    res9 : BOOL ;	
    res10 : BOOL ;	
    muss_frei_bleiben : BOOL ;	//Vorzeichen-Bit
    I1_ROB_spannen : BOOL ;	//I1: 00-01-02-03-00 Roboter: Spannen
    K1_ROB_entspannen : BOOL ;	//K1: 00-01-02-08-00 Roboter: Entspannen
    L1_ROB_PWFG_oRPAX : BOOL ;	//L1: 00-07-00 Roboter: PW-FG (mit SPH ohne RP-Achse)
    L2_ROB_PWFG_mRPAX : BOOL ;	//L2: 00-01-10-07-00 Roboter: PW-FG (mit SPH mit RP-Achse)
    M1_RPAX_positionieren : BOOL ;	//M1: 00-01-11-00 RP-Achse positionieren mit BDP-Tasten
    D2_Abkuppeln : BOOL ;	//D2: 00-05-00 Abkuppeln (Auftrag vom RS)
    E8_PWFG_oPROP_oRPAX : BOOL ;	//E8: 00-04-07-00 PW-FG SpH ohne PROP ohne Rüstplatz-Achse
    M2_ROB_RPAX_Pos : BOOL ;	//M2: 00-01-11-00 RP-Achse positionieren mit Roboter
    E3_PWFG_mSPH_mRPAX : BOOL ;	//E3: 00-04-10-07-00 PW-FG (ABST_SPH=1;ABST_RPAx=1)
    E4_PWFG_oSPH_mRPAX : BOOL ;	//E4: 00-04-10-07-00 PW-FG (ABST_SPH=0;ABST_RPAx=1)
    E5_PWFG_mSpH_oRPAX_Auto : BOOL ;	//E5: 00-04-01-02-03-07-00 PW-FG Spannen ohne RP-Achse (Auto)
    E6_PWFG_mSpH_mRPAX_Auto : BOOL ;	//E6: 00-04-01-02-03-10-07-00 PW-FG Spannen mit RP-Achse(Auto)
    F1_spannen_mRPT : BOOL ;	//F1: 00-04-01-02-03-00 Spannen mit RPT schließen
    G1_entspannen_mRPT : BOOL ;	//G1: 00-04-01-02-08-09-00 Entspannen mit RPT schließen+öffnen
    H1_ROB_RPT_schliessen : BOOL ;	//H1: 00-04-00 Roboter: RPT schließen
    H2_ROB_RPT_oeffnen : BOOL ;	//H2: 00-09-00 Roboter: RPT öffnen
    A1_spannen_oRPT : BOOL ;	//A1: 00-01-02-03-00 Spannen bei offener RPT
    B1_entspannen_oRPT : BOOL ;	//B1: 00-01-02-08-00 Entspannen bei offener RPT
    C1_RPT_schliessen : BOOL ;	//C1: 00-04-00 RPT schließen + verriegeln
    C2_RPT_oeffnen : BOOL ;	//C2: 00-09-00 RPT entriegeln + öffnen
    D1_Ankuppeln : BOOL ;	//D1: 00-01-02-00 Ankuppeln (Auftrag vom RS)
    E7_PWFG_NullpunktSpg : BOOL ;	//E7: 00-04-07-00 PW-FG bei Nullpunktspannungssystem
    E1_PWFG_mSPH_oRPAX : BOOL ;	//E1: 00-04-07-00 PW-FG (ABST_SPH=1;ABST_RPAx=0)
    E2_PWFG_oSPH_oRPAX : BOOL ;	//E2: 00-04-07-00 PW-FG (ABST_SPH=0;ABST_RPAx=0)
   END_STRUCT ;	
   RPT_Zustand : STRUCT 	//0028...0029: RüstPlatzTür-Zustände
    Z08_Entspannen : BOOL ;	//Z08: Entspannen
    Z09_RPT_oeffnen : BOOL ;	//Z09: RPT öffnen
    Z10_RPAX_0_Grad : BOOL ;	//Z10: RP-Achse auf 0-Grad positionieren für PW
    Z11_RPAX_positionieren : BOOL ;	//Z11: RP-Achse positionieren
    Z12 : BOOL ;	
    Z13 : BOOL ;	
    Z14 : BOOL ;	
    Z15_Abbruch : BOOL ;	//Z15: Abbruch
    Z00_Grundstellung : BOOL ;	//Z00: Grundstellung
    Z01_PalKlemmung_ein : BOOL ;	//Z01: Paletten-Klemmung einschalten
    Z02_Ankuppeln : BOOL ;	//Z02: Ankuppeln
    Z03_Spannen : BOOL ;	//Z03: Spannen
    Z04_RPT_schliessen : BOOL ;	//Z04: RPT schließen
    Z05_Abkuppeln : BOOL ;	//Z05: Abkuppeln
    Z06_PalKlemmung_aus : BOOL ;	//Z06: Paletten-Klemmung ausschalten
    Z07_PW_FG_aktivieren : BOOL ;	//Z07: PW-Freigabe aktivieren
   END_STRUCT ;	
   RPT_fertig : STRUCT 	//0030...0031: RüstPlatzTür fertig
    Z08_Entspannen : BOOL ;	//Z08-fertig: Entspannen
    Z09_RPT_oeffnen : BOOL ;	//Z09-fertig: RPT öffnen
    Z10_RPAX_0_Grad : BOOL ;	//Z10-fertig: RP-Achse auf 0-Grad positionieren für PW
    Z11_RPAX_positionieren : BOOL ;	//Z11-fertig: RP-Achse positionieren
    Z12 : BOOL ;	//Z12-fertig:
    Z13 : BOOL ;	//Z13-fertig:
    Z14 : BOOL ;	//Z14-fertig:
    Z15_Abbruch : BOOL ;	//Z15-fertig: Abbruch
    Z00_Grundstellung : BOOL ;	//Z00-fertig: Grundstellung
    Z01_PalKlemmung_ein : BOOL ;	//Z01-fertig: Paletten-Klemmung einschalten
    Z02_Ankuppeln : BOOL ;	//Z02-fertig: Ankuppeln
    Z03_Spannen : BOOL ;	//Z03-fertig: Spannen
    Z04_RPT_schliessen : BOOL ;	//Z04-fertig: RPT schließen
    Z05_Abkuppeln : BOOL ;	//Z05-fertig: Abkuppeln
    Z06_PalKlemmung_aus : BOOL ;	//Z06-fertig: Paletten-Klemmung ausschalten
    Z07_PW_FG_aktivieren : BOOL ;	//Z07-fertig: PW-Freigabe aktivieren
   END_STRUCT ;	
   RP_Achse : STRUCT 	//0032...0039: Drehbarer Rüstplatz
    Bereich : INT ;	//INT: Bereich
    Position : INT ;	//INT: Position
    positionieren_auf_0Grad : BOOL ;	//[PLC>>>NC] Achse am RPL auf 0-Grad drehen
    positiv_verfahren : BOOL ;	//[PLC>>>NC] Achse am RPL in positive Richtung verfahren
    negativ_verfahren : BOOL ;	//[PLC>>>NC] Achse am RPL in negative Richtung verfahren
    positionieren : BOOL ;	//[PLC>>>NC] Achse am RPL positionieren
    Befehl_positiv_verfahren : BOOL ;	//Bef. RPL-Achse positiv verfahren
    Befehl_negativ_verfahren : BOOL ;	//Bef. RPL-Achse negativ verfahren
    Befehl_positionieren : BOOL ;	//Bef. RPL-Achse positionieren
    IM_Position_erreicht : BOOL ;	//Impuls Position erreicht
    FP_Position_erreicht : BOOL ;	//FP-Merker für Position erreicht
    Klemmung_spannen : BOOL ;	//Anf. RPL-Achse Klemmung klemmen
    Klemmung_loesen : BOOL ;	//Anf. RPL-Achse Klemmung lösen
    IM_RPL_Taste_positiv : BOOL ;	//Impuls Rüstplatz-Taste: Achse in positiver Richtung drehen
    res1 : BOOL ;	
    res11 : BOOL ;	
    res12 : BOOL ;	
    res13 : BOOL ;	
    Byte_res1 : BYTE ;	
    Byte_res2 : BYTE ;	
   END_STRUCT ;	
   frei1 : ARRAY  [40 .. 53 ] OF //0040...0053: frei
   BYTE ;	
   anSpannHydraulik : STRUCT 	//0054...0055: Anforderungen an Spannhydraulik
    frei_1 : BOOL ;	
    Anf_Ankuppeln_RP : BOOL ;	//Anforderung: Ankuppeln für Spannkreis 1 (Rüstplatz)
    frei_3 : BOOL ;	
    Anf_Abkuppeln_RP : BOOL ;	//Anforderung: Abkuppeln für Spannkreis 1 (Rüstplatz)
    Anf_Druck_0_RP : BOOL ;	//Anforderung: Druck 0 für Spannkreis 1 (Rüstplatz)
   END_STRUCT ;	
   RPL_Abblasen : STRUCT 	//0056...0061: Rüstplatz abblasen
    HM1_RPL_Abblasen_St1 : BOOL ;	//HM1 für Flanke Rüstplatz Abblasen Spannstelle 1
    HM2_RPL_Abblasen_St2 : BOOL ;	//HM2 für Flanke Rüstplatz Abblasen Spannstelle 2
    HM3_RPL_Abblasen_St3 : BOOL ;	//HM2 für Flanke Rüstplatz Abblasen Spannstelle 3
    HM4_RPL_Abblasen_St4 : BOOL ;	//HM2 für Flanke Rüstplatz Abblasen Spannstelle 4
    RPL_Ablasen_HAND_EIN : BOOL ;	
    RPLAbblasen_HAND_aus : BOOL ;	
    Zeitimpuls : INT  := 60;	//Zeit für Impuls Vorrichtung Rüstplatz abblasen [init: 60 s]
    RPL_Abblasen_res : ARRAY  [60 .. 61 ] OF BYTE ;	
   END_STRUCT ;	
   Frei_2 : STRUCT 	//0062...0065: frei
    frei : ARRAY  [62 .. 65 ] OF BYTE ;	
   END_STRUCT ;	
   RPT : STRUCT 	//0066...0079: RüstPlatzTür
    Status_Folge_alt : DINT ;	//STATUS: Folge letzter PLC-Zyklus Folgen
    Folgen_Abbruch_aktiviert : BOOL ;	//RPT-Folge-Abbruch wurde aktiviert
    Folgen_Abbruch : BOOL ;	//RPT-Folgen-Abbruch auslösen
    HM_PI_Z00_Grundstellung : BOOL ;	//HM PI Zustand 00: Grundstellung
    Letzte_RPT_FKT : BOOL ;	//letzte RPT-Funktion: 1=Schließen  0=Öffnen
    PWinGRSTundNICHTaktiv : BOOL ;	//PW in GRST und NC-PW-Ablauf nicht aktiv
    HM_NI_PWFG : BOOL ;	//HM NI PW-Freigabe
    NOTAUS_Schutzleiste : BOOL ;	//NOTAUS oder Schutzleiste wurde aktiviert
    FG_TuerZyl_oeffnen : BOOL ;	//Freigabe RPT-Tür-Zylinder öffnen
    FG_TuerZyl_schliessen : BOOL ;	//Freigabe RPT-Tür-Zylinder schließen
    Anf_RPAX_POSplus : BOOL ;	//Anforderung Rüstplatz-Achse (+)Fahren
    Anf_RPAX_POSminus : BOOL ;	//Anforderung Rüstplatz-Achse (-)Fahren
    RPAX_auf_Pos : BOOL ;	//Meldung auf Position bei (+/-)Fahren
    HM_PI_Taste_Spannen : BOOL ;	//HM PI Taste Vorrichtung Spannen
    f2 : BOOL ;	
    HM_PI_SAuto_spannen_1 : BOOL ;	//HM SemiAuto Spannen SpK2-St_1
    f3 : BOOL ;	
    HM_PI_SAuto_entspannen_1 : BOOL ;	//HM SemiAuto Entspannen SpK2-St_1
    f4 : BOOL ;	
    f5 : BOOL ;	
    HM_PI_PW_GRST : BOOL ;	//HM Flankenauswertung PW-Grundstellung
    letzte_PW_Stellung : BOOL ;	//Letzte PW-Stellung: 0=0-Grad / 1=180-Grad
    HMI_AutoStarten : BOOL ;	//HMI: "Automatisch-Starten" ist angewählt
    HMI_TuerAuf_PrgEnde : BOOL ;	//HMI: "Tür auf nach Programm-Ende" ist angewählt
    RP_PWFG_oRSP_aktiv : BOOL ;	//PW-Freigabe am Rüstplatz OHNE Rundspeicher ist aktiv
    HM_PI_RPL_FG : BOOL ;	//HM PI Auslöser Rüstplatz freigeben
    Zxx_alter_Zustand : WORD ;	//Speicher Zustand vom letzten PLC-Zyklus
    f7 : BYTE ;	
    f8 : BYTE ;	
    PI_Ausloeser_Spannen : BOOL ;	//PI Auslöser Spannen
    HM_PI_Ausloeser_Spannen : BOOL ;	//HM PI Auslöser Spannen
    PI_Ausloeser_Entspann : BOOL ;	//PI Auslöser Entspannen
    HM_PI_Ausloeser_Entspann : BOOL ;	//HM PI Auslöser Entspannen
    extSpannsystem_vorhanden : BOOL ;	//an RS: externes Spannsystem (NPSp oder SpHyd) vorhanden
    RS_RPL_FRG : BOOL ;	//RundSpeicher Rüstplatz Freigabe
    RPL_RS_Anf_ankuppeln : BOOL ;	//von RS: Rüstplatz Anforderung ankuppeln
    RPL_RS_RM_angekuppelt : BOOL ;	//an RS: Rüstplatz Rückmeldung angekuppelt
    RPL_RS_Anf_abkuppeln : BOOL ;	//von RS: Rüstplatz Anforderung abkuppeln
    RPL_RS_RM_abgekuppelt : BOOL ;	//an RS: Rüstplatz Rückmeldung abgekuppelt
    HM_PI_RS_Anf_ankuppeln : BOOL ;	//HM PI Rüstplatz: RS-Anforderung ankuppeln
    HM_PI_RS_Anf_abkuppeln : BOOL ;	//HM PI Rüstplatz: RS-Anforderung abkuppeln
    Anf_schliessen_PS : BOOL ;	//Anforderung Rüstplatztür am Palettenspeicher schliessen
    VSM_RS_Freigabe : BOOL ;	//VSM-intern Freigabe Palette am RPL-Rundspeicher
    f9 : BOOL ;	
    HM_PI_RPL : BOOL ;	//HM PI RPL in GRST nach Paletten-Ablauf
   END_STRUCT ;	
   HAWE_alt : STRUCT 	//0080...0141: alter HAWE-Bereich (nicht erweitert)
    an : STRUCT 	
     SK1_St1_P_Vorgabe : WORD ;	//SK1_RPL / St 1: Druck-Vorgabe [0.1 bar]
     SK1_St2_P_Vorgabe : WORD ;	//SK1_RPL / St 2: Druck-Vorgabe [0.1 bar]
     SK1_St3_P_Vorgabe : WORD ;	//SK1_RPL / St 3: Druck-Vorgabe [0.1 bar]
     SK1_St4_P_Vorgabe : WORD ;	//SK1_RPL / St 4: Druck-Vorgabe [0.1 bar]
     SK2_St1_P_Vorgabe : WORD ;	//SK2_MPL / St 1: Druck-Vorgabe [0.1 bar]
     SK2_St2_P_Vorgabe : WORD ;	//SK2_MPL / St 2: Druck-Vorgabe [0.1 bar]
     SK2_St3_P_Vorgabe : WORD ;	//SK2_MPL / St 3: Druck-Vorgabe [0.1 bar]
     SK2_St4_P_Vorgabe : WORD ;	//SK2_MPL / St 4: Druck-Vorgabe [0.1 bar]
     SK1_St1_Bef_entspannen : BOOL ;	//SK1_RPL / St 1: Befehl Entspannen
     SK1_St1_Bef_Druck_0 : BOOL ;	//SK1_RPL / St 1: Befehl Druck=0 anlegen
     SK1_St1_Bef_spannen : BOOL ;	//SK1_RPL / St 1: Befehl Spannen
     SK1_St1_Meldung_NOTAUS : BOOL ;	//SK1_RPL / St 1: Meldung NOTAUS
     SK1_St1_ABST_SPH : BOOL ;	//SK1_RPL / St 1: ABST SPH ist aktiv
     SK1_St1_res1 : BOOL ;	//SK1_RPL / St 1: res 1
     SK1_St1_res2 : BOOL ;	//SK1_RPL / St 1: res 2
     SK1_St1_res3 : BOOL ;	//SK1_RPL / St 1: res 3
     SK1_St2_Bef_entspannen : BOOL ;	//SK1_RPL / St 2: Befehl Entspannen
     SK1_St2_Bef_Druck_0 : BOOL ;	//SK1_RPL / St 2: Befehl Druck=0 anlegen
     SK1_St2_Bef_spannen : BOOL ;	//SK1_RPL / St 2: Befehl Spannen
     SK1_St2_Meldung_NOTAUS : BOOL ;	//SK1_RPL / St 2: Meldung NOTAUS
     SK1_St2_ABST_SPH : BOOL ;	//SK1_RPL / St 2: ABST SPH ist aktiv
     SK1_St2_res1 : BOOL ;	//SK1_RPL / St 2: res 1
     SK1_St2_res2 : BOOL ;	//SK1_RPL / St 2: res 2
     SK1_St2_res3 : BOOL ;	//SK1_RPL / St 2: res 3
     SK1_St3_Bef_entspannen : BOOL ;	//SK1_RPL / St 3: Befehl Entspannen
     SK1_St3_Bef_Druck_0 : BOOL ;	//SK1_RPL / St 3: Befehl Druck=0 anlegen
     SK1_St3_Bef_spannen : BOOL ;	//SK1_RPL / St 3: Befehl Spannen
     SK1_St3_Meldung_NOTAUS : BOOL ;	//SK1_RPL / St 3: Meldung NOTAUS
     SK1_St3_ABST_SPH : BOOL ;	//SK1_RPL / St 3: ABST SPH ist aktiv
     SK1_St3_res1 : BOOL ;	//SK1_RPL / St 3: res 1
     SK1_St3_res2 : BOOL ;	//SK1_RPL / St 3: res 2
     SK1_St3_res3 : BOOL ;	//SK1_RPL / St 3: res 3
     SK1_St4_Bef_entspannen : BOOL ;	//SK1_RPL / St 4: Befehl Entspannen
     SK1_St4_Bef_Druck_0 : BOOL ;	//SK1_RPL / St 4: Befehl Druck=0 anlegen
     SK1_St4_Bef_spannen : BOOL ;	//SK1_RPL / St 4: Befehl Spannen
     SK1_St4_Meldung_NOTAUS : BOOL ;	//SK1_RPL / St 4: Meldung NOTAUS
     SK1_St4_ABST_SPH : BOOL ;	//SK1_RPL / St 4: ABST SPH ist aktiv
     SK1_St4_res1 : BOOL ;	//SK1_RPL / St 4: res 1
     SK1_St4_res2 : BOOL ;	//SK1_RPL / St 4: res 2
     SK1_St4_res3 : BOOL ;	//SK1_RPL / St 4: res 3
     SK2_St1_Bef_entspannen : BOOL ;	//SK2_MPL / St 1: Befehl Entspannen
     SK2_St1_Bef_Druck_0 : BOOL ;	//SK2_MPL / St 1: Befehl Druck=0 anlegen
     SK2_St1_Bef_spannen : BOOL ;	//SK2_MPL / St 1: Befehl Spannen
     SK2_St1_Meldung_NOTAUS : BOOL ;	//SK2_MPL / St 1: Meldung NOTAUS
     SK2_St1_ABST_SPH : BOOL ;	//SK2_MPL / St 1: ABST SPH ist aktiv
     SK2_St1_res1 : BOOL ;	//SK2_MPL / St 1: res 1
     SK2_St1_res2 : BOOL ;	//SK2_MPL / St 1: res 2
     SK2_St1_res3 : BOOL ;	//SK2_MPL / St 1: res 3
     SK2_St2_Bef_entspannen : BOOL ;	//SK2_MPL / St 2: Befehl Entspannen
     SK2_St2_Bef_Druck_0 : BOOL ;	//SK2_MPL / St 2: Befehl Druck=0 anlegen
     SK2_St2_Bef_spannen : BOOL ;	//SK2_MPL / St 2: Befehl Spannen
     SK2_St2_Meldung_NOTAUS : BOOL ;	//SK2_MPL / St 2: Meldung NOTAUS
     SK2_St2_ABST_SPH : BOOL ;	//SK2_MPL / St 2: ABST SPH ist aktiv
     SK2_St2_res1 : BOOL ;	//SK2_MPL / St 2: res 1
     SK2_St2_res2 : BOOL ;	//SK2_MPL / St 2: res 2
     SK2_St2_res3 : BOOL ;	//SK2_MPL / St 2: res 3
     SK2_St3_Bef_entspannen : BOOL ;	//SK2_MPL / St 3: Befehl Entspannen
     SK2_St3_Bef_Druck_0 : BOOL ;	//SK2_MPL / St 3: Befehl Druck=0 anlegen
     SK2_St3_Bef_spannen : BOOL ;	//SK2_MPL / St 3: Befehl Spannen
     SK2_St3_Meldung_NOTAUS : BOOL ;	//SK2_MPL / St 3: Meldung NOTAUS
     SK2_St3_ABST_SPH : BOOL ;	//SK2_MPL / St 3: ABST SPH ist aktiv
     SK2_St3_res1 : BOOL ;	//SK2_MPL / St 3: res 1
     SK2_St3_res2 : BOOL ;	//SK2_MPL / St 3: res 2
     SK2_St3_res3 : BOOL ;	//SK2_MPL / St 3: res 3
     SK2_St4_Bef_entspannen : BOOL ;	//SK2_MPL / St 4: Befehl Entspannen
     SK2_St4_Bef_Druck_0 : BOOL ;	//SK2_MPL / St 4: Befehl Druck=0 anlegen
     SK2_St4_Bef_spannen : BOOL ;	//SK2_MPL / St 4: Befehl Spannen
     SK2_St4_Meldung_NOTAUS : BOOL ;	//SK2_MPL / St 4: Meldung NOTAUS
     SK2_St4_ABST_SPH : BOOL ;	//SK2_MPL / St 4: ABST SPH ist aktiv
     SK2_St4_res1 : BOOL ;	//SK2_MPL / St 4: res 1
     SK2_St4_res2 : BOOL ;	//SK2_MPL / St 4: res 2
     SK2_St4_res3 : BOOL ;	//SK2_MPL / St 4: res 3
     SpFkt_Bef_ankuppeln : BOOL ;	//SpKr-Funktion: Befehl SK2_MPL (Rüstplatz) ankuppeln
     SpFkt_Bef_abkuppeln : BOOL ;	//SpKr-Funktion: Befehl SK2_MPL (Rüstplatz) abkuppeln
     SpFkt_res1 : BOOL ;	//SpKr-Funktion:
     SpFkt_res2 : BOOL ;	//SpKr-Funktion:
     SpFkt_res3 : BOOL ;	//SpKr-Funktion:
     SpFkt_res4 : BOOL ;	//SpKr-Funktion:
     SpFkt_res5 : BOOL ;	//SpKr-Funktion:
     SpFkt_res6 : BOOL ;	//SpKr-Funktion:
     DIAG_SK1_Bef_TEACH_IN : BOOL ;	//Diagnose: SK1_RPL Befehl TEACH IN
     DIAG_SK2_Bef_TEACH_IN : BOOL ;	//Diagnose: SK2_MPL Befehl TEACH IN
     frei_11 : BOOL ;	
     frei_12 : BOOL ;	
     frei_13 : BOOL ;	
     frei_14 : BOOL ;	
     frei_15 : BOOL ;	
     DIAG_Lebenszeichen : BOOL ;	//Diagnose: Lebenszeichen-Überwachung
     Delta_P1_Druck_erreicht : BYTE ;	//INT_165: Tol(+/-) "Druck erreicht" beim Spannen (init: 3bar)
     Delta_P2_Nachregeln : BYTE ;	//INT_166: Tol(-) "Nachregeln" (init: 10bar) / FD: Impuls-AUS-Zeit [10ms]
     Delta_P3_NOTAUS : BYTE ;	//INT_167: Tol(-) "Druckabfall NOTAUS" (init: 25bar) / FD: Impuls-EIN-Zeit [10ms]
     P1_Delta_Steuerung : BYTE ;	//INT_168: %-Vorgabe vom SOLL-Wert zum Steuern (initial: 90%)
     P2_Delta_Regelung : BYTE ;	//INT_169: %-Vorgabe vom SOLL-Wert für Übergang Regelung (initial: 80%)
     P3_Loesedruck : BYTE ;	//INT_184: Druckvorgabe für Vorrichtung öffnen (initial: 150bar)
     P4_Druck_RV_oeffnen : BYTE ;	//INT_185: Druckvorgabe RV-Ventil öffnen (init: 100bar) / FD: Anzahl der Impulse
     T1_Spannen_verzoegert : BYTE ;	//INT_186: Verzögerungszeit "SpannSt gespannt" in [100ms] (initial: 5)
     T2_Laufzeit_RV_oeffnen : BYTE ;	//INT_187: Laufzeit "RV-Ventil öffnen" [100ms] (init: 10) / FD: Zwischendruck
     reserve : BYTE ;	//frei
    END_STRUCT ;	
    von : STRUCT 	
     SK1_St1_P_Druck : INT ;	//SK1_RPL / St 1: aktueller Druck [0.1 bar]
     SK1_St2_P_Druck : INT ;	//SK1_RPL / St 2: aktueller Druck [0.1 bar]
     SK1_St3_P_Druck : INT ;	//SK1_RPL / St 3: aktueller Druck [0.1 bar]
     SK1_St4_P_Druck : INT ;	//SK1_RPL / St 4: aktueller Druck [0.1 bar]
     SK2_St1_P_Druck : INT ;	//SK2_MPL / St 1: aktueller Druck [0.1 bar]
     SK2_St2_P_Druck : INT ;	//SK2_MPL / St 2: aktueller Druck [0.1 bar]
     SK2_St3_P_Druck : INT ;	//SK2_MPL / St 3: aktueller Druck [0.1 bar]
     SK2_St4_P_Druck : INT ;	//SK2_MPL / St 4: aktueller Druck [0.1 bar]
     SK1_St1_Entspannen_aktiv : BOOL ;	//SK1_RPL / St 1: Entspannen läuft
     SK1_St1_Druck_ist_0 : BOOL ;	//SK1_RPL / St 1: Druck=0
     SK1_St1_gespannt : BOOL ;	//SK1_RPL / St 1: gespannt + Drucküberwachung aktiv
     SK1_St1_NOTAUS : BOOL ;	//SK1_RPL / St 1: meldet NOTAUS
     SK1_St1_Kabelbruch : BOOL ;	//SK1_RPL / St 1: Drucksensor meldet Kabelbruch
     SK1_St1_FM_Regelung : BOOL ;	//SK1_RPL / St 1: Druck beim Regeln nicht erreichbar
     SK1_St1_res2 : BOOL ;	//SK1_RPL / St 1:
     SK1_St1_res3 : BOOL ;	//SK1_RPL / St 1:
     SK1_St2_Entspannen_aktiv : BOOL ;	//SK1_RPL / St 2: Entspannen läuft
     SK1_St2_Druck_ist_0 : BOOL ;	//SK1_RPL / St 2: Druck=0
     SK1_St2_gespannt : BOOL ;	//SK1_RPL / St 2: gespannt + Drucküberwachung aktiv
     SK1_St2_NOTAUS : BOOL ;	//SK1_RPL / St 2: meldet NOTAUS
     SK1_St2_Kabelbruch : BOOL ;	//SK1_RPL / St 2: Drucksensor meldet Kabelbruch
     SK1_St2_FM_Regelung : BOOL ;	//SK1_RPL / St 2: Druck beim Regeln nicht erreichbar
     SK1_St2_res2 : BOOL ;	//SK1_RPL / St 2:
     SK1_St2_res3 : BOOL ;	//SK1_RPL / St 2:
     SK1_St3_Entspannen_aktiv : BOOL ;	//SK1_RPL / St 3: Entspannen läuft
     SK1_St3_Druck_ist_0 : BOOL ;	//SK1_RPL / St 3: Druck=0
     SK1_St3_gespannt : BOOL ;	//SK1_RPL / St 3: gespannt + Drucküberwachung aktiv
     SK1_St3_NOTAUS : BOOL ;	//SK1_RPL / St 3: meldet NOTAUS
     SK1_St3_Kabelbruch : BOOL ;	//SK1_RPL / St 3: Drucksensor meldet Kabelbruch
     SK1_St3_FM_Regelung : BOOL ;	//SK1_RPL / St 3: Druck beim Regeln nicht erreichbar
     SK1_St3_res2 : BOOL ;	//SK1_RPL / St 3:
     SK1_St3_res3 : BOOL ;	//SK1_RPL / St 3:
     SK1_St4_Entspannen_aktiv : BOOL ;	//SK1_RPL / St 4: Entspannen läuft
     SK1_St4_Druck_ist_0 : BOOL ;	//SK1_RPL / St 4: Druck=0
     SK1_St4_gespannt : BOOL ;	//SK1_RPL / St 4: gespannt + Drucküberwachung aktiv
     SK1_St4_NOTAUS : BOOL ;	//SK1_RPL / St 4: meldet NOTAUS
     SK1_St4_Kabelbruch : BOOL ;	//SK1_RPL / St 4: Drucksensor meldet Kabelbruch
     SK1_St4_FM_Regelung : BOOL ;	//SK1_RPL / St 4: Druck beim Regeln nicht erreichbar
     SK1_St4_res2 : BOOL ;	//SK1_RPL / St 4:
     SK1_St4_res3 : BOOL ;	//SK1_RPL / St 4:
     SK2_St1_Entspannen_aktiv : BOOL ;	//SK2_MPL / St 1: Entspannen läuft
     SK2_St1_Druck_ist_0 : BOOL ;	//SK2_MPL / St 1: Druck=0
     SK2_St1_gespannt : BOOL ;	//SK2_MPL / St 1: gespannt + Drucküberwachung aktiv
     SK2_St1_NOTAUS : BOOL ;	//SK2_MPL / St 1: meldet NOTAUS
     SK2_St1_Kabelbruch : BOOL ;	//SK2_MPL / St 1: Drucksensor meldet Kabelbruch
     SK2_St1_FM_Regelung : BOOL ;	//SK2_MPL / St 1: Druck beim Regeln nicht erreichbar
     SK2_St1_res2 : BOOL ;	//SK2_MPL / St 1:
     SK2_St1_res3 : BOOL ;	//SK2_MPL / St 1:
     SK2_St2_Entspannen_aktiv : BOOL ;	//SK2_MPL / St 2: Entspannen läuft
     SK2_St2_Druck_ist_0 : BOOL ;	//SK2_MPL / St 2: Druck=0
     SK2_St2_gespannt : BOOL ;	//SK2_MPL / St 2: gespannt + Drucküberwachung aktiv
     SK2_St2_NOTAUS : BOOL ;	//SK2_MPL / St 2: meldet NOTAUS
     SK2_St2_Kabelbruch : BOOL ;	//SK2_MPL / St 2: Drucksensor meldet Kabelbruch
     SK2_St2_FM_Regelung : BOOL ;	//SK2_MPL / St 2: Druck beim Regeln nicht erreichbar
     SK2_St2_res2 : BOOL ;	//SK2_MPL / St 2:
     SK2_St2_res3 : BOOL ;	//SK2_MPL / St 2:
     SK2_St3_Entspannen_aktiv : BOOL ;	//SK2_MPL / St 3: Entspannen läuft
     SK2_St3_Druck_ist_0 : BOOL ;	//SK2_MPL / St 3: Druck=0
     SK2_St3_gespannt : BOOL ;	//SK2_MPL / St 3: gespannt + Drucküberwachung aktiv
     SK2_St3_NOTAUS : BOOL ;	//SK2_MPL / St 3: meldet NOTAUS
     SK2_St3_Kabelbruch : BOOL ;	//SK2_MPL / St 3: Drucksensor meldet Kabelbruch
     SK2_St3_FM_Regelung : BOOL ;	//SK2_MPL / St 3: Druck beim Regeln nicht erreichbar
     SK2_St3_res2 : BOOL ;	//SK2_MPL / St 3:
     SK2_St3_res3 : BOOL ;	//SK2_MPL / St 3:
     SK2_St4_Entspannen_aktiv : BOOL ;	//SK2_MPL / St 4: Entspannen läuft
     SK2_St4_Druck_ist_0 : BOOL ;	//SK2_MPL / St 4: Druck=0
     SK2_St4_gespannt : BOOL ;	//SK2_MPL / St 4: gespannt + Drucküberwachung aktiv
     SK2_St4_NOTAUS : BOOL ;	//SK2_MPL / St 4: meldet NOTAUS
     SK2_St4_Kabelbruch : BOOL ;	//SK2_MPL / St 4: Drucksensor meldet Kabelbruch
     SK2_St4_FM_Regelung : BOOL ;	//SK2_MPL / St 4: Druck beim Regeln nicht erreichbar
     SK2_St4_res2 : BOOL ;	//SK2_MPL / St 4:
     SK2_St4_res3 : BOOL ;	//SK2_MPL / St 4:
     DIAG_Software_Stand : BYTE ;	//Diagnose: Anzeige HAWE-Software-Stand
     DIAG_SK1_TEACH_IN_laeuft : BOOL ;	//Diagnose: SK1_RPL TEACH IN läuft
     DIAG_SK1_TEACH_IN_nOK : BOOL ;	//Diagnose: SK1_RPL TEACH IN NICHT erfolgreich
     DIAG_SK1_PROP_Kabelbruch : BOOL ;	//Diagnose: SK1_RPL PROP-Ventil Kabelbruch
     DIAG_SK2_TEACH_IN_laeuft : BOOL ;	//Diagnose: SK2_MPL TEACH IN läuft
     DIAG_SK2_TEACH_IN_nOK : BOOL ;	//Diagnose: SK2_MPL TEACH IN NICHT erfolgreich
     DIAG_SK2_PROP_Kabelbruch : BOOL ;	//Diagnose: SK2_MPL PROP-Ventil Kabelbruch
     DIAG_res : BOOL ;	
     DIAG_Lebenszeichen : BOOL ;	//Diagnose: Lebenszeichen-Überwachung
    END_STRUCT ;	
   END_STRUCT ;	
   vonROB : STRUCT 	//0142...0143: Signale von Roboter
    Bef_St1_spannen : BOOL ;	//vonROB: Befehl St 1 spannen
    Bef_St1_entspannen : BOOL ;	//vonROB: Befehl St 1 entspannen
    Bef_St2_spannen : BOOL ;	//vonROB: Befehl St 2 spannen
    Bef_St2_entspannen : BOOL ;	//vonROB: Befehl St 2 entspannen
    Bef_RP_spuelen : BOOL ;	//vonROB: Befehl Rüstplatz spuelen
    Bef_RP_abblasen : BOOL ;	//vonROB: Befehl Rüstplatz abblasen
    Bef_RPT_oeffnen : BOOL ;	//vonROB: Befehl Rüstplatztür öffnen
    Bef_RPT_schliessen : BOOL ;	//vonROB: Befehl Rüstplatztür schliessen
    Bef_PW_FG : BOOL ;	//vonROB: Befehl PW-Freigabe (pos.Flanke)
    Bef_RPAX_positionieren : BOOL ;	//vonRPB: Befehl RP-Achse positionieren
    Bef_St3_spannen : BOOL ;	//vonROB: Befehl St 3 spannen
    Bef_St3_entspannen : BOOL ;	//vonROB: Befehl St 3 entspannen
    Bef_St4_spannen : BOOL ;	//vonROB: Befehl St 4 spannen
    Bef_St4_entspannen : BOOL ;	//vonROB: Befehl St 4 entspannen
    PI_spannen : BOOL ;	//HM Positive Flanke vonRob Befehl spannen
    PI_entspannen : BOOL ;	//HM Positive Flanke vonRpb Befehl entspannen
   END_STRUCT ;	
   anROB : STRUCT 	//0144...0145: Signale an Roboter
    res1 : BOOL ;	//anROB: Meldung
    res11 : BOOL ;	//anROB: Meldung
    res12 : BOOL ;	//anROB: Meldung
    res13 : BOOL ;	//anROB: Meldung
    res14 : BOOL ;	//anROB: Meldung
    res15 : BOOL ;	//anROB: Meldung
    res16 : BOOL ;	//anROB: Meldung
    res17 : BOOL ;	//anROB: Meldung
    res18 : BOOL ;	//anROB: Meldung
    res19 : BOOL ;	//anROB: Meldung
    res110 : BOOL ;	//anROB: Meldung
    res111 : BOOL ;	//anROB: Meldung
    res112 : BOOL ;	//anROB: Meldung
    res113 : BOOL ;	//anROB: Meldung
    res114 : BOOL ;	//anROB: Meldung
    res115 : BOOL ;	//anROB: Meldung
   END_STRUCT ;	
   PalV_temp : STRUCT 	//0146...0157: Temporäres Abbild für Datentausch
    KONF_St1_P_Vorgabe : BYTE ;	//Konf: St 1 Druck-Vorgabe 
    KONF_St1_Entspannzeit : BYTE ;	//Konf: St 1 Entspannzeit [s]
    KONF_St2_P_Vorgabe : BYTE ;	//Konf: St 2 Druck-Vorgabe 
    KONF_St2_Entspannzeit : BYTE ;	//Konf: St 2 Entspannzeit [s]
    KONF_St3_P_Vorgabe : BYTE ;	//Konf: St 3 Druck-Vorgabe 
    KONF_St3_Entspannzeit : BYTE ;	//Konf: St 3 Entspannzeit [s]
    KONF_St4_P_Vorgabe : BYTE ;	//Konf: St 3 Druck-Vorgabe 
    KONF_St4_Entspannzeit : BYTE ;	//Konf: St 3 Entspannzeit [s]
    KONF_St1_mitSPH : BOOL ;	//Konf: St 1 mit SpannHydraulik
    KONF_St1_CTRL_spannen : BOOL ;	//Konf: St 1 mit Kontrolle "Spannen"
    KONF_St1_CTRL_entspannen : BOOL ;	//Konf: St 1 mit Kontrolle "Entpannen"
    KONF_St1_Freigabe : BOOL ;	//Konf: St 1 Spannstelle Freigabe
    KONF_St1 : BOOL ;	//Konf: St 1 
    KONF_St2_mitSPH : BOOL ;	//Konf: St 2 mit SpannHydraulik
    KONF_St2_CTRL_spannen : BOOL ;	//Konf: St 2 mit Kontrolle "Spannen"
    KONF_St2_CTRL_entspannen : BOOL ;	//Konf: St 2 mit Kontrolle "Entpannen"
    KONF_St2_POSauswertung : BOOL ;	//Konf: St 2 Spannstelle Freigabe
    KONF_St2_PWFG : BOOL ;	//Konf: St 2 
    KONF_St3_mitSPH : BOOL ;	//Konf: St 3 mit SpannHydraulik
    KONF_St3_CTRL_spannen : BOOL ;	//Konf: St 3 mit Kontrolle "Spannen"
    KONF_St3_CTRL_entspannen : BOOL ;	//Konf: St 3 mit Kontrolle "Entpannen"
    KONF_St3_Freigabe : BOOL ;	//Konf: St 3 Spannstelle Freigabe
    KONF_St3 : BOOL ;	//Konf: St 3 
    KONF_St4_mitSPH : BOOL ;	//Konf: St 4 mit SpannHydraulik
    KONF_St4_CTRL_spannen : BOOL ;	//Konf: St 4 mit Kontrolle "Spannen"
    KONF_St4_CTRL_entspannen : BOOL ;	//Konf: St 4 mit Kontrolle "Entpannen"
    KONF_St4_Freigabe : BOOL ;	//Konf: St 4 Spannstelle Freigabe
    KONF_St4 : BOOL ;	//Konf: St 4 
    KONF_SpH_Federkraft : BOOL ;	//Konf: Vorrichtung: Schließen mit Federkraft - Lösen mit Druck
    KONF_res1 : BOOL ;	
    KONF_res2 : BOOL ;	
    KONF_res3 : BOOL ;	
    STAT_St1_gespannt : BOOL ;	//STATUS: St 1 ist gespannt iO.
    STAT_St1_entspannt : BOOL ;	//STATUS: St 1 ist entspannt iO.
    STAT_St2_gespannt : BOOL ;	//STATUS: St 2 ist gespannt iO.
    STAT_St2_entspannt : BOOL ;	//STATUS: St 2 ist entspannt iO.
    STAT_St3_gespannt : BOOL ;	//STATUS: St 3 ist gespannt iO.
    STAT_St3_entspannt : BOOL ;	//STATUS: St 3 ist entspannt iO.
    STAT_St4_gespannt : BOOL ;	//STATUS: St 4 ist gespannt iO.
    STAT_St4_entspannt : BOOL ;	//STATUS: St 4 ist entspannt iO.
   END_STRUCT ;	
   SpH_Istwerte : STRUCT 	//0158...0165: Spannhydraulik Istwerte
    SK1_Stelle_1 : BYTE ;	//SpannKreis 1 Spannstelle 1
    SK1_Stelle_2 : BYTE ;	//SpannKreis 1 Spannstelle 2
    SK1_Stelle_3 : BYTE ;	//SpannKreis 1 Spannstelle 3
    SK1_Stelle_4 : BYTE ;	//SpannKreis 1 Spannstelle 4
    SK2_Stelle_1 : BYTE ;	//SpannKreis 2 Spannstelle 1
    SK2_Stelle_2 : BYTE ;	//SpannKreis 2 Spannstelle 2
    SK2_Stelle_3 : BYTE ;	//SpannKreis 2 Spannstelle 3
    SK2_Stelle_4 : BYTE ;	//SpannKreis 2 Spannstelle 4
   END_STRUCT ;	
   frei_1 : STRUCT 	//0166...0193: frei
    frei : ARRAY  [166 .. 193 ] OF BYTE ;	
   END_STRUCT ;	
   SpH : STRUCT 	//0194...0217: Datenbereich SpannHydraulik
    SK1_TeachIn_aktivieren : BOOL ;	//SK1_RPL TEACH IN aktivieren
    SK2_TeachIn_aktivieren : BOOL ;	//SK2_MPL TEACH IN aktivieren
    kein_OVR_ist_0_St1 : BOOL ;	//kein OVR=0 aktivieren (Überwachung=AUS / Spannstelle 1 wurde geöffnet)
    kein_OVR_ist_0_St2 : BOOL ;	//kein OVR=0 aktivieren (Überwachung=AUS / Spannstelle 2 wurde geöffnet)
    kein_OVR_ist_0_St3 : BOOL ;	//kein OVR=0 aktivieren (Überwachung=AUS / Spannstelle 3 wurde geöffnet)
    kein_OVR_ist_0_St4 : BOOL ;	//kein OVR=0 aktivieren (Überwachung=AUS / Spannstelle 4 wurde geöffnet)
    HM_PI_T_Stelle_1 : BOOL ;	//HM PI Taste Spannstelle 1
    HM_PI_T_Stelle_2 : BOOL ;	//HM PI Taste Spannstelle 2
    HM_PI_T_Stelle_3 : BOOL ;	//HM PI Taste Spannstelle 3
    HM_PI_T_Stelle_4 : BOOL ;	//HM PI Taste Spannstelle 4
    P_SK2_St1_nachPW_fehlt : BOOL ;	//Druck HOCHGEFAHREN nach PW in Maschine Stelle 1 fehlt
    P_SK2_St2_nachPW_fehlt : BOOL ;	//Druck HOCHGEFAHREN nach PW in Maschine Stelle 2 fehlt
    P_SK2_St3_nachPW_fehlt : BOOL ;	//Druck HOCHGEFAHREN nach PW in Maschine Stelle 3 fehlt
    P_SK2_St4_nachPW_fehlt : BOOL ;	//Druck HOCHGEFAHREN nach PW in Maschine Stelle 4 fehlt
    H31_Bef_entspannen : BOOL ;	//Befehl Entspannen mit H31=-xx
    H32_Bef_entspannen : BOOL ;	//Befehl Entspannen mit H32=-xx
    H33_Bef_entspannen : BOOL ;	//Befehl Entspannen mit H33=-xx
    H34_Bef_entspannen : BOOL ;	//Befehl Entspannen mit H34=-xx
    HM_PI_Res_RPSt1_gespannt : BOOL ;	//HM PI RESET Rüstplatz Stelle 1 gespannt
    HM_PI_Res_RPSt2_gespannt : BOOL ;	//HM PI RESET Rüstplatz Stelle 2 gespannt
    HM_PI_Res_RPSt3_gespannt : BOOL ;	//HM PI RESET Rüstplatz Stelle 3 gespannt
    HM_PI_Res_RPSt4_gespannt : BOOL ;	//HM PI RESET Rüstplatz Stelle 4 gespannt
    HMI_SpH_Ruestplatz : BOOL ;	//HMI manuell SpannHydraulik Rüstplatz angewählt
    HMI_SpH_Arbeitsraum : BOOL ;	//HMI manuell SpannHydraulik Arbeitsraum angewählt
    HM_PI_RP_gespannt : BOOL ;	//HM PI alle aktiven Stellen am RP gespannt
    HM_PI_T_Spannen : BOOL ;	//HM PI Taste/Fußschalter Spannen
    HM_PI_RP_entspannt : BOOL ;	//HM PI alle aktiven Stellen am RP entspannt
    HM_PI_T_Entspannen : BOOL ;	//HM PI Taste/Fußschalter Entspannen
    VS_SP_SpH : BOOL ;	//Vorschub-Sperre SpannHydraulik
    PI_PW_DataChange : BOOL ;	//PI PW-Daten wechseln
    HM_PI_PWFG_ausloesen : BOOL ;	//HM PI PW-Freigabe auslösen
    HM_PI_Takt : BOOL ;	//HM PI Takt
    RP_Stelle_1_aktiviert : BOOL ;	//Rüstplatz SpannStelle 1 ist aktiviert
    RP_Stelle_2_aktiviert : BOOL ;	//Rüstplatz SpannStelle 2 ist aktiviert
    RP_Stelle_3_aktiviert : BOOL ;	//Rüstplatz SpannStelle 3 ist aktiviert
    RP_Stelle_4_aktiviert : BOOL ;	//Rüstplatz SpannStelle 4 ist aktiviert
    FM_Lebenszeichen : BOOL ;	//FM: Lebenszeichen-Überwachung
    HM_NI_HMI_Arbeitsraum : BOOL ;	//HM NI HMI-Bild SpannHydraulik Arbeitsraum
    SPH_Pumpe_ist_ein : BOOL ;	//SpannHydraulik Pumpe ist ein
    HMI_SpH_PW3 : BOOL ;	//HMI Manuelle SpannhHydraulik-Funktion mit PW3
    G01_vorzeitig_zulassen : BOOL ;	//Nach PW-Ablauf G01 vorzeitig zulassen
    HM_PI_T_ROB_Spannen : BOOL ;	//HM PI Roboter Spannen
    HM_PI_T_ROB_Entspannen : BOOL ;	//HM PI Roboter Entspannen
    RPL_St1_Taste_aktiviert : BOOL ;	//RPL-Spannstelle 1 ist mit RPL-BDP-Taste aktiviert
    RPL_St2_Taste_aktiviert : BOOL ;	//RPL-Spannstelle 2 ist mit RPL-BDP-Taste aktiviert
    RPL_St3_Taste_aktiviert : BOOL ;	//RPL-Spannstelle 3 ist mit RPL-BDP-Taste aktiviert
    RPL_St4_Taste_aktiviert : BOOL ;	//RPL-Spannstelle 4 ist mit RPL-BDP-Taste aktiviert
    HM_NI_Leerpalette : BOOL ;	//HM NI Status Leerpalette am Rüstplatz
    MA_St1_Psoll_Vorgabe : BYTE ;	//SOLL-Druck-Vorgabe für Maschine Stelle 1
    MA_St2_Psoll_Vorgabe : BYTE ;	//SOLL-Druck-Vorgabe für Maschine Stelle 2
    MA_St3_Psoll_Vorgabe : BYTE ;	//SOLL-Druck-Vorgabe für Maschine Stelle 3
    MA_St4_Psoll_Vorgabe : BYTE ;	//SOLL-Druck-Vorgabe für Maschine Stelle 4
    HMI_P_Vorgabe_SK2St1_alt : BYTE ;	//HMI Druck-Vorgabe SK2 (Maschine) St_1
    HMI_P_Vorgabe_SK2St2_alt : BYTE ;	//HMI Druck-Vorgabe SK2 (Maschine) St_2
    HMI_P_Vorgabe_SK2St3_alt : BYTE ;	//HMI Druck-Vorgabe SK2 (Maschine) St_3
    HMI_P_Vorgabe_SK2St4_alt : BYTE ;	//HMI Druck-Vorgabe SK2 (Maschine) St_4
    HMI : STRUCT 	
     Zeile_0_aktiviert : BOOL ;	//HMI Zeile 0 (Vertikal-SK1) aktiviert
     Zeile_1_aktiviert : BOOL ;	//HMI Zeile 1 (Vertikal-SK2) aktiviert
     Zeile_2_aktiviert : BOOL ;	//HMI Zeile 2 (Vertikal-SK3) aktiviert
     Zeile_3_aktiviert : BOOL ;	//HMI Zeile 3 (Vertikal-SK4) aktiviert
     Zeile_4_aktiviert : BOOL ;	//HMI Zeile 4 (Vertikal-SK5) aktiviert
     Zeile_5_aktiviert : BOOL ;	//HMI Zeile 5 (Vertikal-SK6) aktiviert
     Zeile_6_aktiviert : BOOL ;	//HMI Zeile 6 (Vertikal-SK7) aktiviert
     Zeile_7_aktiviert : BOOL ;	//HMI Zeile 7 (Vertikal-SK8) aktiviert
    END_STRUCT ;	
    PROFIBUS_IN_ADR : INT  := 430;	//Profibus Start-Adresse Eingänge von HAWE
    PROFIBUS_OUT_ADR : INT  := 430;	//Profibus Start-Adresse Ausgänge zu HAWE
    FM_MPL_PROP_Kabelbruch : BOOL ;	//FM: HAWE meldet Maschinenplatz PROP-Ventil Kabelbruch
    FM_RPL_PROP_Kabelbruch : BOOL ;	//FM: HAWE meldet Rüstplatz PROP-Ventil Kabelbruch
    RPL_Element_VorrNachCtrl : BOOL ;	//RPL mit Spann-Element Vorrichtung + Nachregelung
    RPL_NachCtrl_aktiv : BOOL ;	//RPL Vorrichtung Nachregeln ist aktiv
    RPL_NachCtrl_ein : BOOL ;	//RPL "Vorrichtung Nachregeln ein" an HAWE
    MPL_TYP_3 : BOOL ;	//MPL Vorrichtung von Typ 3
    frei_214_06 : BOOL ;	
    frei_214_07 : BOOL ;	
    HM_RPL_Status_LeerPal : BOOL ;	//HM PI Status "LeerPalette" am Rüstplatz löst PW-Freigabe aus
    M_PWFG_schon_aktiv : BOOL ;	//PW_Freigabe ist schon aktiv
    M_Aktor_PWFG_ausloesen : BOOL ;	//Aktor PW-Freigabe auslösen
    HM_PI_PWFG_aktiv : BOOL ;	//HM PI GW_Freigabe wurde aktiviert
    M_RPL_Status_LeerPal : BOOL ;	//Status "LeerPalette" am Rüstplatz löst PW-Freigabe aus
    frei_215_05 : BOOL ;	
    frei_215_06 : BOOL ;	
    frei_215_07 : BOOL ;	
    ZM_RPL_ST1_aktiviert : BOOL ;	//Zwischen-Merker SpH-Stelle 1 mit Taste aktiviert
    ZM_RPL_ST2_aktiviert : BOOL ;	//Zwischen-Merker SpH-Stelle 2 mit Taste aktiviert
    ZM_RPL_ST3_aktiviert : BOOL ;	//Zwischen-Merker SpH-Stelle 3 mit Taste aktiviert
    ZM_RPL_ST4_aktiviert : BOOL ;	//Zwischen-Merker SpH-Stelle 4 mit Taste aktiviert
    frei_216_04 : BOOL ;	
    frei_216_05 : BOOL ;	
    frei_216_06 : BOOL ;	
    frei_216_07 : BOOL ;	
    frei_217_00 : BOOL ;	
    frei_217_01 : BOOL ;	
    frei_217_02 : BOOL ;	
    frei_217_03 : BOOL ;	
    frei_217_04 : BOOL ;	
    frei_217_05 : BOOL ;	
    frei_217_06 : BOOL ;	
    frei_217_07 : BOOL ;	
   END_STRUCT ;	
   ABST : STRUCT 	//0218...0229: Ausbaustufen-Kennungen
    HL_Reihe : BOOL  := TRUE;	//ABST: DMC-HL-Reihe
    IKZ_Durchfluss : BOOL ;	//ABST: IKZ-Durchflusswächter vorhanden (ersetzt durch HEX25_0)
    SpannHydraulik : BOOL ;	//ABST: SpannHydraulik HAWE-Box
    Automatische_RPT : BOOL ;	//ABST: automatische RüstPlatzTür
    RP_mit_Achse : BOOL ;	//ABST: Rüstplatz mit Achse
    SP_bei_offener_RPT : BOOL ;	//ABST: SpannHydraulik bei offener RPT zulässig
    SP_MPL_Kuppeln : BOOL ;	//ABST: SpannHydraulik mit Kuppeln/Entkuppeln im Maschinenraum
    SP_nur_RPL : BOOL ;	//ABST: SpannHydraulik nur am Rüstplatz
    SP_ProfiBus_aus : BOOL ;	//ABST: HAWEbox-ProfiBus im "FC_CIO_IO_RANGIER" unterdrücken
    SP_ext_Nullpunktspannsys : BOOL ;	//ABST: SpannHydraulik externes Nullpunktspannsystem (SONDER-Abteilung)
    SP_ohne_KupplungKlemmung : BOOL ;	//ABST: SpannHydraulik OHNE_Kupplung_RPL/MPL OHNE Klemmung_RPL
    SP_SA_MTU : BOOL ;	//ABST: SpannHydraulik für SA-MTU
    SP_ohnePROP : BOOL ;	//ABST: SpannHydraulik ohne PROP-Ventil (alte SpH)
    SP_ohnePW_OFFEN_Tuer : BOOL ;	//ABST: SpannHydraulik für Maschinen OHNE PW (offene Tür zulässig)
    SP_ohnePW_ZU_Tuer : BOOL ;	//ABST: SpannHydraulik für Maschinen OHNE PW (offene Tür NICHT zulässig)
    SP_FD : BOOL ;	//ABST: SpannHydraulik für FD-Maschinen bei offener RP-Tuer
    DS_Software : BOOL ;	//ABST: DS-Software
    SP_FD_ohne_PROP : BOOL ;	//ABST: FD-Spannhydraulik OHNE PROP-Ventiltechnik (MTU-Friedrichshafen)
    ABST : ARRAY  [222 .. 229 ] OF BYTE ;	
   END_STRUCT ;	
   IKZ_Zeiten : STRUCT 	//0230...0239: Innere-Kühlmittel-Zufuhr-Zeiten
    Anlauf : BYTE  := B#16#5;	//Wartezeit auf Durchfluss (initial: 5s)
    Betrieb : BYTE  := B#16#A;	//Entprellzeit "Durchfluss ok" (initial: 10 * 100ms)
    Aus : BYTE  := B#16#14;	//Wartezeit für "kein Durchfluss" (initial: 20s)
    frei_11 : BYTE ;	
    maxEinbruch_G1 : DWORD ;	//max.IKZ-Einbruchzeit während G1
    frei_13 : BYTE ;	
    frei_14 : BYTE ;	
   END_STRUCT ;	
   CS_SW : STRUCT 	//0240...0249: CS/DS-Software-Bereich
    Anf_RPT_entriegeln : BOOL ;	//Anforderung Rüstplatztür entriegeln
    HM_PI_SpH_Aggregat_ein : BOOL ;	//HM PI SpH-Aggregat einschalten
    frei : ARRAY  [242 .. 249 ] OF BYTE ;	
   END_STRUCT ;	
   PBanHAWE_alt : STRUCT 	//0250...0285: ProfiBus an Hawe (alt)
    OB_SP_P_SOLL_ST_1_RPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_1_RPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_2_RPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_2_RPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_3_RPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_3_RPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_4_RPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_4_RPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_1_MPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_1_MPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_2_MPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_2_MPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_3_MPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_3_MPL_L : BYTE ;	
    OB_SP_P_SOLL_ST_4_MPL_H : BYTE ;	
    OB_SP_P_SOLL_ST_4_MPL_L : BYTE ;	
    OB_SP_STATE_ST_1_RPL : BYTE ;	
    OB_SP_STATE_ST_2_RPL : BYTE ;	
    OB_SP_STATE_ST_3_RPL : BYTE ;	
    OB_SP_STATE_ST_4_RPL : BYTE ;	
    OB_SP_STATE_ST_1_MPL : BYTE ;	
    OB_SP_STATE_ST_2_MPL : BYTE ;	
    OB_SP_STATE_ST_3_MPL : BYTE ;	
    OB_SP_STATE_ST_4_MPL : BYTE ;	
    OB_SP_FUNKTION_MPL_RPL : BYTE ;	
    OB_SP_DIAGNOSE_MPL_RPL : BYTE ;	
    OB_SP_P_TOL_DRUCH_ERREIC : BYTE ;	
    OB_SP_P_TOL_NACHREGELN : BYTE ;	
    OB_SP_P_TOL_NOTAUS : BYTE ;	
    OB_SP_DELTA_STEUERUNG : BYTE ;	
    OB_SP_DELTA_REGELUNG : BYTE ;	
    OB_SP_P_LOESEDRUCK : BYTE ;	
    OB_SP_P_DRUCK_RV_OEFFNEN : BYTE ;	
    OB_SP_P_T_VERZ_SPANNEN : BYTE ;	
    OB_SP_P_T_RV_OEFFNEN : BYTE ;	
    OB_reserve : BYTE ;	
   END_STRUCT ;	
   PBvonHAWE_alt : STRUCT 	//0286...0311: ProfiBus von Hawe (alt)
    IB_SP_P_IST_ST_1_RPL_H : BYTE ;	
    IB_SP_P_IST_ST_1_RPL_L : BYTE ;	
    IB_SP_P_IST_ST_2_RPL_H : BYTE ;	
    IB_SP_P_IST_ST_2_RPL_L : BYTE ;	
    IB_SP_P_IST_ST_3_RPL_H : BYTE ;	
    IB_SP_P_IST_ST_3_RPL_L : BYTE ;	
    IB_SP_P_IST_ST_4_RPL_H : BYTE ;	
    IB_SP_P_IST_ST_4_RPL_L : BYTE ;	
    IB_SP_P_IST_ST_1_MPL_H : BYTE ;	
    IB_SP_P_IST_ST_1_MPL_L : BYTE ;	
    IB_SP_P_IST_ST_2_MPL_H : BYTE ;	
    IB_SP_P_IST_ST_2_MPL_L : BYTE ;	
    IB_SP_P_IST_ST_3_MPL_H : BYTE ;	
    IB_SP_P_IST_ST_3_MPL_L : BYTE ;	
    IB_SP_P_IST_ST_4_MPL_H : BYTE ;	
    IB_SP_P_IST_ST_4_MPL_L : BYTE ;	
    IB_SP_STATE_ST_1_RPL : BYTE ;	
    IB_SP_STATE_ST_2_RPL : BYTE ;	
    IB_SP_STATE_ST_3_RPL : BYTE ;	
    IB_SP_STATE_ST_4_RPL : BYTE ;	
    IB_SP_STATE_ST_1_MPL : BYTE ;	
    IB_SP_STATE_ST_2_MPL : BYTE ;	
    IB_SP_STATE_ST_3_MPL : BYTE ;	
    IB_SP_STATE_ST_4_MPL : BYTE ;	
    IB_SP_DIAGNOSE_MPL_RPL : BYTE ;	
    IB_SP_FUNKTION_MPL_RPL : BYTE ;	
   END_STRUCT ;	
   Allgemein : STRUCT 	//0312...0349: Allgemeiner Bereich
    HM_PI_NPV_aktivieren : BOOL ;	//HM NullPunktVerschiebung aktivieren bei Antriebe ein
    OVR_100_Prozent : BYTE ;	//Vorschub-Schalter-Stellung ist auf 100%
    test : ARRAY  [314 .. 349 ] OF BYTE ;	
   END_STRUCT ;	
   RS : STRUCT 	//0350...0353: Rundspeicher
    Bef_Ankuppeln : BOOL ;	//Befehl von RS: Ankuppeln
    Bef_Abkuppeln : BOOL ;	//Befehl von RS: Abkuppeln
    frei_351 : BYTE ;	
    frei_352 : BYTE ;	
    frei_353 : BYTE ;	
   END_STRUCT ;	
   A_AX : STRUCT 	//0354...0359: A-Achse
    ABST_A_Achsen : BOOL ;	//ABST: A1/A2-Achsen
    A1_auf_RPL : BOOL ;	//A1-Achse auf Rüstplatz
    frei_354_2 : BOOL ;	
    Frei_354_3 : BOOL ;	
    RP_AX_FG_Drehen : BOOL ;	//RP-Achse Freigabe zum Drehen (keine A-Achse)
    B_AX_FG_Drehen : BOOL ;	//B-Achse Freigabe zum Drehen wegen A-Achse
    Z_AX_FG_ganzer_Bereich : BOOL ;	//Z-Achse Freigabe ganzer Fahrbereich
    Z_AX_imBereich_FG_B_AX : BOOL ;	//Z-Achse im Bereich "B-Achse zum Drehen freigegeben"
    frei_355_0 : BOOL ;	
    AX_1_mit_Luenette : BOOL ;	//A-Achse auf Palette 1 mit Luente 
    AX_1_mit_Pinole : BOOL ;	//A Achse auf Palette 1 mit Pinole
    AX_2_mit_Luenette : BOOL ;	//A-Achse auf Palette 2 mit Luente 
    AX_2_mit_Pinole : BOOL ;	//A Achse auf Palette 2 mit Pinole
    AX_1_FUTTER_PNEU : BOOL ;	//A Achse 1 hat Spannfutter pneumatisch
    AX_2_FUTTER_PNEU : BOOL ;	//A Achse 2 hat Spannfutter pneumatisch
    frei_350_7 : BOOL ;	
    EK_oeffnen_nach_PW : BOOL ;	//Vorrichtung oeffnen nach Palettenwechsel
    EK_spannen_mit_PWFREIGAB : BOOL ;	//Spannen mit Taste Palettenwechselfreigabe
    frei_356_2 : BOOL ;	
    frei_356_3 : BOOL ;	
    frei_356_4 : BOOL ;	
    frei_356_5 : BOOL ;	
    frei_356_6 : BOOL ;	
    frei_356_7 : BOOL ;	
    frei_357 : BYTE ;	
    frei_358 : BYTE ;	
    frei_359 : BYTE ;	
   END_STRUCT ;	
   SPHoPW : STRUCT 	//0360...00369: Spannhydraulik Maschinen OHNE Palettenwechsler
    RPL_Betrieb_Anwahl : BOOL ;	//SpH-Betriebsart: Anwahl RÜSTEN
    MPL_Betrieb_Anwahl : BOOL ;	//SpH-Betriebsart: Anwahl Maschinen-Funktionen
    RPL_Bef_Druck_A : BOOL ;	//Befehl Rüstplatz Funktion Druck auf Leitung A
    RPL_Bef_Druck_B : BOOL ;	//Befehl Rüstplatz Funktion Druck auf Leitung B
    RPL_Betrieb_aktiv : BOOL ;	//SpH-Betriebsart: RÜSTEN ist aktiv
    MPL_Betrieb_aktiv : BOOL ;	//SpH-Betriebsart: Maschinen-Funktionen sind aktiv
    frei4 : BOOL ;	
    frei5 : BOOL ;	
    frei6 : BOOL ;	
    frei7 : BOOL ;	
    frei8 : BOOL ;	
    frei9 : BOOL ;	
    frei10 : BOOL ;	
    frei11 : BOOL ;	
    frei12 : BOOL ;	
    frei13 : BOOL ;	
    test : ARRAY  [362 .. 369 ] OF BYTE ;	
   END_STRUCT ;	
   SPH_FD : STRUCT 	//0370...0399: Spannhydraulik mit FD-Technik
    RPL_Istdruck : REAL ;	//Rüstplatz Istdruck
    MPL_Istdruck : REAL ;	//Maschinenplatz Istdruck
    alte_Vorgabe : INT ;	//alte Vorgabe Maschinenraum
    frei_10 : BYTE  := B#16#5;	
    M_RPL_Spannen : BOOL ;	//Merker Rüstplatz Spannen remanent
    HM_PI_PW_GRST : BOOL ;	//HM PI PW in GRST
    FP_SPH_MA_entladen : BOOL ;	//Impuls Spannhydraulik Taster Maschine entladen
    SpF_Schmieren_erf : BOOL ;	//Spannfutter Schmieren erforderlich
    FP_PW_nicht_aktiv : BOOL ;	//Impuls Spannhydraulik PW in GRST und nicht aktiv
    FP_SPH_Befehl_spannen : BOOL ;	//Impuls Spannhydraulik Befehl spannen
    M_QUITT_M84 : BOOL ;	//Merker M84 quittieren
    MPL_spannen_aktivieren : BOOL ;	//MPL Funktion Spannen anstoßen wenn erlaubt
    PLC_MPL_ISTdruck_BYTE : BYTE ;	//PLC_MPL: Istdruck als BYTE
    RPL_Element_Vorrichtung : BOOL ;	//RPL mit Spann-Element Vorrichtung
    RPL_Element_Spannfutter : BOOL ;	//RPL mit Spann-Element Spannfutter
    MPL_Element_Vorrichtung : BOOL ;	//MPL mit Spann-Element Vorrichtung
    MPL_Element_Spannfutter : BOOL ;	//MPL mit Spann-Element Spannfutter
    M63_noPAL_MPL : BOOL ;	//M63 aktiv: keine Palette in Maschinenraum eingewechselt
    HM_NI_PW_GRST : BOOL ;	//HM NI PW in Grundstellung
    T_SpannF_Druckaufbau : BYTE  := B#16#1E;	//FD-Spannfutter: Laufzeit Druck-Aufbau [init: 30s]
    T_SpannF_Schmierzeit : BYTE  := B#16#A;	//FD-Spannfutter: Laufzeit mit Druck_OK [init: 10s]
    T_SpannF_Druckabbau : BYTE  := B#16#3C;	//FD-Spannfutter: Laufzeit Druck-Abbau [init: 60s]
    HM_PI_Reset_VSM_RS_FG : BOOL ;	//HM PI Reset VSM_RS_Freigabe
    HM_PI_FD_NOTBETRIEB : BOOL ;	//HM PI Schlüsselschalter FD-NOTBETRIEB aktiviert
    HM_NI_FD_NOTBETRIEB : BOOL ;	//HM NI Schlüsselschalter FD-NOTBETRIEB aktiviert
    M_Testbetrieb : BOOL ;	//Testbetrieb: Druck prüfen am Rüstplatz
    HM_NI_MPL_DRUCK_OK_PLC : BOOL ;	//HM NI MaschinenPlatz Druck ist OK (PLC-Sensor)
    HM_NI_MPL_DRUCK_OK_HAWE : BOOL ;	//HM NI MaschinenPlatz Druck ist OK (HAWE-Box-Sensor)
    MPL_DRUCK_OK_HAWE : BOOL ;	//MaschinenPlatz Druck ist OK (HAWE-Box-Sensor)
    MPL_DruckCTRL_aktiv : BOOL ;	//Druck-Überwachung im Maschinenraum ist aktiv (Spanndruck+Schmierdruck)
    MPL_HAWEBOX_SENSOR : BYTE ;	//Ist-Druck MPL von HAWE-Box-Sensor
    MPL_HAWEBOX_ABWEICHUNG : BYTE ;	//Ist-Druck-Abweichung MPL von HAWE-Box-Sensor
    frei : BYTE ;	
    ZM_MPL_SOLLDRUCK : BYTE ;	//Zwischen-Merker SOLL-Druck im MPL (PLC-Zyklus vorher)
    SPH_FD_reserve : STRUCT 	//SPH_FD_reserve   392...399
     res : ARRAY  [392 .. 399 ] OF BYTE ;	
    END_STRUCT ;	
   END_STRUCT ;	
   SA : STRUCT 	//0400...0499: Sonder-Ausführungen
    _29210000323 : STRUCT 	
     Aktiv : BOOL ;	//29210000323 2479057 DMC60HL: Fa.Schüler aktiv -----------HEX34=01
     SpannenNachEntspannen : BOOL ;	//Modus "Vorspannen" SA29210000323 ist aktiv
     Mit_SonderDruck_Spannen : BOOL ;	//Funktion: "Nach Entspannen mit SonderDruck Spannen" läuft
     I_Vorspannen_aktivieren : BOOL ;	//EINGANG-MERKER: Vorspannen mit Vorspanndruck aktivieren
     Vorspannen_ist_aktiv : BOOL ;	//Vorspannen mit Fußschalter aktivieren
     HM_PI_Druck_OK : BOOL ;	//HM PI Hawe Druck ok
     SonderDruck : BYTE  := B#16#64;	//SonderDruck für Spannen nach Entspannvorgang [init: 10 bar]
    END_STRUCT ;	
    test : ARRAY  [402 .. 499 ] OF BYTE ;	
   END_STRUCT ;	
   FASTEMS : STRUCT 	//0500...0509: FASTEMS
    ABST_FASTEMS : BOOL ;	//Ausbaustufe: FASTEMS
    DatUeGabe_Fastems : BOOL ;	//Datenübergabe von Fastems an Rüstplatz
    HM_DatUeGabe_Fastems : BOOL ;	//HM Datenübergabe von Fastems an Rüstplatz
    PI_DatUeGabe_Fastems : BOOL ;	//PI Datenübergabe von Fastems an Rüstplatz
    RPL_ohneSPH : BOOL ;	//Auswertung von Fastems: Palette OHNE SpannHydraulik
    RPL_DruckVorgabe_0 : BOOL ;	//Auswertung von Fastems: Druck-Vorgabe für Palette = 0
    RPL_DruckVorgabe_nok : BOOL ;	//Auswertung von Fastems: Druck-Vorgabe für Palette nicht OK
    Sperre_PWGF : BOOL ;	//PW-Freigabe sperren wegen falscher Druckvorgabe von Fastems
    VorgabeDruck : BYTE ;	//Vorgabe-Druck von Fastems an Rüstplatz-Palette
    alte_PalNr : BYTE ;	//alte Paletten-Nr
    FG_PW_Status : BOOL ;	//FG-PW Status letzter PLC-Zyklus
    test : ARRAY  [504 .. 509 ] OF BYTE ;	
   END_STRUCT ;	
   SPH_DH : STRUCT 	//0510...0519: DH-Software
    PW_Freigabe_VSM : BOOL ;	//PW-Freigabe VSM-Modul Rüstplatz
    SPANN_STELLE_1_OK : BOOL ;	//Spannstelle 1 für PW-Freigabe Ok
    SPANN_STELLE_2_OK : BOOL ;	//Spannstelle 2 für PW-Freigabe Ok
    DH_reserve : ARRAY  [512 .. 519 ] OF BYTE ;	
   END_STRUCT ;	
   HAWE : STRUCT 	//0520...0619: HAWE-Schnittstelle neu (erweitert)
    an : STRUCT 	//0520...0559: Meldungen an HAWE (40 Byte)
     SK1_St1_P_Vorgabe : WORD ;	//SK1_RPL_St_1: Druck-Vorgabe [0.1 bar]
     SK1_St2_P_Vorgabe : WORD ;	//SK1_RPL_St_2: Druck-Vorgabe [0.1 bar]
     SK1_St3_P_Vorgabe : WORD ;	//SK1_RPL_St_3: Druck-Vorgabe [0.1 bar]
     SK1_St4_P_Vorgabe : WORD ;	//SK1_RPL_St_4: Druck-Vorgabe [0.1 bar]
     SK2_St1_P_Vorgabe : WORD ;	//SK2_MPL_St_1: Druck-Vorgabe [0.1 bar]
     SK2_St2_P_Vorgabe : WORD ;	//SK2_MPL_St_2: Druck-Vorgabe [0.1 bar]
     SK2_St3_P_Vorgabe : WORD ;	//SK2_MPL_St_3: Druck-Vorgabe [0.1 bar]
     SK2_St4_P_Vorgabe : WORD ;	//SK2_MPL_St_4: Druck-Vorgabe [0.1 bar]
     SK1_St1_Bef_entspannen : BOOL ;	//SK1_RPL_St_1: Befehl Entspannen
     SK1_St1_Bef_Druck_0 : BOOL ;	//SK1_RPL_St_1: Befehl Druck=0 anlegen
     SK1_St1_Bef_spannen : BOOL ;	//SK1_RPL_St_1: Befehl Spannen
     SK1_St1_Meldung_NOTAUS : BOOL ;	//SK1_RPL_St_1: Meldung NOTAUS
     SK1_St1_ABST_SPH : BOOL ;	//SK1_RPL_St_1: ABST SPH ist aktiv
     SK1_St1 : BOOL ;	
     SK1_St1_IB_Y21 : BOOL ;	//SK1_RPL_St_1: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK1_St1_IB_Y51 : BOOL ;	//SK1_RPL_St_1: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK1_St2_Bef_entspannen : BOOL ;	//SK1_RPL_St_2: Befehl Entspannen
     SK1_St2_Bef_Druck_0 : BOOL ;	//SK1_RPL_St_2: Befehl Druck=0 anlegen
     SK1_St2_Bef_spannen : BOOL ;	//SK1_RPL_St_2: Befehl Spannen
     SK1_St2_Meldung_NOTAUS : BOOL ;	//SK1_RPL_St_2: Meldung NOTAUS
     SK1_St2_ABST_SPH : BOOL ;	//SK1_RPL_St_2: ABST SPH ist aktiv
     SK1_St2 : BOOL ;	
     SK1_St2_IB_Y21 : BOOL ;	//SK1_RPL_St_2: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK1_St2_IB_Y51 : BOOL ;	//SK1_RPL_St_2: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK1_St3_Bef_entspannen : BOOL ;	//SK1_RPL_St_3: Befehl Entspannen
     SK1_St3_Bef_Druck_0 : BOOL ;	//SK1_RPL_St_3: Befehl Druck=0 anlegen
     SK1_St3_Bef_spannen : BOOL ;	//SK1_RPL_St_3: Befehl Spannen
     SK1_St3_Meldung_NOTAUS : BOOL ;	//SK1_RPL_St_3: Meldung NOTAUS
     SK1_St3_ABST_SPH : BOOL ;	//SK1_RPL_St_3: ABST SPH ist aktiv
     SK1_St3 : BOOL ;	
     SK1_St3_IB_Y21 : BOOL ;	//SK1_RPL_St_3: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK1_St3_IB_Y51 : BOOL ;	//SK1_RPL_St_3: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK1_St4_Bef_entspannen : BOOL ;	//SK1_RPL_St_4: Befehl Entspannen
     SK1_St4_Bef_Druck_0 : BOOL ;	//SK1_RPL_St_4: Befehl Druck=0 anlegen
     SK1_St4_Bef_spannen : BOOL ;	//SK1_RPL_St_4: Befehl Spannen
     SK1_St4_Meldung_NOTAUS : BOOL ;	//SK1_RPL_St_4: Meldung NOTAUS
     SK1_St4_ABST_SPH : BOOL ;	//SK1_RPL_St_4: ABST SPH ist aktiv
     SK1_St4 : BOOL ;	
     SK1_St4_IB_Y21 : BOOL ;	//SK1_RPL_St_4: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK1_St4_IB_Y51 : BOOL ;	//SK1_RPL_St_4: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK2_St1_Bef_entspannen : BOOL ;	//SK2_MPL_St_1: Befehl Entspannen
     SK2_St1_Bef_Druck_0 : BOOL ;	//SK2_MPL_St_1: Befehl Druck=0 anlegen
     SK2_St1_Bef_spannen : BOOL ;	//SK2_MPL_St_1: Befehl Spannen
     SK2_St1_Meldung_NOTAUS : BOOL ;	//SK2_MPL_St_1: Meldung NOTAUS
     SK2_St1_ABST_SPH : BOOL ;	//SK2_MPL_St_1: ABST SPH ist aktiv
     SK2_St1 : BOOL ;	
     SK2_St1_IB_Y21 : BOOL ;	//SK2_MPL_St_1: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK2_St1_IB_Y51 : BOOL ;	//SK2_MPL_St_1: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK2_St2_Bef_entspannen : BOOL ;	//SK2_MPL_St_2: Befehl Entspannen
     SK2_St2_Bef_Druck_0 : BOOL ;	//SK2_MPL_St_2: Befehl Druck=0 anlegen
     SK2_St2_Bef_spannen : BOOL ;	//SK2_MPL_St_2: Befehl Spannen
     SK2_St2_Meldung_NOTAUS : BOOL ;	//SK2_MPL_St_2: Meldung NOTAUS
     SK2_St2_ABST_SPH : BOOL ;	//SK2_MPL_St_2: ABST SPH ist aktiv
     SK2_St2 : BOOL ;	
     SK2_St2_IB_Y21 : BOOL ;	//SK2_MPL_St_2: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK2_St2_IB_Y51 : BOOL ;	//SK2_MPL_St_2: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK2_St3_Bef_entspannen : BOOL ;	//SK2_MPL_St_3: Befehl Entspannen
     SK2_St3_Bef_Druck_0 : BOOL ;	//SK2_MPL_St_3: Befehl Druck=0 anlegen
     SK2_St3_Bef_spannen : BOOL ;	//SK2_MPL_St_3: Befehl Spannen
     SK2_St3_Meldung_NOTAUS : BOOL ;	//SK2_MPL_St_3: Meldung NOTAUS
     SK2_St3_ABST_SPH : BOOL ;	//SK2_MPL_St_3: ABST SPH ist aktiv
     SK2_St3 : BOOL ;	
     SK2_St3_IB_Y21 : BOOL ;	//SK2_MPL_St_3: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK2_St3_IB_Y51 : BOOL ;	//SK2_MPL_St_3: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SK2_St4_Bef_entspannen : BOOL ;	//SK2_MPL_St_4: Befehl Entspannen
     SK2_St4_Bef_Druck_0 : BOOL ;	//SK2_MPL_St_4: Befehl Druck=0 anlegen
     SK2_St4_Bef_spannen : BOOL ;	//SK2_MPL_St_4: Befehl Spannen
     SK2_St4_Meldung_NOTAUS : BOOL ;	//SK2_MPL_St_4: Meldung NOTAUS
     SK2_St4_ABST_SPH : BOOL ;	//SK2_MPL_St_4: ABST SPH ist aktiv
     SK2_St4 : BOOL ;	
     SK2_St4_IB_Y21 : BOOL ;	//SK2_MPL_St_4: IB-Befehl Ventil-Y21 (Spann-Ltg aug P-Ltg)
     SK2_St4_IB_Y51 : BOOL ;	//SK2_MPL_St_4: IB-Befehl Ventil-Y51 (Spann-Ltg auf T-Ltg)
     SpFkt_Bef_ankuppeln : BOOL ;	//SpKr-Funktion: Befehl SK2_MPL (Rüstplatz) ankuppeln
     SpFkt_Bef_abkuppeln : BOOL ;	//SpKr-Funktion: Befehl SK2_MPL (Rüstplatz) abkuppeln
     SpFkt_res1 : BOOL ;	//SpKr-Funktion:
     SpFkt_res2 : BOOL ;	//SpKr-Funktion:
     SpFkt_res3 : BOOL ;	//SpKr-Funktion:
     SpFkt_res4 : BOOL ;	//SpKr-Funktion:
     SpFkt_res5 : BOOL ;	//SpKr-Funktion:
     SpFkt_res6 : BOOL ;	//SpKr-Funktion:
     DIAG_SK1_Bef_TEACH_IN : BOOL ;	//Diagnose: SK1_RPL Befehl TEACH IN
     DIAG_SK2_Bef_TEACH_IN : BOOL ;	//Diagnose: SK2_MPL Befehl TEACH IN
     DIAG_IB_aktiv : BOOL ;	//Diagnose: IB-Betrieb ist aktiv
     DIAG_IB_PROP_RPL_steuern : BOOL ;	//Diagnose: IB-PROP SK1-RPL steuern
     DIAG_IB_PROP_MPL_steuern : BOOL ;	//Diagnose: IB-PROP SK2-MPL steuern
     frei_14 : BOOL ;	
     frei_15 : BOOL ;	
     DIAG_Lebenszeichen : BOOL ;	//Diagnose: Lebenszeichen-Überwachung
     Delta_P1_Druck_erreicht : BYTE ;	//INT_165: Tol(+/-) "Druck erreicht" beim Spannen (init: 3bar)
     Delta_P2_Nachregeln : BYTE ;	//INT_166: Tol(-) "Nachregeln" (init: 10bar) / FD: Impuls-AUS-Zeit [10ms]
     Delta_P3_NOTAUS : BYTE ;	//INT_167: Tol(-) "Druckabfall NOTAUS" (init: 25bar) / FD: Impuls-EIN-Zeit [10ms]
     P1_Delta_Steuerung : BYTE ;	//INT_168: %-Vorgabe vom SOLL-Wert zum Steuern (initial: 90%)
     P2_Delta_Regelung : BYTE ;	//INT_169: %-Vorgabe vom SOLL-Wert für Übergang Regelung (initial: 80%)
     P3_Loesedruck : BYTE ;	//INT_184: Druckvorgabe für Vorrichtung öffnen (initial: 150bar)
     P4_Druck_RV_oeffnen : BYTE ;	//INT_185: Druckvorgabe RV-Ventil öffnen (init: 100bar) / FD: Anzahl der Impulse
     T1_Spannen_verzoegert : BYTE ;	//INT_186: Verzögerungszeit "SpannSt gespannt" in [100ms] (initial: 5)
     T2_Laufzeit_RV_oeffnen : BYTE ;	//INT_187: Laufzeit "RV-Ventil öffnen" [100ms] (init: 10) / FD: Zwischendruck
     P3_Loesedruck_SK2 : BYTE ;	//INT_184: Druckvorgabe für Vorrichtung öffnen (initial: 150bar)
     P4_Druck_RV_oeffnen_SK2 : BYTE ;	//INT_185: Druckvorgabe RV-Ventil öffnen (init: 100bar) / FD: Anzahl der Impulse
     reserve2 : BYTE ;	
     SK1_St1_IB_Y31 : BOOL ;	//SK1_RPL_St_1: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK1_St1_IB_Y61 : BOOL ;	//SK1_RPL_St_1: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK1_St2_IB_Y31 : BOOL ;	//SK1_RPL_St_2: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK1_St2_IB_Y61 : BOOL ;	//SK1_RPL_St_2: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK1_St3_IB_Y31 : BOOL ;	//SK1_RPL_St_3: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK1_St3_IB_Y61 : BOOL ;	//SK1_RPL_St_3: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK1_St4_IB_Y31 : BOOL ;	//SK1_RPL_St_4: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK1_St4_IB_Y61 : BOOL ;	//SK1_RPL_St_4: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK2_St1_IB_Y31 : BOOL ;	//SK2_MPL_St_1: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK2_St1_IB_Y61 : BOOL ;	//SK2_MPL_St_1: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK2_St2_IB_Y31 : BOOL ;	//SK2_MPL_St_2: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK2_St2_IB_Y61 : BOOL ;	//SK2_MPL_St_2: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK2_St3_IB_Y31 : BOOL ;	//SK2_MPL_St_3: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK2_St3_IB_Y61 : BOOL ;	//SK2_MPL_St_3: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
     SK2_St4_IB_Y31 : BOOL ;	//SK2_MPL_St_4: IB-Befehl Ventil-Y31 (Entspann-Ltg auf P-Ltg)
     SK2_St4_IB_Y61 : BOOL ;	//SK2_MPL_St_4: IB-Befehl Ventil-Y61 (Entspann-Ltg auf T-Ltg)
    END_STRUCT ;	
    an_Reserve : STRUCT 	//0560...0569: Meldungen an HAWE Reserve (10 Byte)
     frei : ARRAY  [560 .. 569 ] OF BYTE ;	
    END_STRUCT ;	
    von : STRUCT 	//0570...0609: Meldungen von HAWE (40 Byte)
     SK1_St1_P_Druck : INT ;	//SK1_RPL_St_1: aktueller Spann-Druck [0.1 bar]
     SK1_St2_P_Druck : INT ;	//SK1_RPL_St_2: aktueller Spann-Druck [0.1 bar]
     SK1_St3_P_Druck : INT ;	//SK1_RPL_St_3: aktueller Spann-Druck [0.1 bar]
     SK1_St4_P_Druck : INT ;	//SK1_RPL_St_4: aktueller Spann-Druck [0.1 bar]
     SK2_St1_P_Druck : INT ;	//SK2_MPL_St_1: aktueller Spann-Druck [0.1 bar]
     SK2_St2_P_Druck : INT ;	//SK2_MPL_St_2: aktueller Spann-Druck [0.1 bar]
     SK2_St3_P_Druck : INT ;	//SK2_MPL_St_3: aktueller Spann-Druck [0.1 bar]
     SK2_St4_P_Druck : INT ;	//SK2_MPL_St_4: aktueller Spann-Druck [0.1 bar]
     SK1_St1_Entspannen_aktiv : BOOL ;	//SK1_RPL_St_1: Entspannen läuft
     SK1_St1_Druck_ist_0 : BOOL ;	//SK1_RPL_St_1: Druck=0
     SK1_St1_gespannt : BOOL ;	//SK1_RPL_St_1: gespannt + Drucküberwachung aktiv
     SK1_St1_NOTAUS : BOOL ;	//SK1_RPL_St_1: meldet NOTAUS
     SK1_St1_Kabelbruch : BOOL ;	//SK1_RPL_St_1: Drucksensor meldet Kabelbruch
     SK1_St1_FM_Regelung : BOOL ;	//SK1_RPL_St_1: Druck beim Regeln nicht erreichbar
     SK1_St1_res2 : BOOL ;	//SK1_RPL_St_1:
     SK1_St1_res3 : BOOL ;	//SK1_RPL_St_1:
     SK1_St2_Entspannen_aktiv : BOOL ;	//SK1_RPL_St_2: Entspannen läuft
     SK1_St2_Druck_ist_0 : BOOL ;	//SK1_RPL_St_2: Druck=0
     SK1_St2_gespannt : BOOL ;	//SK1_RPL_St_2: gespannt + Drucküberwachung aktiv
     SK1_St2_NOTAUS : BOOL ;	//SK1_RPL_St_2: meldet NOTAUS
     SK1_St2_Kabelbruch : BOOL ;	//SK1_RPL_St_2: Drucksensor meldet Kabelbruch
     SK1_St2_FM_Regelung : BOOL ;	//SK1_RPL_St_2: Druck beim Regeln nicht erreichbar
     SK1_St2_res2 : BOOL ;	//SK1_RPL_St_2:
     SK1_St2_res3 : BOOL ;	//SK1_RPL_St_2:
     SK1_St3_Entspannen_aktiv : BOOL ;	//SK1_RPL_St_3: Entspannen läuft
     SK1_St3_Druck_ist_0 : BOOL ;	//SK1_RPL_St_3: Druck=0
     SK1_St3_gespannt : BOOL ;	//SK1_RPL_St_3: gespannt + Drucküberwachung aktiv
     SK1_St3_NOTAUS : BOOL ;	//SK1_RPL_St_3: meldet NOTAUS
     SK1_St3_Kabelbruch : BOOL ;	//SK1_RPL_St_3: Drucksensor meldet Kabelbruch
     SK1_St3_FM_Regelung : BOOL ;	//SK1_RPL_St_3: Druck beim Regeln nicht erreichbar
     SK1_St3_res2 : BOOL ;	//SK1_RPL_St_3:
     SK1_St3_res3 : BOOL ;	//SK1_RPL_St_3:
     SK1_St4_Entspannen_aktiv : BOOL ;	//SK1_RPL_St_4: Entspannen läuft
     SK1_St4_Druck_ist_0 : BOOL ;	//SK1_RPL_St_4: Druck=0
     SK1_St4_gespannt : BOOL ;	//SK1_RPL_St_4: gespannt + Drucküberwachung aktiv
     SK1_St4_NOTAUS : BOOL ;	//SK1_RPL_St_4: meldet NOTAUS
     SK1_St4_Kabelbruch : BOOL ;	//SK1_RPL_St_4: Drucksensor meldet Kabelbruch
     SK1_St4_FM_Regelung : BOOL ;	//SK1_RPL_St_4: Druck beim Regeln nicht erreichbar
     SK1_St4_res2 : BOOL ;	//SK1_RPL_St_4:
     SK1_St4_res3 : BOOL ;	//SK1_RPL_St_4:
     SK2_St1_Entspannen_aktiv : BOOL ;	//SK2_MPL_St_1: Entspannen läuft
     SK2_St1_Druck_ist_0 : BOOL ;	//SK2_MPL_St_1: Druck=0
     SK2_St1_gespannt : BOOL ;	//SK2_MPL_St_1: gespannt + Drucküberwachung aktiv
     SK2_St1_NOTAUS : BOOL ;	//SK2_MPL_St_1: meldet NOTAUS
     SK2_St1_Kabelbruch : BOOL ;	//SK2_MPL_St_1: Drucksensor meldet Kabelbruch
     SK2_St1_FM_Regelung : BOOL ;	//SK2_MPL_St_1: Druck beim Regeln nicht erreichbar
     SK2_St1_res2 : BOOL ;	//SK2_MPL_St_1:
     SK2_St1_res3 : BOOL ;	//SK2_MPL_St_1:
     SK2_St2_Entspannen_aktiv : BOOL ;	//SK2_MPL_St_2: Entspannen läuft
     SK2_St2_Druck_ist_0 : BOOL ;	//SK2_MPL_St_2: Druck=0
     SK2_St2_gespannt : BOOL ;	//SK2_MPL_St_2: gespannt + Drucküberwachung aktiv
     SK2_St2_NOTAUS : BOOL ;	//SK2_MPL_St_2: meldet NOTAUS
     SK2_St2_Kabelbruch : BOOL ;	//SK2_MPL_St_2: Drucksensor meldet Kabelbruch
     SK2_St2_FM_Regelung : BOOL ;	//SK2_MPL_St_2: Druck beim Regeln nicht erreichbar
     SK2_St2_res2 : BOOL ;	//SK2_MPL_St_2:
     SK2_St2_res3 : BOOL ;	//SK2_MPL_St_2:
     SK2_St3_Entspannen_aktiv : BOOL ;	//SK2_MPL_St_3: Entspannen läuft
     SK2_St3_Druck_ist_0 : BOOL ;	//SK2_MPL_St_3: Druck=0
     SK2_St3_gespannt : BOOL ;	//SK2_MPL_St_3: gespannt + Drucküberwachung aktiv
     SK2_St3_NOTAUS : BOOL ;	//SK2_MPL_St_3: meldet NOTAUS
     SK2_St3_Kabelbruch : BOOL ;	//SK2_MPL_St_3: Drucksensor meldet Kabelbruch
     SK2_St3_FM_Regelung : BOOL ;	//SK2_MPL_St_3: Druck beim Regeln nicht erreichbar
     SK2_St3_res2 : BOOL ;	//SK2_MPL_St_3:
     SK2_St3_res3 : BOOL ;	//SK2_MPL_St_3:
     SK2_St4_Entspannen_aktiv : BOOL ;	//SK2_MPL_St_4: Entspannen läuft
     SK2_St4_Druck_ist_0 : BOOL ;	//SK2_MPL_St_4: Druck=0
     SK2_St4_gespannt : BOOL ;	//SK2_MPL_St_4: gespannt + Drucküberwachung aktiv
     SK2_St4_NOTAUS : BOOL ;	//SK2_MPL_St_4: meldet NOTAUS
     SK2_St4_Kabelbruch : BOOL ;	//SK2_MPL_St_4: Drucksensor meldet Kabelbruch
     SK2_St4_FM_Regelung : BOOL ;	//SK2_MPL_St_4: Druck beim Regeln nicht erreichbar
     SK2_St4_res2 : BOOL ;	//SK2_MPL_St_4:
     SK2_St4_res3 : BOOL ;	//SK2_MPL_St_4:
     DIAG_Software_Stand : BYTE ;	//Diagnose: Anzeige HAWE-Software-Stand
     DIAG_SK1_TEACH_IN_laeuft : BOOL ;	//Diagnose: SK1_RPL TEACH IN läuft
     DIAG_SK1_TEACH_IN_nOK : BOOL ;	//Diagnose: SK1_RPL TEACH IN NICHT erfolgreich
     DIAG_SK1_PROP_Kabelbruch : BOOL ;	//Diagnose: SK1_RPL PROP-Ventil Kabelbruch
     DIAG_SK2_TEACH_IN_laeuft : BOOL ;	//Diagnose: SK2_MPL TEACH IN läuft
     DIAG_SK2_TEACH_IN_nOK : BOOL ;	//Diagnose: SK2_MPL TEACH IN NICHT erfolgreich
     DIAG_SK2_PROP_Kabelbruch : BOOL ;	//Diagnose: SK2_MPL PROP-Ventil Kabelbruch
     DIAG_res : BOOL ;	//Diagnose:
     DIAG_Lebenszeichen : BOOL ;	//Diagnose: Lebenszeichen-Überwachung
     FD_NOTBETRIEB : BOOL ;	//FD: Schlüsselschalter NOTBETRIEB
     FD_frei_1 : BOOL ;	//FD:
     FD_frei_2 : BOOL ;	//FD:
     FD_FM_RPL : BOOL ;	//FD: Fehler Ruestplatz (1=ok)
     FD_PNOZ_FREIGABE : BOOL ;	//FD: Freigabe für SPH von PNOZ Multi
     FD_FM_MPL_1 : BOOL ;	//FD: FM MPL Eingangsfehler (1=ok)
     FD_FM_MPL_2 : BOOL ;	//FD: FM MPL Überwachung drucklos (1=ok)
     FD_KEIN_DURCHFLUSS : BOOL ;	//FD: Durchflusswächter am RPL (kein Durchfluss)
     reserve0 : BYTE ;	
     IB_SK1_St1_Y21_aktiv : BOOL ;	//SK1_RPL_St_1: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK1_St1_Y31_aktiv : BOOL ;	//SK1_RPL_St_1: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK1_St1_Y51_aktiv : BOOL ;	//SK1_RPL_St_1: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK1_St1_Y61_aktiv : BOOL ;	//SK1_RPL_St_1: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK1_St2_Y21_aktiv : BOOL ;	//SK1_RPL_St_2: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK1_St2_Y31_aktiv : BOOL ;	//SK1_RPL_St_2: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK1_St2_Y51_aktiv : BOOL ;	//SK1_RPL_St_2: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK1_St2_Y61_aktiv : BOOL ;	//SK1_RPL_St_2: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK1_St3_Y21_aktiv : BOOL ;	//SK1_RPL_St_3: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK1_St3_Y31_aktiv : BOOL ;	//SK1_RPL_St_3: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK1_St3_Y51_aktiv : BOOL ;	//SK1_RPL_St_3: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK1_St3_Y61_aktiv : BOOL ;	//SK1_RPL_St_3: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK1_St4_Y21_aktiv : BOOL ;	//SK1_RPL_St_4: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK1_St4_Y31_aktiv : BOOL ;	//SK1_RPL_St_4: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK1_St4_Y51_aktiv : BOOL ;	//SK1_RPL_St_4: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK1_St4_Y61_aktiv : BOOL ;	//SK1_RPL_St_4: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK2_St1_Y21_aktiv : BOOL ;	//SK2_RPL_St_1: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK2_St1_Y31_aktiv : BOOL ;	//SK2_RPL_St_1: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK2_St1_Y51_aktiv : BOOL ;	//SK2_RPL_St_1: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK2_St1_Y61_aktiv : BOOL ;	//SK2_MPL_St_1: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK2_St2_Y21_aktiv : BOOL ;	//SK2_RPL_St_2: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK2_St2_Y31_aktiv : BOOL ;	//SK2_RPL_St_2: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK2_St2_Y51_aktiv : BOOL ;	//SK2_RPL_St_2: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK2_St2_Y61_aktiv : BOOL ;	//SK2_MPL_St_2: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK2_St3_Y21_aktiv : BOOL ;	//SK2_RPL_St_3: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK2_St3_Y31_aktiv : BOOL ;	//SK2_RPL_St_3: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK2_St3_Y51_aktiv : BOOL ;	//SK2_RPL_St_3: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK2_St3_Y61_aktiv : BOOL ;	//SK2_MPL_St_3: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK2_St4_Y21_aktiv : BOOL ;	//SK2_RPL_St_4: Ventil Y21 ist aktiv (Spann-Ltg auf P-Ltg)
     IB_SK2_St4_Y31_aktiv : BOOL ;	//SK2_RPL_St_4: Ventil Y31 ist aktiv (Entspann-Ltg auf P-Ltg)
     IB_SK2_St4_Y51_aktiv : BOOL ;	//SK2_RPL_St_4: Ventil Y51 ist aktiv (Spann-Ltg auf T-Ltg)
     IB_SK2_St4_Y61_aktiv : BOOL ;	//SK2_MPL_St_4: Ventil Y61 ist aktiv (Entspann-Ltg auf T-Ltg)
     IB_SK1_PROP_STROM : BYTE ;	//SK1_RPL: PROP-Strom-Vorgabe durch HAWE [mA]
     IB_SK2_PROP_STROM : BYTE ;	//SK2_RPL: PROP-Strom-Vorgabe durch HAWE [mA]
     SK1_St1_Entspanndruck : BYTE ;	//SK1_RPL_St_1: aktueller Entspann-Druck [bar]
     SK1_St2_Entspanndruck : BYTE ;	//SK1_RPL_St_2: aktueller Entspann-Druck [bar]
     SK2_St1_Entspanndruck : BYTE ;	//SK2_MPL_St_1: aktueller Entspann-Druck [bar]
     SK2_St2_Entspanndruck : BYTE ;	//SK2_MPL_St_2: aktueller Entspann-Druck [bar]
     reserve12 : BYTE ;	
     reserve13 : BYTE ;	
    END_STRUCT ;	
    von_Reserve : STRUCT 	//0610...0619: von_HAWE Reserve (10 Byte)
     frei : ARRAY  [610 .. 619 ] OF BYTE ;	
    END_STRUCT ;	
   END_STRUCT ;	
   PBanHAWE : STRUCT 	//0620...0659: IO-Rangierer-Bereich Ausgänge: SP-Byte_00...SP-Byte_39
    OB_SP_P_SOLL_ST_1_RPL_H : BYTE ;	//H: SK1_RPL_St_1: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_1_RPL_L : BYTE ;	//L: SK1_RPL_St_1: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_2_RPL_H : BYTE ;	//H: SK1_RPL_St_2: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_2_RPL_L : BYTE ;	//L: SK1_RPL_St_2: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_3_RPL_H : BYTE ;	//H: SK1_RPL_St_3: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_3_RPL_L : BYTE ;	//L: SK1_RPL_St_3: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_4_RPL_H : BYTE ;	//H: SK1_RPL_St_4: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_4_RPL_L : BYTE ;	//L: SK1_RPL_St_4: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_1_MPL_H : BYTE ;	//H: SK2_MPL_St_1: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_1_MPL_L : BYTE ;	//L: SK2_MPL_St_1: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_2_MPL_H : BYTE ;	//H: SK2_MPL_St_2: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_2_MPL_L : BYTE ;	//L: SK2_MPL_St_2: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_3_MPL_H : BYTE ;	//H: SK2_MPL_St_3: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_3_MPL_L : BYTE ;	//L: SK2_MPL_St_3: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_4_MPL_H : BYTE ;	//H: SK2_MPL_St_4: Druck-Vorgabe [0.1 bar]
    OB_SP_P_SOLL_ST_4_MPL_L : BYTE ;	//L: SK2_MPL_St_4: Druck-Vorgabe [0.1 bar]
    OB_SP_STATE_ST_1_RPL : BYTE ;	//BEFEHLE SK1_RPL_St_1: Rüstplatz Stelle 1
    OB_SP_STATE_ST_2_RPL : BYTE ;	//BEFEHLE SK1_RPL_St_2: Rüstplatz Stelle 2
    OB_SP_STATE_ST_3_RPL : BYTE ;	//BEFEHLE SK1_RPL_St_3: Rüstplatz Stelle 3
    OB_SP_STATE_ST_4_RPL : BYTE ;	//BEFEHLE SK1_RPL_St_4: Rüstplatz Stelle 4
    OB_SP_STATE_ST_1_MPL : BYTE ;	//BEFEHLE SK2_MPL_St_1: Maschinenplatz Stelle 1
    OB_SP_STATE_ST_2_MPL : BYTE ;	//BEFEHLE SK2_MPL_St_2: Maschinenplatz Stelle 2
    OB_SP_STATE_ST_3_MPL : BYTE ;	//BEFEHLE SK2_MPL_St_3: Maschinenplatz Stelle 3
    OB_SP_STATE_ST_4_MPL : BYTE ;	//BEFEHLE SK2_MPL_St_4: Maschinenplatz Stelle 4
    OB_SP_FUNKTION_MPL_RPL : BYTE ;	//FUNKTION: Maschinenplatz/Rüstplatz
    OB_SP_DIAGNOSE_MPL_RPL : BYTE ;	//DIAGNOSE: Maschinenplatz/Rüstplatz
    OB_SP_P_TOL_DRUCH_ERREIC : BYTE ;	//INT_165: Tol(+/-) "Druck erreicht" beim Spannen (init: 3bar)
    OB_SP_P_TOL_NACHREGELN : BYTE ;	//INT_166: Tol(-) "Nachregeln" (init: 10bar) / FD: Impuls-AUS-Zeit [10ms]
    OB_SP_P_TOL_NOTAUS : BYTE ;	//INT_167: Tol(-) "Druckabfall NOTAUS" (init: 25bar) / FD: Impuls-EIN-Zeit [10ms]
    OB_SP_DELTA_STEUERUNG : BYTE ;	//INT_168: %-Vorgabe vom SOLL-Wert zum Steuern (initial: 90%)
    OB_SP_DELTA_REGELUNG : BYTE ;	//INT_169: %-Vorgabe vom SOLL-Wert für Übergang Regelung (initial: 80%)
    OB_SP_P_LOESEDRUCK : BYTE ;	//INT_184: Druckvorgabe für Vorrichtung öffnen (initial: 150bar)
    OB_SP_P_DRUCK_RV_OEFFNEN : BYTE ;	//INT_185: Druckvorgabe RV-Ventil öffnen (init: 100bar) / FD: Anzahl der Impulse
    OB_SP_P_T_VERZ_SPANNEN : BYTE ;	//INT_186: Verzögerungszeit "SpannSt gespannt" in [100ms] (initial: 5)
    OB_SP_P_T_RV_OEFFNEN : BYTE ;	//INT_187: Laufzeit "RV-Ventil öffnen" [100ms] (init: 10) / FD: Zwischendruck
    OB_SP_Byte_35 : BYTE ;	//MPL: Druckvorgabe für Vorrichtung öffnen (initial: 150bar)
    OB_SP_Byte_36 : BYTE ;	//MPL: Druckvorgabe RV-Ventil öffnen (init: 100bar) / FD: Anzahl der Impulse
    OB_SP_Byte_37 : BYTE ;	
    OB_SP_Byte_38 : BYTE ;	//Diagnose-Befehle RPL Ventile Y31+Y61
    OB_SP_Byte_39 : BYTE ;	//Diagnose-Befehle MPL Ventile Y31+Y61
   END_STRUCT ;	
   PBzuHAWE_Erweiterung : STRUCT 	//0660...0669: IO-Rangierer-Bereich Ausgänge: SP-Byte_40...SP-Byte_49
    OB_SP_Byte_40 : BYTE ;	
    OB_SP_Byte_41 : BYTE ;	
    OB_SP_Byte_42 : BYTE ;	
    OB_SP_Byte_43 : BYTE ;	
    OB_SP_Byte_44 : BYTE ;	
    OB_SP_Byte_45 : BYTE ;	
    OB_SP_Byte_46 : BYTE ;	
    OB_SP_Byte_47 : BYTE ;	
    OB_SP_Byte_48 : BYTE ;	
    OB_SP_Byte_49 : BYTE ;	
   END_STRUCT ;	
   PBvonHAWE : STRUCT 	//0670...0709: IO-Rangierer-Bereich Eingänge: SP-Byte_00...SP-Byte_39
    IB_SP_P_IST_ST_1_RPL_H : BYTE ;	//H: SK1_RPL_St_1: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_1_RPL_L : BYTE ;	//L: SK1_RPL_St_1: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_2_RPL_H : BYTE ;	//H: SK1_RPL_St_2: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_2_RPL_L : BYTE ;	//L: SK1_RPL_St_2: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_3_RPL_H : BYTE ;	//H: SK1_RPL_St_3: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_3_RPL_L : BYTE ;	//L: SK1_RPL_St_3: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_4_RPL_H : BYTE ;	//H: SK1_RPL_St_4: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_4_RPL_L : BYTE ;	//L: SK1_RPL_St_4: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_1_MPL_H : BYTE ;	//H: SK2_MPL_St_1: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_1_MPL_L : BYTE ;	//L: SK2_MPL_St_1: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_2_MPL_H : BYTE ;	//H: SK2_MPL_St_2: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_2_MPL_L : BYTE ;	//L: SK2_MPL_St_2: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_3_MPL_H : BYTE ;	//H: SK2_MPL_St_3: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_3_MPL_L : BYTE ;	//L: SK2_MPL_St_3: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_4_MPL_H : BYTE ;	//H: SK2_MPL_St_4: aktueller Spann-Druck [0.1 bar]
    IB_SP_P_IST_ST_4_MPL_L : BYTE ;	//L: SK2_MPL_St_4: aktueller Spann-Druck [0.1 bar]
    IB_SP_STATE_ST_1_RPL : BYTE ;	//STATUS SK1_RPL_St_1: Rüstplatz Stelle 1
    IB_SP_STATE_ST_2_RPL : BYTE ;	//STATUS SK1_RPL_St_2: Rüstplatz Stelle 2
    IB_SP_STATE_ST_3_RPL : BYTE ;	//STATUS SK1_RPL_St_3: Rüstplatz Stelle 3
    IB_SP_STATE_ST_4_RPL : BYTE ;	//STATUS SK1_RPL_St_4: Rüstplatz Stelle 4
    IB_SP_STATE_ST_1_MPL : BYTE ;	//STATUS SK2_MPL_St_1: Maschinenplatz Stelle 1
    IB_SP_STATE_ST_2_MPL : BYTE ;	//STATUS SK2_MPL_St_2: Maschinenplatz Stelle 2
    IB_SP_STATE_ST_3_MPL : BYTE ;	//STATUS SK2_MPL_St_3: Maschinenplatz Stelle 3
    IB_SP_STATE_ST_4_MPL : BYTE ;	//STATUS SK2_MPL_St_4: Maschinenplatz Stelle 4
    IB_SP_DIAGNOSE_SW : BYTE ;	//DIAGNOSE: Anzeige HAWE-Software-Stand
    IB_SP_DIAGNOSE_MPL_RPL : BYTE ;	//DIAGNOSE: RPL-MPL-Funktionen
    IB_SP_FD_INPUTS : BYTE ;	//FD_SpH: Meldungen für FD-Spannhydraulik
    IB_SP_reserve1 : BYTE ;	
    IB_SP_DIAG_RPL_1_2 : BYTE ;	//Diagnose HAWE RPL-Spannstelle 1+2
    IB_SP_DIAG_RPL_3_4 : BYTE ;	//Diagnose HAWE RPL-Spannstelle 3+4
    IB_SP_DIAG_MPL_1_2 : BYTE ;	//Diagnose HAWE MPL-Spannstelle 1+2
    IB_SP_DIAG_MPL_3_4 : BYTE ;	//Diagnose HAWE MPL-Spannstelle 3+4
    IB_SP_DIAG_RPL_PROP : BYTE ;	//Diagnose RPL-PROP-Stromwert [mA]
    IB_SP_DIAG_MPL_PROP : BYTE ;	//Diagnose MPL-PROP-Stromwert [mA]
    IB_SP_Byte_34 : BYTE ;	//SK1_RPL_St_1: aktueller Entspann-Druck [bar]
    IB_SP_Byte_35 : BYTE ;	//SK1_RPL_St_2: aktueller Entspann-Druck [bar]
    IB_SP_Byte_36 : BYTE ;	//SK2_MPL_St_1: aktueller Entspann-Druck [bar]
    IB_SP_Byte_37 : BYTE ;	//SK2_MPL_St_2: aktueller Entspann-Druck [bar]
    IB_SP_Byte_38 : BYTE ;	
    IB_SP_Byte_39 : BYTE ;	
   END_STRUCT ;	
   PBvonHAWE_Erweiterung : STRUCT 	//0710...0719: IO-Rangierer-Bereich Eingänge: SP-Byte_40...SP-Byte_49
    IB_SP_Byte_40 : BYTE ;	
    IB_SP_Byte_41 : BYTE ;	
    IB_SP_Byte_42 : BYTE ;	
    IB_SP_Byte_43 : BYTE ;	
    IB_SP_Byte_44 : BYTE ;	
    IB_SP_Byte_45 : BYTE ;	
    IB_SP_Byte_46 : BYTE ;	
    IB_SP_Byte_47 : BYTE ;	
    IB_SP_Byte_48 : BYTE ;	
    IB_SP_Byte_49 : BYTE ;	
   END_STRUCT ;	
   SpH_DIAG : STRUCT 	//0720...0749: Spannhydraulik: Diagnose-Bild für HAWE-Box (Steuerung)
    HMI_DIAG_RPL_aktiv : BOOL ;	//HMI-Bild: Diagnose HAWE-Box Rüstplatz ist angewählt
    HMI_DIAG_MPL_aktiv : BOOL ;	//HMI-Bild: Diagnose HAWE-Box Maschinenplatz ist angewählt
    SK1_RPL_DIAGNOSE_aktiv : BOOL ;	//SK1-RPL Steuerung über DIAGNOSE ist aktiviert
    SK2_MPL_DIAGNOSE_aktiv : BOOL ;	//SK2-MPL Steuerung über DIAGNOSE ist aktiviert
    SK1_RPL_PROP_ein : BOOL ;	//SK1_RPL PROP-Ventil einschalten
    SK2_MPL_PROP_ein : BOOL ;	//SK2_MPL PROP-Ventil einschalten
    SK : ARRAY  [1 .. 2 ] OF //Spannkreis:  1=RPL   2=MPL
    STRUCT 	
     Bef_Steuerung_aktiv : BOOL ;	//Diagnose: Befehl-Steuerung ist aktiviert (geregelt)
     Y_Steuerung_aktiv : BOOL ;	//Diagnose: Ventil-Steuerung ist aktiviert (gesteuert)
     Stelle : ARRAY  [1 .. 4 ] OF //Stelle 1...4
     STRUCT 	
      Bef_Y21 : BOOL ;	//Befehl Y21 (Spann-Leitung auf P-Leitung)
      Bef_Y51 : BOOL ;	//Befehl Y51 (Spann-Leitung auf T-Leitung)
      Bef_Y31 : BOOL ;	//Befehl Y31 (Entspann-Leitung auf P-Leitung)
      Bef_Y61 : BOOL ;	//Befehl Y61 (Entspann-Leitung auf T-Leitung)
      Bef_Spannen : BOOL ;	//Bef Spannen über Diagnose-Schnittstelle
      Bef_Entspannen : BOOL ;	//Bef Entpannen über Diagnose-Schnittstelle
      Bef_Druck0 : BOOL ;	//Bef Druck=0 über Diagnose-Schnittstelle
      Bef_RV_oeffnen : BOOL ;	//Bef RückschlagVentil öffnen über Diagnose-Schnittstelle
      Vorgabe_Steuerdruck : BYTE ;	//Druckvorgabe beim Steuern
     END_STRUCT ;	
    END_STRUCT ;	
    SpH_DIAG_res : ARRAY  [742 .. 749 ] OF BYTE ;	
   END_STRUCT ;	
   SpH_DIAG_HMI : STRUCT 	//0750...0787: Spannhydraulik: Diagnose-Bild für HAWE-Box (Anzeige im HMI-Bild)
    SK1_RPL_DIAGNOSE_aktiv : BOOL ;	//SK1-RPL Steuerung über DIAGNOSE ist aktiviert
    SK2_MPL_DIAGNOSE_aktiv : BOOL ;	//SK2-MPL Steuerung über DIAGNOSE ist aktiviert
    SK1_RPL_PROP_ein : BOOL ;	//SK1_RPL PROP-Ventil einschalten
    SK2_MPL_PROP_ein : BOOL ;	//SK2_MPL PROP-Ventil einschalten
    SK : ARRAY  [1 .. 2 ] OF //SK[1]=RPL   SK[2]=MPL
    STRUCT 	
     Vorgabe_Steuerdruck : BYTE ;	//Druckvorgabe für PROP steuern
     Steuerstrom_PROP : BYTE ;	//Rückmeldung PROP-Steuerstrom [4...20mA]
     Stelle : ARRAY  [1 .. 4 ] OF //Spannstelle 1...4
     STRUCT 	
      Bef_Spannen : BOOL ;	//Bef Spannen
      Bef_Entspannen : BOOL ;	//Bef Entspannen
      Bef_Druck0 : BOOL ;	//Bef Druck_0
      Y21_Spannen_P : BOOL ;	//Bef Ventil-Y21 Spannen auf P-Leitung
      Y31_Entspannen_P : BOOL ;	//Bef Ventil-Y31 Entspannen auf P-Leitung
      Y51_Spannen_T : BOOL ;	//Bef Ventil-Y51 Spannen auf T-Leitung
      Y61_Entspannen_T : BOOL ;	//Bef Ventil-Y61 Entspannen auf T-Leitung
      frei1 : BOOL ;	
      Bef_Spannen_RM : BOOL ;	//Bef Spannen Rückmeldung
      Bef_Entspannen_RM : BOOL ;	//Bef Entspannen Rückmeldung
      Bef_Druck0_RM : BOOL ;	//Bef Druck_0 Rückmeldung
      Y21_Spannen_P_RM : BOOL ;	//Bef Ventil-Y21 Spannen auf P-Leitung Rückmeldung
      Y31_Entspannen_P_RM : BOOL ;	//Bef Ventil-Y31 Entspannen auf P-Leitung Rückmeldung
      Y51_Spannen_T_RM : BOOL ;	//Bef Ventil-Y51 Spannen auf T-Leitung Rückmeldung
      Y61_Entspannen_T_RM : BOOL ;	//Bef Ventil-Y61 Entspannen auf T-Leitung Rückmeldung
      frei3 : BOOL ;	
      IST_Druck : BYTE ;	//aktueller Istdruck vom Transmitter
     END_STRUCT ;	
    END_STRUCT ;	
   END_STRUCT ;	
   ROB_Interface : STRUCT 	//0788...0799: Roboter-Interface
    HM_PI_GRST : BOOL ;	//HM PI PW in Grundstellung
    HM_PI_SS_Roboter : BOOL ;	//HM PI Schlüsselschalter auf Roboterbetrieb
    PW_Freigabe : BOOL ;	//Rüstplatz vom Roboter für PW freigegeben
    HM_NI_EX_PW_aktiv : BOOL ;	//HM NI #EX_PW_aktiv
    HM_PI_M2 : BOOL ;	//HM PI "DB_ROB_IF".IN.RPL.Bef_RPL_Tuer_oeffnen
    HM_PI_M3 : BOOL ;	//HM PI "DB_ROB_IF".IN.RPL.Bef_RPL_Tuer_schliessen
    HM_PI_M4 : BOOL ;	//HM PI #EX_RPL_PW_GRST
    PI_SS_Roboter : BOOL ;	//PI Schlüsselschalter auf Roboterbetrieb
    ZM_PW_Freigabe : BOOL ;	//Zwischen-Merker PW-Freigabe (vorheriger PLC-Zyklus)
    HM_PI_PW_Freigabe : BOOL ;	//HM PI Paletten-Status am RPL aktualisieren
    RPL_Nr_9999 : BOOL ;	//RPL: Teile-/ Werkstück-Nr ist "9999" (für Einpaletten-Betrieb)
    HM_PI_Rob_entladen_T1 : BOOL ;	//HM posFlanke Roboter-Meldung Teil 1 entladen
    HM_PI_Rob_beladen_T1 : BOOL ;	//HM posFlanke Roboter-Meldung Teil 1 beladen
    HM_PI_Rob_entladen_T2 : BOOL ;	//HM posFlanke Roboter-Meldung Teil 2 entladen
    HM_PI_Rob_beladen_T2 : BOOL ;	//HM posFlanke Roboter-Meldung Teil 2 beladen
    WS_TYP_gleich : BOOL ;	//WS_TYP von PLCanROB = WS_TYP von Roboter gespiegelt
    Prg_Nr : DINT ;	//Teileprogramm-Nr
    WS_Nr : DINT ;	//Werkstück-Nr
    HM_PI_ROB_PWFG : BOOL ;	//HM PI Befehl von Roboter "PW-Freigabe"
    res : BYTE ;	
   END_STRUCT ;	
   ALLG : STRUCT 	//0800...0899: Allgemeiner Bereich
    BYTE_auf_BITS : STRUCT 	//Aufsplitten von Byte-Inhalt auf Bits
     Bit0 : BOOL ;	//BYTE Zugriff auf Bit "0"
     Bit1 : BOOL ;	//BYTE Zugriff auf Bit "1"
     Bit2 : BOOL ;	//BYTE Zugriff auf Bit "2"
     Bit3 : BOOL ;	//BYTE Zugriff auf Bit "3"
     Bit4 : BOOL ;	//BYTE Zugriff auf Bit "4"
     Bit5 : BOOL ;	//BYTE Zugriff auf Bit "5"
     Bit6 : BOOL ;	//BYTE Zugriff auf Bit "6"
     Bit7 : BOOL ;	//BYTE Zugriff auf Bit "7"
    END_STRUCT ;	
    t_INT : INT ;	
    t_INT1 : INT ;	
    t_INT2 : INT ;	
    t_STRING_1 : STRING  [10 ];	
    t_STRING_2 : STRING  [1 ] := '+';	
    t_DINT : DINT ;	
    t_DINT1 : DINT ;	
    t_DINT2 : DINT ;	
    res : ARRAY  [836 .. 899 ] OF BYTE ;	
   END_STRUCT ;	
   frei : ARRAY  [900 .. 999 ] OF //0900...0999: Frei
   BYTE ;	
  END_STRUCT ;	
BEGIN
   SI.HM_NI_T_ART_auf := FALSE; 
   SI.NI_T_ART_auf := FALSE; 
   SI.ZD_Ber_1_Sperre := FALSE; 
   SI.HM_PI_ART_verriegelt := FALSE; 
   SI.Abnahmetest := FALSE; 
   SI.f13 := FALSE; 
   SI.f14 := FALSE; 
   SI.f15 := FALSE; 
   SI.ACHTUNG := FALSE; 
   SI.f17 := FALSE; 
   SI.f18 := FALSE; 
   SI.f19 := FALSE; 
   SI.f110 := FALSE; 
   SI.f111 := B#16#0; 
   SI.hm_PI_MSSTst_ART_auf_zu := FALSE; 
   SI.PI_MSSTst_ART_auf_zu := FALSE; 
   SI.PW_nicht_aktiv := FALSE; 
   SI.hm_RPT_Taste_auf_zu := FALSE; 
   SI.PI_RPT_Taste_auf_zu := FALSE; 
   SI.hm_WMTst_entriegeln := FALSE; 
   SI.PI_WMTst_entriegeln := FALSE; 
   SI.WW_nicht_aktiv := FALSE; 
   SI.hm_PI_KA_Sammelfehler := FALSE; 
   SI.hm_NI_KA_MMS_ok := FALSE; 
   SI.m_HYD_hochgefahren := FALSE; 
   SI.hm_NI_700143 := FALSE; 
   SI.Sammel_Warnung := FALSE; 
   SI.Sammel_Meldungen := FALSE; 
   SI.hm_PI_T_Spuelpistole := FALSE; 
   SI.m_Spuelpistole_ein := FALSE; 
   SI.PI_WMT_zu := FALSE; 
   SI.PF_WMT_zu := FALSE; 
   SI.Start_ART_oeffnen := FALSE; 
   SI.IB_Teststopp_Gr1 := FALSE; 
   SI.IB_Teststopp_Gr2 := FALSE; 
   SI.IB_Teststopp_Gr3 := FALSE; 
   SI.frei[8] := B#16#0; 
   SI.frei[9] := B#16#0; 
   KSA.H7_letzte_Eingabe := 40; 
   KSA.IKZ_PROP_Vorgabe := 0; 
   KSA.OA_IKZ_PROP_VENTIL := 0; 
   KSA.Z00_IKZ_GRST := FALSE; 
   KSA.Z01_IKZ_Anlauf := FALSE; 
   KSA.Z02_IKZ_G1_Freigabe := FALSE; 
   KSA.Z03_IKZ_aus := FALSE; 
   KSA.Z04_IKZ_FM_Anlauf := FALSE; 
   KSA.Z05_IKZ_FM_G1 := FALSE; 
   KSA.Z06_IKZ_FM_Waechter := FALSE; 
   KSA.Z07_IKZ_FM_eLeitung := FALSE; 
   KSA.HM_PI_KSA_Knoll_AUTO := FALSE; 
   KSA.frei10 := FALSE; 
   KSA.frei11 := FALSE; 
   KSA.frei12 := FALSE; 
   KSA.frei13 := FALSE; 
   KSA.frei14 := FALSE; 
   KSA.frei15 := FALSE; 
   KSA.ABST_Test_IKZ := FALSE; 
   SPF.hm_PI_Rechtslauf := FALSE; 
   SPF.hm_PI_Automatik := FALSE; 
   SPF.hm_PI_Linkslauf := FALSE; 
   SPF.Schnecke_Wechsel_Betrieb := FALSE; 
   SPF.HMI_SpF_ein := FALSE; 
   TempKomp.SPI_PT100 := 0.000000e+000; 
   DB_VAR := 0; 
   RPT_Folgen.res4 := FALSE; 
   RPT_Folgen.res5 := FALSE; 
   RPT_Folgen.res6 := FALSE; 
   RPT_Folgen.res7 := FALSE; 
   RPT_Folgen.res8 := FALSE; 
   RPT_Folgen.res9 := FALSE; 
   RPT_Folgen.res10 := FALSE; 
   RPT_Folgen.muss_frei_bleiben := FALSE; 
   RPT_Folgen.I1_ROB_spannen := FALSE; 
   RPT_Folgen.K1_ROB_entspannen := FALSE; 
   RPT_Folgen.L1_ROB_PWFG_oRPAX := FALSE; 
   RPT_Folgen.L2_ROB_PWFG_mRPAX := FALSE; 
   RPT_Folgen.M1_RPAX_positionieren := FALSE; 
   RPT_Folgen.D2_Abkuppeln := FALSE; 
   RPT_Folgen.E8_PWFG_oPROP_oRPAX := FALSE; 
   RPT_Folgen.M2_ROB_RPAX_Pos := FALSE; 
   RPT_Folgen.E3_PWFG_mSPH_mRPAX := FALSE; 
   RPT_Folgen.E4_PWFG_oSPH_mRPAX := FALSE; 
   RPT_Folgen.E5_PWFG_mSpH_oRPAX_Auto := FALSE; 
   RPT_Folgen.E6_PWFG_mSpH_mRPAX_Auto := FALSE; 
   RPT_Folgen.F1_spannen_mRPT := FALSE; 
   RPT_Folgen.G1_entspannen_mRPT := FALSE; 
   RPT_Folgen.H1_ROB_RPT_schliessen := FALSE; 
   RPT_Folgen.H2_ROB_RPT_oeffnen := FALSE; 
   RPT_Folgen.A1_spannen_oRPT := FALSE; 
   RPT_Folgen.B1_entspannen_oRPT := FALSE; 
   RPT_Folgen.C1_RPT_schliessen := FALSE; 
   RPT_Folgen.C2_RPT_oeffnen := FALSE; 
   RPT_Folgen.D1_Ankuppeln := FALSE; 
   RPT_Folgen.E7_PWFG_NullpunktSpg := FALSE; 
   RPT_Folgen.E1_PWFG_mSPH_oRPAX := FALSE; 
   RPT_Folgen.E2_PWFG_oSPH_oRPAX := FALSE; 
   RPT_Zustand.Z08_Entspannen := FALSE; 
   RPT_Zustand.Z09_RPT_oeffnen := FALSE; 
   RPT_Zustand.Z10_RPAX_0_Grad := FALSE; 
   RPT_Zustand.Z11_RPAX_positionieren := FALSE; 
   RPT_Zustand.Z12 := FALSE; 
   RPT_Zustand.Z13 := FALSE; 
   RPT_Zustand.Z14 := FALSE; 
   RPT_Zustand.Z15_Abbruch := FALSE; 
   RPT_Zustand.Z00_Grundstellung := FALSE; 
   RPT_Zustand.Z01_PalKlemmung_ein := FALSE; 
   RPT_Zustand.Z02_Ankuppeln := FALSE; 
   RPT_Zustand.Z03_Spannen := FALSE; 
   RPT_Zustand.Z04_RPT_schliessen := FALSE; 
   RPT_Zustand.Z05_Abkuppeln := FALSE; 
   RPT_Zustand.Z06_PalKlemmung_aus := FALSE; 
   RPT_Zustand.Z07_PW_FG_aktivieren := FALSE; 
   RPT_fertig.Z08_Entspannen := FALSE; 
   RPT_fertig.Z09_RPT_oeffnen := FALSE; 
   RPT_fertig.Z10_RPAX_0_Grad := FALSE; 
   RPT_fertig.Z11_RPAX_positionieren := FALSE; 
   RPT_fertig.Z12 := FALSE; 
   RPT_fertig.Z13 := FALSE; 
   RPT_fertig.Z14 := FALSE; 
   RPT_fertig.Z15_Abbruch := FALSE; 
   RPT_fertig.Z00_Grundstellung := FALSE; 
   RPT_fertig.Z01_PalKlemmung_ein := FALSE; 
   RPT_fertig.Z02_Ankuppeln := FALSE; 
   RPT_fertig.Z03_Spannen := FALSE; 
   RPT_fertig.Z04_RPT_schliessen := FALSE; 
   RPT_fertig.Z05_Abkuppeln := FALSE; 
   RPT_fertig.Z06_PalKlemmung_aus := FALSE; 
   RPT_fertig.Z07_PW_FG_aktivieren := FALSE; 
   RP_Achse.Bereich := 0; 
   RP_Achse.Position := 0; 
   RP_Achse.positionieren_auf_0Grad := FALSE; 
   RP_Achse.positiv_verfahren := FALSE; 
   RP_Achse.negativ_verfahren := FALSE; 
   RP_Achse.positionieren := FALSE; 
   RP_Achse.Befehl_positiv_verfahren := FALSE; 
   RP_Achse.Befehl_negativ_verfahren := FALSE; 
   RP_Achse.Befehl_positionieren := FALSE; 
   RP_Achse.IM_Position_erreicht := FALSE; 
   RP_Achse.FP_Position_erreicht := FALSE; 
   RP_Achse.Klemmung_spannen := FALSE; 
   RP_Achse.Klemmung_loesen := FALSE; 
   RP_Achse.IM_RPL_Taste_positiv := FALSE; 
   RP_Achse.res1 := FALSE; 
   RP_Achse.res11 := FALSE; 
   RP_Achse.res12 := FALSE; 
   RP_Achse.res13 := FALSE; 
   RP_Achse.Byte_res1 := B#16#0; 
   RP_Achse.Byte_res2 := B#16#0; 
   frei1[40] := B#16#0; 
   frei1[41] := B#16#0; 
   frei1[42] := B#16#0; 
   frei1[43] := B#16#0; 
   frei1[44] := B#16#0; 
   frei1[45] := B#16#0; 
   frei1[46] := B#16#0; 
   frei1[47] := B#16#0; 
   frei1[48] := B#16#0; 
   frei1[49] := B#16#0; 
   frei1[50] := B#16#0; 
   frei1[51] := B#16#0; 
   frei1[52] := B#16#0; 
   frei1[53] := B#16#0; 
   anSpannHydraulik.frei_1 := FALSE; 
   anSpannHydraulik.Anf_Ankuppeln_RP := FALSE; 
   anSpannHydraulik.frei_3 := FALSE; 
   anSpannHydraulik.Anf_Abkuppeln_RP := FALSE; 
   anSpannHydraulik.Anf_Druck_0_RP := FALSE; 
   RPL_Abblasen.HM1_RPL_Abblasen_St1 := FALSE; 
   RPL_Abblasen.HM2_RPL_Abblasen_St2 := FALSE; 
   RPL_Abblasen.HM3_RPL_Abblasen_St3 := FALSE; 
   RPL_Abblasen.HM4_RPL_Abblasen_St4 := FALSE; 
   RPL_Abblasen.RPL_Ablasen_HAND_EIN := FALSE; 
   RPL_Abblasen.RPLAbblasen_HAND_aus := FALSE; 
   RPL_Abblasen.Zeitimpuls := 60; 
   RPL_Abblasen.RPL_Abblasen_res[60] := B#16#0; 
   RPL_Abblasen.RPL_Abblasen_res[61] := B#16#0; 
   Frei_2.frei[62] := B#16#0; 
   Frei_2.frei[63] := B#16#0; 
   Frei_2.frei[64] := B#16#0; 
   Frei_2.frei[65] := B#16#0; 
   RPT.Status_Folge_alt := L#0; 
   RPT.Folgen_Abbruch_aktiviert := FALSE; 
   RPT.Folgen_Abbruch := FALSE; 
   RPT.HM_PI_Z00_Grundstellung := FALSE; 
   RPT.Letzte_RPT_FKT := FALSE; 
   RPT.PWinGRSTundNICHTaktiv := FALSE; 
   RPT.HM_NI_PWFG := FALSE; 
   RPT.NOTAUS_Schutzleiste := FALSE; 
   RPT.FG_TuerZyl_oeffnen := FALSE; 
   RPT.FG_TuerZyl_schliessen := FALSE; 
   RPT.Anf_RPAX_POSplus := FALSE; 
   RPT.Anf_RPAX_POSminus := FALSE; 
   RPT.RPAX_auf_Pos := FALSE; 
   RPT.HM_PI_Taste_Spannen := FALSE; 
   RPT.f2 := FALSE; 
   RPT.HM_PI_SAuto_spannen_1 := FALSE; 
   RPT.f3 := FALSE; 
   RPT.HM_PI_SAuto_entspannen_1 := FALSE; 
   RPT.f4 := FALSE; 
   RPT.f5 := FALSE; 
   RPT.HM_PI_PW_GRST := FALSE; 
   RPT.letzte_PW_Stellung := FALSE; 
   RPT.HMI_AutoStarten := FALSE; 
   RPT.HMI_TuerAuf_PrgEnde := FALSE; 
   RPT.RP_PWFG_oRSP_aktiv := FALSE; 
   RPT.HM_PI_RPL_FG := FALSE; 
   RPT.Zxx_alter_Zustand := W#16#0; 
   RPT.f7 := B#16#0; 
   RPT.f8 := B#16#0; 
   RPT.PI_Ausloeser_Spannen := FALSE; 
   RPT.HM_PI_Ausloeser_Spannen := FALSE; 
   RPT.PI_Ausloeser_Entspann := FALSE; 
   RPT.HM_PI_Ausloeser_Entspann := FALSE; 
   RPT.extSpannsystem_vorhanden := FALSE; 
   RPT.RS_RPL_FRG := FALSE; 
   RPT.RPL_RS_Anf_ankuppeln := FALSE; 
   RPT.RPL_RS_RM_angekuppelt := FALSE; 
   RPT.RPL_RS_Anf_abkuppeln := FALSE; 
   RPT.RPL_RS_RM_abgekuppelt := FALSE; 
   RPT.HM_PI_RS_Anf_ankuppeln := FALSE; 
   RPT.HM_PI_RS_Anf_abkuppeln := FALSE; 
   RPT.Anf_schliessen_PS := FALSE; 
   RPT.VSM_RS_Freigabe := FALSE; 
   RPT.f9 := FALSE; 
   RPT.HM_PI_RPL := FALSE; 
   HAWE_alt.an.SK1_St1_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK1_St2_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK1_St3_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK1_St4_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK2_St1_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK2_St2_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK2_St3_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK2_St4_P_Vorgabe := W#16#0; 
   HAWE_alt.an.SK1_St1_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK1_St1_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK1_St1_Bef_spannen := FALSE; 
   HAWE_alt.an.SK1_St1_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK1_St1_ABST_SPH := FALSE; 
   HAWE_alt.an.SK1_St1_res1 := FALSE; 
   HAWE_alt.an.SK1_St1_res2 := FALSE; 
   HAWE_alt.an.SK1_St1_res3 := FALSE; 
   HAWE_alt.an.SK1_St2_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK1_St2_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK1_St2_Bef_spannen := FALSE; 
   HAWE_alt.an.SK1_St2_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK1_St2_ABST_SPH := FALSE; 
   HAWE_alt.an.SK1_St2_res1 := FALSE; 
   HAWE_alt.an.SK1_St2_res2 := FALSE; 
   HAWE_alt.an.SK1_St2_res3 := FALSE; 
   HAWE_alt.an.SK1_St3_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK1_St3_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK1_St3_Bef_spannen := FALSE; 
   HAWE_alt.an.SK1_St3_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK1_St3_ABST_SPH := FALSE; 
   HAWE_alt.an.SK1_St3_res1 := FALSE; 
   HAWE_alt.an.SK1_St3_res2 := FALSE; 
   HAWE_alt.an.SK1_St3_res3 := FALSE; 
   HAWE_alt.an.SK1_St4_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK1_St4_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK1_St4_Bef_spannen := FALSE; 
   HAWE_alt.an.SK1_St4_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK1_St4_ABST_SPH := FALSE; 
   HAWE_alt.an.SK1_St4_res1 := FALSE; 
   HAWE_alt.an.SK1_St4_res2 := FALSE; 
   HAWE_alt.an.SK1_St4_res3 := FALSE; 
   HAWE_alt.an.SK2_St1_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK2_St1_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK2_St1_Bef_spannen := FALSE; 
   HAWE_alt.an.SK2_St1_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK2_St1_ABST_SPH := FALSE; 
   HAWE_alt.an.SK2_St1_res1 := FALSE; 
   HAWE_alt.an.SK2_St1_res2 := FALSE; 
   HAWE_alt.an.SK2_St1_res3 := FALSE; 
   HAWE_alt.an.SK2_St2_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK2_St2_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK2_St2_Bef_spannen := FALSE; 
   HAWE_alt.an.SK2_St2_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK2_St2_ABST_SPH := FALSE; 
   HAWE_alt.an.SK2_St2_res1 := FALSE; 
   HAWE_alt.an.SK2_St2_res2 := FALSE; 
   HAWE_alt.an.SK2_St2_res3 := FALSE; 
   HAWE_alt.an.SK2_St3_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK2_St3_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK2_St3_Bef_spannen := FALSE; 
   HAWE_alt.an.SK2_St3_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK2_St3_ABST_SPH := FALSE; 
   HAWE_alt.an.SK2_St3_res1 := FALSE; 
   HAWE_alt.an.SK2_St3_res2 := FALSE; 
   HAWE_alt.an.SK2_St3_res3 := FALSE; 
   HAWE_alt.an.SK2_St4_Bef_entspannen := FALSE; 
   HAWE_alt.an.SK2_St4_Bef_Druck_0 := FALSE; 
   HAWE_alt.an.SK2_St4_Bef_spannen := FALSE; 
   HAWE_alt.an.SK2_St4_Meldung_NOTAUS := FALSE; 
   HAWE_alt.an.SK2_St4_ABST_SPH := FALSE; 
   HAWE_alt.an.SK2_St4_res1 := FALSE; 
   HAWE_alt.an.SK2_St4_res2 := FALSE; 
   HAWE_alt.an.SK2_St4_res3 := FALSE; 
   HAWE_alt.an.SpFkt_Bef_ankuppeln := FALSE; 
   HAWE_alt.an.SpFkt_Bef_abkuppeln := FALSE; 
   HAWE_alt.an.SpFkt_res1 := FALSE; 
   HAWE_alt.an.SpFkt_res2 := FALSE; 
   HAWE_alt.an.SpFkt_res3 := FALSE; 
   HAWE_alt.an.SpFkt_res4 := FALSE; 
   HAWE_alt.an.SpFkt_res5 := FALSE; 
   HAWE_alt.an.SpFkt_res6 := FALSE; 
   HAWE_alt.an.DIAG_SK1_Bef_TEACH_IN := FALSE; 
   HAWE_alt.an.DIAG_SK2_Bef_TEACH_IN := FALSE; 
   HAWE_alt.an.frei_11 := FALSE; 
   HAWE_alt.an.frei_12 := FALSE; 
   HAWE_alt.an.frei_13 := FALSE; 
   HAWE_alt.an.frei_14 := FALSE; 
   HAWE_alt.an.frei_15 := FALSE; 
   HAWE_alt.an.DIAG_Lebenszeichen := FALSE; 
   HAWE_alt.an.Delta_P1_Druck_erreicht := B#16#0; 
   HAWE_alt.an.Delta_P2_Nachregeln := B#16#0; 
   HAWE_alt.an.Delta_P3_NOTAUS := B#16#0; 
   HAWE_alt.an.P1_Delta_Steuerung := B#16#0; 
   HAWE_alt.an.P2_Delta_Regelung := B#16#0; 
   HAWE_alt.an.P3_Loesedruck := B#16#0; 
   HAWE_alt.an.P4_Druck_RV_oeffnen := B#16#0; 
   HAWE_alt.an.T1_Spannen_verzoegert := B#16#0; 
   HAWE_alt.an.T2_Laufzeit_RV_oeffnen := B#16#0; 
   HAWE_alt.an.reserve := B#16#0; 
   HAWE_alt.von.SK1_St1_P_Druck := 0; 
   HAWE_alt.von.SK1_St2_P_Druck := 0; 
   HAWE_alt.von.SK1_St3_P_Druck := 0; 
   HAWE_alt.von.SK1_St4_P_Druck := 0; 
   HAWE_alt.von.SK2_St1_P_Druck := 0; 
   HAWE_alt.von.SK2_St2_P_Druck := 0; 
   HAWE_alt.von.SK2_St3_P_Druck := 0; 
   HAWE_alt.von.SK2_St4_P_Druck := 0; 
   HAWE_alt.von.SK1_St1_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK1_St1_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK1_St1_gespannt := FALSE; 
   HAWE_alt.von.SK1_St1_NOTAUS := FALSE; 
   HAWE_alt.von.SK1_St1_Kabelbruch := FALSE; 
   HAWE_alt.von.SK1_St1_FM_Regelung := FALSE; 
   HAWE_alt.von.SK1_St1_res2 := FALSE; 
   HAWE_alt.von.SK1_St1_res3 := FALSE; 
   HAWE_alt.von.SK1_St2_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK1_St2_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK1_St2_gespannt := FALSE; 
   HAWE_alt.von.SK1_St2_NOTAUS := FALSE; 
   HAWE_alt.von.SK1_St2_Kabelbruch := FALSE; 
   HAWE_alt.von.SK1_St2_FM_Regelung := FALSE; 
   HAWE_alt.von.SK1_St2_res2 := FALSE; 
   HAWE_alt.von.SK1_St2_res3 := FALSE; 
   HAWE_alt.von.SK1_St3_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK1_St3_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK1_St3_gespannt := FALSE; 
   HAWE_alt.von.SK1_St3_NOTAUS := FALSE; 
   HAWE_alt.von.SK1_St3_Kabelbruch := FALSE; 
   HAWE_alt.von.SK1_St3_FM_Regelung := FALSE; 
   HAWE_alt.von.SK1_St3_res2 := FALSE; 
   HAWE_alt.von.SK1_St3_res3 := FALSE; 
   HAWE_alt.von.SK1_St4_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK1_St4_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK1_St4_gespannt := FALSE; 
   HAWE_alt.von.SK1_St4_NOTAUS := FALSE; 
   HAWE_alt.von.SK1_St4_Kabelbruch := FALSE; 
   HAWE_alt.von.SK1_St4_FM_Regelung := FALSE; 
   HAWE_alt.von.SK1_St4_res2 := FALSE; 
   HAWE_alt.von.SK1_St4_res3 := FALSE; 
   HAWE_alt.von.SK2_St1_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK2_St1_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK2_St1_gespannt := FALSE; 
   HAWE_alt.von.SK2_St1_NOTAUS := FALSE; 
   HAWE_alt.von.SK2_St1_Kabelbruch := FALSE; 
   HAWE_alt.von.SK2_St1_FM_Regelung := FALSE; 
   HAWE_alt.von.SK2_St1_res2 := FALSE; 
   HAWE_alt.von.SK2_St1_res3 := FALSE; 
   HAWE_alt.von.SK2_St2_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK2_St2_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK2_St2_gespannt := FALSE; 
   HAWE_alt.von.SK2_St2_NOTAUS := FALSE; 
   HAWE_alt.von.SK2_St2_Kabelbruch := FALSE; 
   HAWE_alt.von.SK2_St2_FM_Regelung := FALSE; 
   HAWE_alt.von.SK2_St2_res2 := FALSE; 
   HAWE_alt.von.SK2_St2_res3 := FALSE; 
   HAWE_alt.von.SK2_St3_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK2_St3_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK2_St3_gespannt := FALSE; 
   HAWE_alt.von.SK2_St3_NOTAUS := FALSE; 
   HAWE_alt.von.SK2_St3_Kabelbruch := FALSE; 
   HAWE_alt.von.SK2_St3_FM_Regelung := FALSE; 
   HAWE_alt.von.SK2_St3_res2 := FALSE; 
   HAWE_alt.von.SK2_St3_res3 := FALSE; 
   HAWE_alt.von.SK2_St4_Entspannen_aktiv := FALSE; 
   HAWE_alt.von.SK2_St4_Druck_ist_0 := FALSE; 
   HAWE_alt.von.SK2_St4_gespannt := FALSE; 
   HAWE_alt.von.SK2_St4_NOTAUS := FALSE; 
   HAWE_alt.von.SK2_St4_Kabelbruch := FALSE; 
   HAWE_alt.von.SK2_St4_FM_Regelung := FALSE; 
   HAWE_alt.von.SK2_St4_res2 := FALSE; 
   HAWE_alt.von.SK2_St4_res3 := FALSE; 
   HAWE_alt.von.DIAG_Software_Stand := B#16#0; 
   HAWE_alt.von.DIAG_SK1_TEACH_IN_laeuft := FALSE; 
   HAWE_alt.von.DIAG_SK1_TEACH_IN_nOK := FALSE; 
   HAWE_alt.von.DIAG_SK1_PROP_Kabelbruch := FALSE; 
   HAWE_alt.von.DIAG_SK2_TEACH_IN_laeuft := FALSE; 
   HAWE_alt.von.DIAG_SK2_TEACH_IN_nOK := FALSE; 
   HAWE_alt.von.DIAG_SK2_PROP_Kabelbruch := FALSE; 
   HAWE_alt.von.DIAG_res := FALSE; 
   HAWE_alt.von.DIAG_Lebenszeichen := FALSE; 
   vonROB.Bef_St1_spannen := FALSE; 
   vonROB.Bef_St1_entspannen := FALSE; 
   vonROB.Bef_St2_spannen := FALSE; 
   vonROB.Bef_St2_entspannen := FALSE; 
   vonROB.Bef_RP_spuelen := FALSE; 
   vonROB.Bef_RP_abblasen := FALSE; 
   vonROB.Bef_RPT_oeffnen := FALSE; 
   vonROB.Bef_RPT_schliessen := FALSE; 
   vonROB.Bef_PW_FG := FALSE; 
   vonROB.Bef_RPAX_positionieren := FALSE; 
   vonROB.Bef_St3_spannen := FALSE; 
   vonROB.Bef_St3_entspannen := FALSE; 
   vonROB.Bef_St4_spannen := FALSE; 
   vonROB.Bef_St4_entspannen := FALSE; 
   vonROB.PI_spannen := FALSE; 
   vonROB.PI_entspannen := FALSE; 
   anROB.res1 := FALSE; 
   anROB.res11 := FALSE; 
   anROB.res12 := FALSE; 
   anROB.res13 := FALSE; 
   anROB.res14 := FALSE; 
   anROB.res15 := FALSE; 
   anROB.res16 := FALSE; 
   anROB.res17 := FALSE; 
   anROB.res18 := FALSE; 
   anROB.res19 := FALSE; 
   anROB.res110 := FALSE; 
   anROB.res111 := FALSE; 
   anROB.res112 := FALSE; 
   anROB.res113 := FALSE; 
   anROB.res114 := FALSE; 
   anROB.res115 := FALSE; 
   PalV_temp.KONF_St1_P_Vorgabe := B#16#0; 
   PalV_temp.KONF_St1_Entspannzeit := B#16#0; 
   PalV_temp.KONF_St2_P_Vorgabe := B#16#0; 
   PalV_temp.KONF_St2_Entspannzeit := B#16#0; 
   PalV_temp.KONF_St3_P_Vorgabe := B#16#0; 
   PalV_temp.KONF_St3_Entspannzeit := B#16#0; 
   PalV_temp.KONF_St4_P_Vorgabe := B#16#0; 
   PalV_temp.KONF_St4_Entspannzeit := B#16#0; 
   PalV_temp.KONF_St1_mitSPH := FALSE; 
   PalV_temp.KONF_St1_CTRL_spannen := FALSE; 
   PalV_temp.KONF_St1_CTRL_entspannen := FALSE; 
   PalV_temp.KONF_St1_Freigabe := FALSE; 
   PalV_temp.KONF_St1 := FALSE; 
   PalV_temp.KONF_St2_mitSPH := FALSE; 
   PalV_temp.KONF_St2_CTRL_spannen := FALSE; 
   PalV_temp.KONF_St2_CTRL_entspannen := FALSE; 
   PalV_temp.KONF_St2_POSauswertung := FALSE; 
   PalV_temp.KONF_St2_PWFG := FALSE; 
   PalV_temp.KONF_St3_mitSPH := FALSE; 
   PalV_temp.KONF_St3_CTRL_spannen := FALSE; 
   PalV_temp.KONF_St3_CTRL_entspannen := FALSE; 
   PalV_temp.KONF_St3_Freigabe := FALSE; 
   PalV_temp.KONF_St3 := FALSE; 
   PalV_temp.KONF_St4_mitSPH := FALSE; 
   PalV_temp.KONF_St4_CTRL_spannen := FALSE; 
   PalV_temp.KONF_St4_CTRL_entspannen := FALSE; 
   PalV_temp.KONF_St4_Freigabe := FALSE; 
   PalV_temp.KONF_St4 := FALSE; 
   PalV_temp.KONF_SpH_Federkraft := FALSE; 
   PalV_temp.KONF_res1 := FALSE; 
   PalV_temp.KONF_res2 := FALSE; 
   PalV_temp.KONF_res3 := FALSE; 
   PalV_temp.STAT_St1_gespannt := FALSE; 
   PalV_temp.STAT_St1_entspannt := FALSE; 
   PalV_temp.STAT_St2_gespannt := FALSE; 
   PalV_temp.STAT_St2_entspannt := FALSE; 
   PalV_temp.STAT_St3_gespannt := FALSE; 
   PalV_temp.STAT_St3_entspannt := FALSE; 
   PalV_temp.STAT_St4_gespannt := FALSE; 
   PalV_temp.STAT_St4_entspannt := FALSE; 
   SpH_Istwerte.SK1_Stelle_1 := B#16#0; 
   SpH_Istwerte.SK1_Stelle_2 := B#16#0; 
   SpH_Istwerte.SK1_Stelle_3 := B#16#0; 
   SpH_Istwerte.SK1_Stelle_4 := B#16#0; 
   SpH_Istwerte.SK2_Stelle_1 := B#16#0; 
   SpH_Istwerte.SK2_Stelle_2 := B#16#0; 
   SpH_Istwerte.SK2_Stelle_3 := B#16#0; 
   SpH_Istwerte.SK2_Stelle_4 := B#16#0; 
   frei_1.frei[166] := B#16#0; 
   frei_1.frei[167] := B#16#0; 
   frei_1.frei[168] := B#16#0; 
   frei_1.frei[169] := B#16#0; 
   frei_1.frei[170] := B#16#0; 
   frei_1.frei[171] := B#16#0; 
   frei_1.frei[172] := B#16#0; 
   frei_1.frei[173] := B#16#0; 
   frei_1.frei[174] := B#16#0; 
   frei_1.frei[175] := B#16#0; 
   frei_1.frei[176] := B#16#0; 
   frei_1.frei[177] := B#16#0; 
   frei_1.frei[178] := B#16#0; 
   frei_1.frei[179] := B#16#0; 
   frei_1.frei[180] := B#16#0; 
   frei_1.frei[181] := B#16#0; 
   frei_1.frei[182] := B#16#0; 
   frei_1.frei[183] := B#16#0; 
   frei_1.frei[184] := B#16#0; 
   frei_1.frei[185] := B#16#0; 
   frei_1.frei[186] := B#16#0; 
   frei_1.frei[187] := B#16#0; 
   frei_1.frei[188] := B#16#0; 
   frei_1.frei[189] := B#16#0; 
   frei_1.frei[190] := B#16#0; 
   frei_1.frei[191] := B#16#0; 
   frei_1.frei[192] := B#16#0; 
   frei_1.frei[193] := B#16#0; 
   SpH.SK1_TeachIn_aktivieren := FALSE; 
   SpH.SK2_TeachIn_aktivieren := FALSE; 
   SpH.kein_OVR_ist_0_St1 := FALSE; 
   SpH.kein_OVR_ist_0_St2 := FALSE; 
   SpH.kein_OVR_ist_0_St3 := FALSE; 
   SpH.kein_OVR_ist_0_St4 := FALSE; 
   SpH.HM_PI_T_Stelle_1 := FALSE; 
   SpH.HM_PI_T_Stelle_2 := FALSE; 
   SpH.HM_PI_T_Stelle_3 := FALSE; 
   SpH.HM_PI_T_Stelle_4 := FALSE; 
   SpH.P_SK2_St1_nachPW_fehlt := FALSE; 
   SpH.P_SK2_St2_nachPW_fehlt := FALSE; 
   SpH.P_SK2_St3_nachPW_fehlt := FALSE; 
   SpH.P_SK2_St4_nachPW_fehlt := FALSE; 
   SpH.H31_Bef_entspannen := FALSE; 
   SpH.H32_Bef_entspannen := FALSE; 
   SpH.H33_Bef_entspannen := FALSE; 
   SpH.H34_Bef_entspannen := FALSE; 
   SpH.HM_PI_Res_RPSt1_gespannt := FALSE; 
   SpH.HM_PI_Res_RPSt2_gespannt := FALSE; 
   SpH.HM_PI_Res_RPSt3_gespannt := FALSE; 
   SpH.HM_PI_Res_RPSt4_gespannt := FALSE; 
   SpH.HMI_SpH_Ruestplatz := FALSE; 
   SpH.HMI_SpH_Arbeitsraum := FALSE; 
   SpH.HM_PI_RP_gespannt := FALSE; 
   SpH.HM_PI_T_Spannen := FALSE; 
   SpH.HM_PI_RP_entspannt := FALSE; 
   SpH.HM_PI_T_Entspannen := FALSE; 
   SpH.VS_SP_SpH := FALSE; 
   SpH.PI_PW_DataChange := FALSE; 
   SpH.HM_PI_PWFG_ausloesen := FALSE; 
   SpH.HM_PI_Takt := FALSE; 
   SpH.RP_Stelle_1_aktiviert := FALSE; 
   SpH.RP_Stelle_2_aktiviert := FALSE; 
   SpH.RP_Stelle_3_aktiviert := FALSE; 
   SpH.RP_Stelle_4_aktiviert := FALSE; 
   SpH.FM_Lebenszeichen := FALSE; 
   SpH.HM_NI_HMI_Arbeitsraum := FALSE; 
   SpH.SPH_Pumpe_ist_ein := FALSE; 
   SpH.HMI_SpH_PW3 := FALSE; 
   SpH.G01_vorzeitig_zulassen := FALSE; 
   SpH.HM_PI_T_ROB_Spannen := FALSE; 
   SpH.HM_PI_T_ROB_Entspannen := FALSE; 
   SpH.RPL_St1_Taste_aktiviert := FALSE; 
   SpH.RPL_St2_Taste_aktiviert := FALSE; 
   SpH.RPL_St3_Taste_aktiviert := FALSE; 
   SpH.RPL_St4_Taste_aktiviert := FALSE; 
   SpH.HM_NI_Leerpalette := FALSE; 
   SpH.MA_St1_Psoll_Vorgabe := B#16#0; 
   SpH.MA_St2_Psoll_Vorgabe := B#16#0; 
   SpH.MA_St3_Psoll_Vorgabe := B#16#0; 
   SpH.MA_St4_Psoll_Vorgabe := B#16#0; 
   SpH.HMI_P_Vorgabe_SK2St1_alt := B#16#0; 
   SpH.HMI_P_Vorgabe_SK2St2_alt := B#16#0; 
   SpH.HMI_P_Vorgabe_SK2St3_alt := B#16#0; 
   SpH.HMI_P_Vorgabe_SK2St4_alt := B#16#0; 
   SpH.HMI.Zeile_0_aktiviert := FALSE; 
   SpH.HMI.Zeile_1_aktiviert := FALSE; 
   SpH.HMI.Zeile_2_aktiviert := FALSE; 
   SpH.HMI.Zeile_3_aktiviert := FALSE; 
   SpH.HMI.Zeile_4_aktiviert := FALSE; 
   SpH.HMI.Zeile_5_aktiviert := FALSE; 
   SpH.HMI.Zeile_6_aktiviert := FALSE; 
   SpH.HMI.Zeile_7_aktiviert := FALSE; 
   SpH.PROFIBUS_IN_ADR := 430; 
   SpH.PROFIBUS_OUT_ADR := 430; 
   SpH.FM_MPL_PROP_Kabelbruch := FALSE; 
   SpH.FM_RPL_PROP_Kabelbruch := FALSE; 
   SpH.RPL_Element_VorrNachCtrl := FALSE; 
   SpH.RPL_NachCtrl_aktiv := FALSE; 
   SpH.RPL_NachCtrl_ein := FALSE; 
   SpH.MPL_TYP_3 := FALSE; 
   SpH.frei_214_06 := FALSE; 
   SpH.frei_214_07 := FALSE; 
   SpH.HM_RPL_Status_LeerPal := FALSE; 
   SpH.M_PWFG_schon_aktiv := FALSE; 
   SpH.M_Aktor_PWFG_ausloesen := FALSE; 
   SpH.HM_PI_PWFG_aktiv := FALSE; 
   SpH.M_RPL_Status_LeerPal := FALSE; 
   SpH.frei_215_05 := FALSE; 
   SpH.frei_215_06 := FALSE; 
   SpH.frei_215_07 := FALSE; 
   SpH.ZM_RPL_ST1_aktiviert := FALSE; 
   SpH.ZM_RPL_ST2_aktiviert := FALSE; 
   SpH.ZM_RPL_ST3_aktiviert := FALSE; 
   SpH.ZM_RPL_ST4_aktiviert := FALSE; 
   SpH.frei_216_04 := FALSE; 
   SpH.frei_216_05 := FALSE; 
   SpH.frei_216_06 := FALSE; 
   SpH.frei_216_07 := FALSE; 
   SpH.frei_217_00 := FALSE; 
   SpH.frei_217_01 := FALSE; 
   SpH.frei_217_02 := FALSE; 
   SpH.frei_217_03 := FALSE; 
   SpH.frei_217_04 := FALSE; 
   SpH.frei_217_05 := FALSE; 
   SpH.frei_217_06 := FALSE; 
   SpH.frei_217_07 := FALSE; 
   ABST.HL_Reihe := TRUE; 
   ABST.IKZ_Durchfluss := FALSE; 
   ABST.SpannHydraulik := FALSE; 
   ABST.Automatische_RPT := FALSE; 
   ABST.RP_mit_Achse := FALSE; 
   ABST.SP_bei_offener_RPT := FALSE; 
   ABST.SP_MPL_Kuppeln := FALSE; 
   ABST.SP_nur_RPL := FALSE; 
   ABST.SP_ProfiBus_aus := FALSE; 
   ABST.SP_ext_Nullpunktspannsys := FALSE; 
   ABST.SP_ohne_KupplungKlemmung := FALSE; 
   ABST.SP_SA_MTU := FALSE; 
   ABST.SP_ohnePROP := FALSE; 
   ABST.SP_ohnePW_OFFEN_Tuer := FALSE; 
   ABST.SP_ohnePW_ZU_Tuer := FALSE; 
   ABST.SP_FD := FALSE; 
   ABST.DS_Software := FALSE; 
   ABST.SP_FD_ohne_PROP := FALSE; 
   ABST.ABST[222] := B#16#0; 
   ABST.ABST[223] := B#16#0; 
   ABST.ABST[224] := B#16#0; 
   ABST.ABST[225] := B#16#0; 
   ABST.ABST[226] := B#16#0; 
   ABST.ABST[227] := B#16#0; 
   ABST.ABST[228] := B#16#0; 
   ABST.ABST[229] := B#16#0; 
   IKZ_Zeiten.Anlauf := B#16#5; 
   IKZ_Zeiten.Betrieb := B#16#A; 
   IKZ_Zeiten.Aus := B#16#14; 
   IKZ_Zeiten.frei_11 := B#16#0; 
   IKZ_Zeiten.maxEinbruch_G1 := DW#16#0; 
   IKZ_Zeiten.frei_13 := B#16#0; 
   IKZ_Zeiten.frei_14 := B#16#0; 
   CS_SW.Anf_RPT_entriegeln := FALSE; 
   CS_SW.HM_PI_SpH_Aggregat_ein := FALSE; 
   CS_SW.frei[242] := B#16#0; 
   CS_SW.frei[243] := B#16#0; 
   CS_SW.frei[244] := B#16#0; 
   CS_SW.frei[245] := B#16#0; 
   CS_SW.frei[246] := B#16#0; 
   CS_SW.frei[247] := B#16#0; 
   CS_SW.frei[248] := B#16#0; 
   CS_SW.frei[249] := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_1_RPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_1_RPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_2_RPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_2_RPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_3_RPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_3_RPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_4_RPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_4_RPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_1_MPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_1_MPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_2_MPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_2_MPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_3_MPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_3_MPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_4_MPL_H := B#16#0; 
   PBanHAWE_alt.OB_SP_P_SOLL_ST_4_MPL_L := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_1_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_2_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_3_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_4_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_1_MPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_2_MPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_3_MPL := B#16#0; 
   PBanHAWE_alt.OB_SP_STATE_ST_4_MPL := B#16#0; 
   PBanHAWE_alt.OB_SP_FUNKTION_MPL_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_DIAGNOSE_MPL_RPL := B#16#0; 
   PBanHAWE_alt.OB_SP_P_TOL_DRUCH_ERREIC := B#16#0; 
   PBanHAWE_alt.OB_SP_P_TOL_NACHREGELN := B#16#0; 
   PBanHAWE_alt.OB_SP_P_TOL_NOTAUS := B#16#0; 
   PBanHAWE_alt.OB_SP_DELTA_STEUERUNG := B#16#0; 
   PBanHAWE_alt.OB_SP_DELTA_REGELUNG := B#16#0; 
   PBanHAWE_alt.OB_SP_P_LOESEDRUCK := B#16#0; 
   PBanHAWE_alt.OB_SP_P_DRUCK_RV_OEFFNEN := B#16#0; 
   PBanHAWE_alt.OB_SP_P_T_VERZ_SPANNEN := B#16#0; 
   PBanHAWE_alt.OB_SP_P_T_RV_OEFFNEN := B#16#0; 
   PBanHAWE_alt.OB_reserve := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_1_RPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_1_RPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_2_RPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_2_RPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_3_RPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_3_RPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_4_RPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_4_RPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_1_MPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_1_MPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_2_MPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_2_MPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_3_MPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_3_MPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_4_MPL_H := B#16#0; 
   PBvonHAWE_alt.IB_SP_P_IST_ST_4_MPL_L := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_1_RPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_2_RPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_3_RPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_4_RPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_1_MPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_2_MPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_3_MPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_STATE_ST_4_MPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_DIAGNOSE_MPL_RPL := B#16#0; 
   PBvonHAWE_alt.IB_SP_FUNKTION_MPL_RPL := B#16#0; 
   Allgemein.HM_PI_NPV_aktivieren := FALSE; 
   Allgemein.OVR_100_Prozent := B#16#0; 
   Allgemein.test[314] := B#16#0; 
   Allgemein.test[315] := B#16#0; 
   Allgemein.test[316] := B#16#0; 
   Allgemein.test[317] := B#16#0; 
   Allgemein.test[318] := B#16#0; 
   Allgemein.test[319] := B#16#0; 
   Allgemein.test[320] := B#16#0; 
   Allgemein.test[321] := B#16#0; 
   Allgemein.test[322] := B#16#0; 
   Allgemein.test[323] := B#16#0; 
   Allgemein.test[324] := B#16#0; 
   Allgemein.test[325] := B#16#0; 
   Allgemein.test[326] := B#16#0; 
   Allgemein.test[327] := B#16#0; 
   Allgemein.test[328] := B#16#0; 
   Allgemein.test[329] := B#16#0; 
   Allgemein.test[330] := B#16#0; 
   Allgemein.test[331] := B#16#0; 
   Allgemein.test[332] := B#16#0; 
   Allgemein.test[333] := B#16#0; 
   Allgemein.test[334] := B#16#0; 
   Allgemein.test[335] := B#16#0; 
   Allgemein.test[336] := B#16#0; 
   Allgemein.test[337] := B#16#0; 
   Allgemein.test[338] := B#16#0; 
   Allgemein.test[339] := B#16#0; 
   Allgemein.test[340] := B#16#0; 
   Allgemein.test[341] := B#16#0; 
   Allgemein.test[342] := B#16#0; 
   Allgemein.test[343] := B#16#0; 
   Allgemein.test[344] := B#16#0; 
   Allgemein.test[345] := B#16#0; 
   Allgemein.test[346] := B#16#0; 
   Allgemein.test[347] := B#16#0; 
   Allgemein.test[348] := B#16#0; 
   Allgemein.test[349] := B#16#0; 
   RS.Bef_Ankuppeln := FALSE; 
   RS.Bef_Abkuppeln := FALSE; 
   RS.frei_351 := B#16#0; 
   RS.frei_352 := B#16#0; 
   RS.frei_353 := B#16#0; 
   A_AX.ABST_A_Achsen := FALSE; 
   A_AX.A1_auf_RPL := FALSE; 
   A_AX.frei_354_2 := FALSE; 
   A_AX.Frei_354_3 := FALSE; 
   A_AX.RP_AX_FG_Drehen := FALSE; 
   A_AX.B_AX_FG_Drehen := FALSE; 
   A_AX.Z_AX_FG_ganzer_Bereich := FALSE; 
   A_AX.Z_AX_imBereich_FG_B_AX := FALSE; 
   A_AX.frei_355_0 := FALSE; 
   A_AX.AX_1_mit_Luenette := FALSE; 
   A_AX.AX_1_mit_Pinole := FALSE; 
   A_AX.AX_2_mit_Luenette := FALSE; 
   A_AX.AX_2_mit_Pinole := FALSE; 
   A_AX.AX_1_FUTTER_PNEU := FALSE; 
   A_AX.AX_2_FUTTER_PNEU := FALSE; 
   A_AX.frei_350_7 := FALSE; 
   A_AX.EK_oeffnen_nach_PW := FALSE; 
   A_AX.EK_spannen_mit_PWFREIGAB := FALSE; 
   A_AX.frei_356_2 := FALSE; 
   A_AX.frei_356_3 := FALSE; 
   A_AX.frei_356_4 := FALSE; 
   A_AX.frei_356_5 := FALSE; 
   A_AX.frei_356_6 := FALSE; 
   A_AX.frei_356_7 := FALSE; 
   A_AX.frei_357 := B#16#0; 
   A_AX.frei_358 := B#16#0; 
   A_AX.frei_359 := B#16#0; 
   SPHoPW.RPL_Betrieb_Anwahl := FALSE; 
   SPHoPW.MPL_Betrieb_Anwahl := FALSE; 
   SPHoPW.RPL_Bef_Druck_A := FALSE; 
   SPHoPW.RPL_Bef_Druck_B := FALSE; 
   SPHoPW.RPL_Betrieb_aktiv := FALSE; 
   SPHoPW.MPL_Betrieb_aktiv := FALSE; 
   SPHoPW.frei4 := FALSE; 
   SPHoPW.frei5 := FALSE; 
   SPHoPW.frei6 := FALSE; 
   SPHoPW.frei7 := FALSE; 
   SPHoPW.frei8 := FALSE; 
   SPHoPW.frei9 := FALSE; 
   SPHoPW.frei10 := FALSE; 
   SPHoPW.frei11 := FALSE; 
   SPHoPW.frei12 := FALSE; 
   SPHoPW.frei13 := FALSE; 
   SPHoPW.test[362] := B#16#0; 
   SPHoPW.test[363] := B#16#0; 
   SPHoPW.test[364] := B#16#0; 
   SPHoPW.test[365] := B#16#0; 
   SPHoPW.test[366] := B#16#0; 
   SPHoPW.test[367] := B#16#0; 
   SPHoPW.test[368] := B#16#0; 
   SPHoPW.test[369] := B#16#0; 
   SPH_FD.RPL_Istdruck := 0.000000e+000; 
   SPH_FD.MPL_Istdruck := 0.000000e+000; 
   SPH_FD.alte_Vorgabe := 0; 
   SPH_FD.frei_10 := B#16#5; 
   SPH_FD.M_RPL_Spannen := FALSE; 
   SPH_FD.HM_PI_PW_GRST := FALSE; 
   SPH_FD.FP_SPH_MA_entladen := FALSE; 
   SPH_FD.SpF_Schmieren_erf := FALSE; 
   SPH_FD.FP_PW_nicht_aktiv := FALSE; 
   SPH_FD.FP_SPH_Befehl_spannen := FALSE; 
   SPH_FD.M_QUITT_M84 := FALSE; 
   SPH_FD.MPL_spannen_aktivieren := FALSE; 
   SPH_FD.PLC_MPL_ISTdruck_BYTE := B#16#0; 
   SPH_FD.RPL_Element_Vorrichtung := FALSE; 
   SPH_FD.RPL_Element_Spannfutter := FALSE; 
   SPH_FD.MPL_Element_Vorrichtung := FALSE; 
   SPH_FD.MPL_Element_Spannfutter := FALSE; 
   SPH_FD.M63_noPAL_MPL := FALSE; 
   SPH_FD.HM_NI_PW_GRST := FALSE; 
   SPH_FD.T_SpannF_Druckaufbau := B#16#1E; 
   SPH_FD.T_SpannF_Schmierzeit := B#16#A; 
   SPH_FD.T_SpannF_Druckabbau := B#16#3C; 
   SPH_FD.HM_PI_Reset_VSM_RS_FG := FALSE; 
   SPH_FD.HM_PI_FD_NOTBETRIEB := FALSE; 
   SPH_FD.HM_NI_FD_NOTBETRIEB := FALSE; 
   SPH_FD.M_Testbetrieb := FALSE; 
   SPH_FD.HM_NI_MPL_DRUCK_OK_PLC := FALSE; 
   SPH_FD.HM_NI_MPL_DRUCK_OK_HAWE := FALSE; 
   SPH_FD.MPL_DRUCK_OK_HAWE := FALSE; 
   SPH_FD.MPL_DruckCTRL_aktiv := FALSE; 
   SPH_FD.MPL_HAWEBOX_SENSOR := B#16#0; 
   SPH_FD.MPL_HAWEBOX_ABWEICHUNG := B#16#0; 
   SPH_FD.frei := B#16#0; 
   SPH_FD.ZM_MPL_SOLLDRUCK := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[392] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[393] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[394] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[395] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[396] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[397] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[398] := B#16#0; 
   SPH_FD.SPH_FD_reserve.res[399] := B#16#0; 
   SA._29210000323.Aktiv := FALSE; 
   SA._29210000323.SpannenNachEntspannen := FALSE; 
   SA._29210000323.Mit_SonderDruck_Spannen := FALSE; 
   SA._29210000323.I_Vorspannen_aktivieren := FALSE; 
   SA._29210000323.Vorspannen_ist_aktiv := FALSE; 
   SA._29210000323.HM_PI_Druck_OK := FALSE; 
   SA._29210000323.SonderDruck := B#16#64; 
   SA.test[402] := B#16#0; 
   SA.test[403] := B#16#0; 
   SA.test[404] := B#16#0; 
   SA.test[405] := B#16#0; 
   SA.test[406] := B#16#0; 
   SA.test[407] := B#16#0; 
   SA.test[408] := B#16#0; 
   SA.test[409] := B#16#0; 
   SA.test[410] := B#16#0; 
   SA.test[411] := B#16#0; 
   SA.test[412] := B#16#0; 
   SA.test[413] := B#16#0; 
   SA.test[414] := B#16#0; 
   SA.test[415] := B#16#0; 
   SA.test[416] := B#16#0; 
   SA.test[417] := B#16#0; 
   SA.test[418] := B#16#0; 
   SA.test[419] := B#16#0; 
   SA.test[420] := B#16#0; 
   SA.test[421] := B#16#0; 
   SA.test[422] := B#16#0; 
   SA.test[423] := B#16#0; 
   SA.test[424] := B#16#0; 
   SA.test[425] := B#16#0; 
   SA.test[426] := B#16#0; 
   SA.test[427] := B#16#0; 
   SA.test[428] := B#16#0; 
   SA.test[429] := B#16#0; 
   SA.test[430] := B#16#0; 
   SA.test[431] := B#16#0; 
   SA.test[432] := B#16#0; 
   SA.test[433] := B#16#0; 
   SA.test[434] := B#16#0; 
   SA.test[435] := B#16#0; 
   SA.test[436] := B#16#0; 
   SA.test[437] := B#16#0; 
   SA.test[438] := B#16#0; 
   SA.test[439] := B#16#0; 
   SA.test[440] := B#16#0; 
   SA.test[441] := B#16#0; 
   SA.test[442] := B#16#0; 
   SA.test[443] := B#16#0; 
   SA.test[444] := B#16#0; 
   SA.test[445] := B#16#0; 
   SA.test[446] := B#16#0; 
   SA.test[447] := B#16#0; 
   SA.test[448] := B#16#0; 
   SA.test[449] := B#16#0; 
   SA.test[450] := B#16#0; 
   SA.test[451] := B#16#0; 
   SA.test[452] := B#16#0; 
   SA.test[453] := B#16#0; 
   SA.test[454] := B#16#0; 
   SA.test[455] := B#16#0; 
   SA.test[456] := B#16#0; 
   SA.test[457] := B#16#0; 
   SA.test[458] := B#16#0; 
   SA.test[459] := B#16#0; 
   SA.test[460] := B#16#0; 
   SA.test[461] := B#16#0; 
   SA.test[462] := B#16#0; 
   SA.test[463] := B#16#0; 
   SA.test[464] := B#16#0; 
   SA.test[465] := B#16#0; 
   SA.test[466] := B#16#0; 
   SA.test[467] := B#16#0; 
   SA.test[468] := B#16#0; 
   SA.test[469] := B#16#0; 
   SA.test[470] := B#16#0; 
   SA.test[471] := B#16#0; 
   SA.test[472] := B#16#0; 
   SA.test[473] := B#16#0; 
   SA.test[474] := B#16#0; 
   SA.test[475] := B#16#0; 
   SA.test[476] := B#16#0; 
   SA.test[477] := B#16#0; 
   SA.test[478] := B#16#0; 
   SA.test[479] := B#16#0; 
   SA.test[480] := B#16#0; 
   SA.test[481] := B#16#0; 
   SA.test[482] := B#16#0; 
   SA.test[483] := B#16#0; 
   SA.test[484] := B#16#0; 
   SA.test[485] := B#16#0; 
   SA.test[486] := B#16#0; 
   SA.test[487] := B#16#0; 
   SA.test[488] := B#16#0; 
   SA.test[489] := B#16#0; 
   SA.test[490] := B#16#0; 
   SA.test[491] := B#16#0; 
   SA.test[492] := B#16#0; 
   SA.test[493] := B#16#0; 
   SA.test[494] := B#16#0; 
   SA.test[495] := B#16#0; 
   SA.test[496] := B#16#0; 
   SA.test[497] := B#16#0; 
   SA.test[498] := B#16#0; 
   SA.test[499] := B#16#0; 
   FASTEMS.ABST_FASTEMS := FALSE; 
   FASTEMS.DatUeGabe_Fastems := FALSE; 
   FASTEMS.HM_DatUeGabe_Fastems := FALSE; 
   FASTEMS.PI_DatUeGabe_Fastems := FALSE; 
   FASTEMS.RPL_ohneSPH := FALSE; 
   FASTEMS.RPL_DruckVorgabe_0 := FALSE; 
   FASTEMS.RPL_DruckVorgabe_nok := FALSE; 
   FASTEMS.Sperre_PWGF := FALSE; 
   FASTEMS.VorgabeDruck := B#16#0; 
   FASTEMS.alte_PalNr := B#16#0; 
   FASTEMS.FG_PW_Status := FALSE; 
   FASTEMS.test[504] := B#16#0; 
   FASTEMS.test[505] := B#16#0; 
   FASTEMS.test[506] := B#16#0; 
   FASTEMS.test[507] := B#16#0; 
   FASTEMS.test[508] := B#16#0; 
   FASTEMS.test[509] := B#16#0; 
   SPH_DH.PW_Freigabe_VSM := FALSE; 
   SPH_DH.SPANN_STELLE_1_OK := FALSE; 
   SPH_DH.SPANN_STELLE_2_OK := FALSE; 
   SPH_DH.DH_reserve[512] := B#16#0; 
   SPH_DH.DH_reserve[513] := B#16#0; 
   SPH_DH.DH_reserve[514] := B#16#0; 
   SPH_DH.DH_reserve[515] := B#16#0; 
   SPH_DH.DH_reserve[516] := B#16#0; 
   SPH_DH.DH_reserve[517] := B#16#0; 
   SPH_DH.DH_reserve[518] := B#16#0; 
   SPH_DH.DH_reserve[519] := B#16#0; 
   HAWE.an.SK1_St1_P_Vorgabe := W#16#0; 
   HAWE.an.SK1_St2_P_Vorgabe := W#16#0; 
   HAWE.an.SK1_St3_P_Vorgabe := W#16#0; 
   HAWE.an.SK1_St4_P_Vorgabe := W#16#0; 
   HAWE.an.SK2_St1_P_Vorgabe := W#16#0; 
   HAWE.an.SK2_St2_P_Vorgabe := W#16#0; 
   HAWE.an.SK2_St3_P_Vorgabe := W#16#0; 
   HAWE.an.SK2_St4_P_Vorgabe := W#16#0; 
   HAWE.an.SK1_St1_Bef_entspannen := FALSE; 
   HAWE.an.SK1_St1_Bef_Druck_0 := FALSE; 
   HAWE.an.SK1_St1_Bef_spannen := FALSE; 
   HAWE.an.SK1_St1_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK1_St1_ABST_SPH := FALSE; 
   HAWE.an.SK1_St1 := FALSE; 
   HAWE.an.SK1_St1_IB_Y21 := FALSE; 
   HAWE.an.SK1_St1_IB_Y51 := FALSE; 
   HAWE.an.SK1_St2_Bef_entspannen := FALSE; 
   HAWE.an.SK1_St2_Bef_Druck_0 := FALSE; 
   HAWE.an.SK1_St2_Bef_spannen := FALSE; 
   HAWE.an.SK1_St2_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK1_St2_ABST_SPH := FALSE; 
   HAWE.an.SK1_St2 := FALSE; 
   HAWE.an.SK1_St2_IB_Y21 := FALSE; 
   HAWE.an.SK1_St2_IB_Y51 := FALSE; 
   HAWE.an.SK1_St3_Bef_entspannen := FALSE; 
   HAWE.an.SK1_St3_Bef_Druck_0 := FALSE; 
   HAWE.an.SK1_St3_Bef_spannen := FALSE; 
   HAWE.an.SK1_St3_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK1_St3_ABST_SPH := FALSE; 
   HAWE.an.SK1_St3 := FALSE; 
   HAWE.an.SK1_St3_IB_Y21 := FALSE; 
   HAWE.an.SK1_St3_IB_Y51 := FALSE; 
   HAWE.an.SK1_St4_Bef_entspannen := FALSE; 
   HAWE.an.SK1_St4_Bef_Druck_0 := FALSE; 
   HAWE.an.SK1_St4_Bef_spannen := FALSE; 
   HAWE.an.SK1_St4_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK1_St4_ABST_SPH := FALSE; 
   HAWE.an.SK1_St4 := FALSE; 
   HAWE.an.SK1_St4_IB_Y21 := FALSE; 
   HAWE.an.SK1_St4_IB_Y51 := FALSE; 
   HAWE.an.SK2_St1_Bef_entspannen := FALSE; 
   HAWE.an.SK2_St1_Bef_Druck_0 := FALSE; 
   HAWE.an.SK2_St1_Bef_spannen := FALSE; 
   HAWE.an.SK2_St1_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK2_St1_ABST_SPH := FALSE; 
   HAWE.an.SK2_St1 := FALSE; 
   HAWE.an.SK2_St1_IB_Y21 := FALSE; 
   HAWE.an.SK2_St1_IB_Y51 := FALSE; 
   HAWE.an.SK2_St2_Bef_entspannen := FALSE; 
   HAWE.an.SK2_St2_Bef_Druck_0 := FALSE; 
   HAWE.an.SK2_St2_Bef_spannen := FALSE; 
   HAWE.an.SK2_St2_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK2_St2_ABST_SPH := FALSE; 
   HAWE.an.SK2_St2 := FALSE; 
   HAWE.an.SK2_St2_IB_Y21 := FALSE; 
   HAWE.an.SK2_St2_IB_Y51 := FALSE; 
   HAWE.an.SK2_St3_Bef_entspannen := FALSE; 
   HAWE.an.SK2_St3_Bef_Druck_0 := FALSE; 
   HAWE.an.SK2_St3_Bef_spannen := FALSE; 
   HAWE.an.SK2_St3_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK2_St3_ABST_SPH := FALSE; 
   HAWE.an.SK2_St3 := FALSE; 
   HAWE.an.SK2_St3_IB_Y21 := FALSE; 
   HAWE.an.SK2_St3_IB_Y51 := FALSE; 
   HAWE.an.SK2_St4_Bef_entspannen := FALSE; 
   HAWE.an.SK2_St4_Bef_Druck_0 := FALSE; 
   HAWE.an.SK2_St4_Bef_spannen := FALSE; 
   HAWE.an.SK2_St4_Meldung_NOTAUS := FALSE; 
   HAWE.an.SK2_St4_ABST_SPH := FALSE; 
   HAWE.an.SK2_St4 := FALSE; 
   HAWE.an.SK2_St4_IB_Y21 := FALSE; 
   HAWE.an.SK2_St4_IB_Y51 := FALSE; 
   HAWE.an.SpFkt_Bef_ankuppeln := FALSE; 
   HAWE.an.SpFkt_Bef_abkuppeln := FALSE; 
   HAWE.an.SpFkt_res1 := FALSE; 
   HAWE.an.SpFkt_res2 := FALSE; 
   HAWE.an.SpFkt_res3 := FALSE; 
   HAWE.an.SpFkt_res4 := FALSE; 
   HAWE.an.SpFkt_res5 := FALSE; 
   HAWE.an.SpFkt_res6 := FALSE; 
   HAWE.an.DIAG_SK1_Bef_TEACH_IN := FALSE; 
   HAWE.an.DIAG_SK2_Bef_TEACH_IN := FALSE; 
   HAWE.an.DIAG_IB_aktiv := FALSE; 
   HAWE.an.DIAG_IB_PROP_RPL_steuern := FALSE; 
   HAWE.an.DIAG_IB_PROP_MPL_steuern := FALSE; 
   HAWE.an.frei_14 := FALSE; 
   HAWE.an.frei_15 := FALSE; 
   HAWE.an.DIAG_Lebenszeichen := FALSE; 
   HAWE.an.Delta_P1_Druck_erreicht := B#16#0; 
   HAWE.an.Delta_P2_Nachregeln := B#16#0; 
   HAWE.an.Delta_P3_NOTAUS := B#16#0; 
   HAWE.an.P1_Delta_Steuerung := B#16#0; 
   HAWE.an.P2_Delta_Regelung := B#16#0; 
   HAWE.an.P3_Loesedruck := B#16#0; 
   HAWE.an.P4_Druck_RV_oeffnen := B#16#0; 
   HAWE.an.T1_Spannen_verzoegert := B#16#0; 
   HAWE.an.T2_Laufzeit_RV_oeffnen := B#16#0; 
   HAWE.an.P3_Loesedruck_SK2 := B#16#0; 
   HAWE.an.P4_Druck_RV_oeffnen_SK2 := B#16#0; 
   HAWE.an.reserve2 := B#16#0; 
   HAWE.an.SK1_St1_IB_Y31 := FALSE; 
   HAWE.an.SK1_St1_IB_Y61 := FALSE; 
   HAWE.an.SK1_St2_IB_Y31 := FALSE; 
   HAWE.an.SK1_St2_IB_Y61 := FALSE; 
   HAWE.an.SK1_St3_IB_Y31 := FALSE; 
   HAWE.an.SK1_St3_IB_Y61 := FALSE; 
   HAWE.an.SK1_St4_IB_Y31 := FALSE; 
   HAWE.an.SK1_St4_IB_Y61 := FALSE; 
   HAWE.an.SK2_St1_IB_Y31 := FALSE; 
   HAWE.an.SK2_St1_IB_Y61 := FALSE; 
   HAWE.an.SK2_St2_IB_Y31 := FALSE; 
   HAWE.an.SK2_St2_IB_Y61 := FALSE; 
   HAWE.an.SK2_St3_IB_Y31 := FALSE; 
   HAWE.an.SK2_St3_IB_Y61 := FALSE; 
   HAWE.an.SK2_St4_IB_Y31 := FALSE; 
   HAWE.an.SK2_St4_IB_Y61 := FALSE; 
   HAWE.an_Reserve.frei[560] := B#16#0; 
   HAWE.an_Reserve.frei[561] := B#16#0; 
   HAWE.an_Reserve.frei[562] := B#16#0; 
   HAWE.an_Reserve.frei[563] := B#16#0; 
   HAWE.an_Reserve.frei[564] := B#16#0; 
   HAWE.an_Reserve.frei[565] := B#16#0; 
   HAWE.an_Reserve.frei[566] := B#16#0; 
   HAWE.an_Reserve.frei[567] := B#16#0; 
   HAWE.an_Reserve.frei[568] := B#16#0; 
   HAWE.an_Reserve.frei[569] := B#16#0; 
   HAWE.von.SK1_St1_P_Druck := 0; 
   HAWE.von.SK1_St2_P_Druck := 0; 
   HAWE.von.SK1_St3_P_Druck := 0; 
   HAWE.von.SK1_St4_P_Druck := 0; 
   HAWE.von.SK2_St1_P_Druck := 0; 
   HAWE.von.SK2_St2_P_Druck := 0; 
   HAWE.von.SK2_St3_P_Druck := 0; 
   HAWE.von.SK2_St4_P_Druck := 0; 
   HAWE.von.SK1_St1_Entspannen_aktiv := FALSE; 
   HAWE.von.SK1_St1_Druck_ist_0 := FALSE; 
   HAWE.von.SK1_St1_gespannt := FALSE; 
   HAWE.von.SK1_St1_NOTAUS := FALSE; 
   HAWE.von.SK1_St1_Kabelbruch := FALSE; 
   HAWE.von.SK1_St1_FM_Regelung := FALSE; 
   HAWE.von.SK1_St1_res2 := FALSE; 
   HAWE.von.SK1_St1_res3 := FALSE; 
   HAWE.von.SK1_St2_Entspannen_aktiv := FALSE; 
   HAWE.von.SK1_St2_Druck_ist_0 := FALSE; 
   HAWE.von.SK1_St2_gespannt := FALSE; 
   HAWE.von.SK1_St2_NOTAUS := FALSE; 
   HAWE.von.SK1_St2_Kabelbruch := FALSE; 
   HAWE.von.SK1_St2_FM_Regelung := FALSE; 
   HAWE.von.SK1_St2_res2 := FALSE; 
   HAWE.von.SK1_St2_res3 := FALSE; 
   HAWE.von.SK1_St3_Entspannen_aktiv := FALSE; 
   HAWE.von.SK1_St3_Druck_ist_0 := FALSE; 
   HAWE.von.SK1_St3_gespannt := FALSE; 
   HAWE.von.SK1_St3_NOTAUS := FALSE; 
   HAWE.von.SK1_St3_Kabelbruch := FALSE; 
   HAWE.von.SK1_St3_FM_Regelung := FALSE; 
   HAWE.von.SK1_St3_res2 := FALSE; 
   HAWE.von.SK1_St3_res3 := FALSE; 
   HAWE.von.SK1_St4_Entspannen_aktiv := FALSE; 
   HAWE.von.SK1_St4_Druck_ist_0 := FALSE; 
   HAWE.von.SK1_St4_gespannt := FALSE; 
   HAWE.von.SK1_St4_NOTAUS := FALSE; 
   HAWE.von.SK1_St4_Kabelbruch := FALSE; 
   HAWE.von.SK1_St4_FM_Regelung := FALSE; 
   HAWE.von.SK1_St4_res2 := FALSE; 
   HAWE.von.SK1_St4_res3 := FALSE; 
   HAWE.von.SK2_St1_Entspannen_aktiv := FALSE; 
   HAWE.von.SK2_St1_Druck_ist_0 := FALSE; 
   HAWE.von.SK2_St1_gespannt := FALSE; 
   HAWE.von.SK2_St1_NOTAUS := FALSE; 
   HAWE.von.SK2_St1_Kabelbruch := FALSE; 
   HAWE.von.SK2_St1_FM_Regelung := FALSE; 
   HAWE.von.SK2_St1_res2 := FALSE; 
   HAWE.von.SK2_St1_res3 := FALSE; 
   HAWE.von.SK2_St2_Entspannen_aktiv := FALSE; 
   HAWE.von.SK2_St2_Druck_ist_0 := FALSE; 
   HAWE.von.SK2_St2_gespannt := FALSE; 
   HAWE.von.SK2_St2_NOTAUS := FALSE; 
   HAWE.von.SK2_St2_Kabelbruch := FALSE; 
   HAWE.von.SK2_St2_FM_Regelung := FALSE; 
   HAWE.von.SK2_St2_res2 := FALSE; 
   HAWE.von.SK2_St2_res3 := FALSE; 
   HAWE.von.SK2_St3_Entspannen_aktiv := FALSE; 
   HAWE.von.SK2_St3_Druck_ist_0 := FALSE; 
   HAWE.von.SK2_St3_gespannt := FALSE; 
   HAWE.von.SK2_St3_NOTAUS := FALSE; 
   HAWE.von.SK2_St3_Kabelbruch := FALSE; 
   HAWE.von.SK2_St3_FM_Regelung := FALSE; 
   HAWE.von.SK2_St3_res2 := FALSE; 
   HAWE.von.SK2_St3_res3 := FALSE; 
   HAWE.von.SK2_St4_Entspannen_aktiv := FALSE; 
   HAWE.von.SK2_St4_Druck_ist_0 := FALSE; 
   HAWE.von.SK2_St4_gespannt := FALSE; 
   HAWE.von.SK2_St4_NOTAUS := FALSE; 
   HAWE.von.SK2_St4_Kabelbruch := FALSE; 
   HAWE.von.SK2_St4_FM_Regelung := FALSE; 
   HAWE.von.SK2_St4_res2 := FALSE; 
   HAWE.von.SK2_St4_res3 := FALSE; 
   HAWE.von.DIAG_Software_Stand := B#16#0; 
   HAWE.von.DIAG_SK1_TEACH_IN_laeuft := FALSE; 
   HAWE.von.DIAG_SK1_TEACH_IN_nOK := FALSE; 
   HAWE.von.DIAG_SK1_PROP_Kabelbruch := FALSE; 
   HAWE.von.DIAG_SK2_TEACH_IN_laeuft := FALSE; 
   HAWE.von.DIAG_SK2_TEACH_IN_nOK := FALSE; 
   HAWE.von.DIAG_SK2_PROP_Kabelbruch := FALSE; 
   HAWE.von.DIAG_res := FALSE; 
   HAWE.von.DIAG_Lebenszeichen := FALSE; 
   HAWE.von.FD_NOTBETRIEB := FALSE; 
   HAWE.von.FD_frei_1 := FALSE; 
   HAWE.von.FD_frei_2 := FALSE; 
   HAWE.von.FD_FM_RPL := FALSE; 
   HAWE.von.FD_PNOZ_FREIGABE := FALSE; 
   HAWE.von.FD_FM_MPL_1 := FALSE; 
   HAWE.von.FD_FM_MPL_2 := FALSE; 
   HAWE.von.FD_KEIN_DURCHFLUSS := FALSE; 
   HAWE.von.reserve0 := B#16#0; 
   HAWE.von.IB_SK1_St1_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK1_St1_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK1_St1_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK1_St1_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK1_St2_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK1_St2_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK1_St2_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK1_St2_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK1_St3_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK1_St3_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK1_St3_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK1_St3_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK1_St4_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK1_St4_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK1_St4_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK1_St4_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK2_St1_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK2_St1_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK2_St1_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK2_St1_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK2_St2_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK2_St2_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK2_St2_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK2_St2_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK2_St3_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK2_St3_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK2_St3_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK2_St3_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK2_St4_Y21_aktiv := FALSE; 
   HAWE.von.IB_SK2_St4_Y31_aktiv := FALSE; 
   HAWE.von.IB_SK2_St4_Y51_aktiv := FALSE; 
   HAWE.von.IB_SK2_St4_Y61_aktiv := FALSE; 
   HAWE.von.IB_SK1_PROP_STROM := B#16#0; 
   HAWE.von.IB_SK2_PROP_STROM := B#16#0; 
   HAWE.von.SK1_St1_Entspanndruck := B#16#0; 
   HAWE.von.SK1_St2_Entspanndruck := B#16#0; 
   HAWE.von.SK2_St1_Entspanndruck := B#16#0; 
   HAWE.von.SK2_St2_Entspanndruck := B#16#0; 
   HAWE.von.reserve12 := B#16#0; 
   HAWE.von.reserve13 := B#16#0; 
   HAWE.von_Reserve.frei[610] := B#16#0; 
   HAWE.von_Reserve.frei[611] := B#16#0; 
   HAWE.von_Reserve.frei[612] := B#16#0; 
   HAWE.von_Reserve.frei[613] := B#16#0; 
   HAWE.von_Reserve.frei[614] := B#16#0; 
   HAWE.von_Reserve.frei[615] := B#16#0; 
   HAWE.von_Reserve.frei[616] := B#16#0; 
   HAWE.von_Reserve.frei[617] := B#16#0; 
   HAWE.von_Reserve.frei[618] := B#16#0; 
   HAWE.von_Reserve.frei[619] := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_1_RPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_1_RPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_2_RPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_2_RPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_3_RPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_3_RPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_4_RPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_4_RPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_1_MPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_1_MPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_2_MPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_2_MPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_3_MPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_3_MPL_L := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_4_MPL_H := B#16#0; 
   PBanHAWE.OB_SP_P_SOLL_ST_4_MPL_L := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_1_RPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_2_RPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_3_RPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_4_RPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_1_MPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_2_MPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_3_MPL := B#16#0; 
   PBanHAWE.OB_SP_STATE_ST_4_MPL := B#16#0; 
   PBanHAWE.OB_SP_FUNKTION_MPL_RPL := B#16#0; 
   PBanHAWE.OB_SP_DIAGNOSE_MPL_RPL := B#16#0; 
   PBanHAWE.OB_SP_P_TOL_DRUCH_ERREIC := B#16#0; 
   PBanHAWE.OB_SP_P_TOL_NACHREGELN := B#16#0; 
   PBanHAWE.OB_SP_P_TOL_NOTAUS := B#16#0; 
   PBanHAWE.OB_SP_DELTA_STEUERUNG := B#16#0; 
   PBanHAWE.OB_SP_DELTA_REGELUNG := B#16#0; 
   PBanHAWE.OB_SP_P_LOESEDRUCK := B#16#0; 
   PBanHAWE.OB_SP_P_DRUCK_RV_OEFFNEN := B#16#0; 
   PBanHAWE.OB_SP_P_T_VERZ_SPANNEN := B#16#0; 
   PBanHAWE.OB_SP_P_T_RV_OEFFNEN := B#16#0; 
   PBanHAWE.OB_SP_Byte_35 := B#16#0; 
   PBanHAWE.OB_SP_Byte_36 := B#16#0; 
   PBanHAWE.OB_SP_Byte_37 := B#16#0; 
   PBanHAWE.OB_SP_Byte_38 := B#16#0; 
   PBanHAWE.OB_SP_Byte_39 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_40 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_41 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_42 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_43 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_44 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_45 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_46 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_47 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_48 := B#16#0; 
   PBzuHAWE_Erweiterung.OB_SP_Byte_49 := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_1_RPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_1_RPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_2_RPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_2_RPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_3_RPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_3_RPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_4_RPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_4_RPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_1_MPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_1_MPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_2_MPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_2_MPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_3_MPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_3_MPL_L := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_4_MPL_H := B#16#0; 
   PBvonHAWE.IB_SP_P_IST_ST_4_MPL_L := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_1_RPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_2_RPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_3_RPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_4_RPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_1_MPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_2_MPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_3_MPL := B#16#0; 
   PBvonHAWE.IB_SP_STATE_ST_4_MPL := B#16#0; 
   PBvonHAWE.IB_SP_DIAGNOSE_SW := B#16#0; 
   PBvonHAWE.IB_SP_DIAGNOSE_MPL_RPL := B#16#0; 
   PBvonHAWE.IB_SP_FD_INPUTS := B#16#0; 
   PBvonHAWE.IB_SP_reserve1 := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_RPL_1_2 := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_RPL_3_4 := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_MPL_1_2 := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_MPL_3_4 := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_RPL_PROP := B#16#0; 
   PBvonHAWE.IB_SP_DIAG_MPL_PROP := B#16#0; 
   PBvonHAWE.IB_SP_Byte_34 := B#16#0; 
   PBvonHAWE.IB_SP_Byte_35 := B#16#0; 
   PBvonHAWE.IB_SP_Byte_36 := B#16#0; 
   PBvonHAWE.IB_SP_Byte_37 := B#16#0; 
   PBvonHAWE.IB_SP_Byte_38 := B#16#0; 
   PBvonHAWE.IB_SP_Byte_39 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_40 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_41 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_42 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_43 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_44 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_45 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_46 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_47 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_48 := B#16#0; 
   PBvonHAWE_Erweiterung.IB_SP_Byte_49 := B#16#0; 
   SpH_DIAG.HMI_DIAG_RPL_aktiv := FALSE; 
   SpH_DIAG.HMI_DIAG_MPL_aktiv := FALSE; 
   SpH_DIAG.SK1_RPL_DIAGNOSE_aktiv := FALSE; 
   SpH_DIAG.SK2_MPL_DIAGNOSE_aktiv := FALSE; 
   SpH_DIAG.SK1_RPL_PROP_ein := FALSE; 
   SpH_DIAG.SK2_MPL_PROP_ein := FALSE; 
   SpH_DIAG.SK[1].Bef_Steuerung_aktiv := FALSE; 
   SpH_DIAG.SK[1].Y_Steuerung_aktiv := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[1].Stelle[1].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[1].Stelle[2].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[1].Stelle[3].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[1].Stelle[4].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[2].Bef_Steuerung_aktiv := FALSE; 
   SpH_DIAG.SK[2].Y_Steuerung_aktiv := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[2].Stelle[1].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[2].Stelle[2].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[2].Stelle[3].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Y21 := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Y51 := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Y31 := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Y61 := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Spannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Entspannen := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_Druck0 := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Bef_RV_oeffnen := FALSE; 
   SpH_DIAG.SK[2].Stelle[4].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[742] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[743] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[744] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[745] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[746] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[747] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[748] := B#16#0; 
   SpH_DIAG.SpH_DIAG_res[749] := B#16#0; 
   SpH_DIAG_HMI.SK1_RPL_DIAGNOSE_aktiv := FALSE; 
   SpH_DIAG_HMI.SK2_MPL_DIAGNOSE_aktiv := FALSE; 
   SpH_DIAG_HMI.SK1_RPL_PROP_ein := FALSE; 
   SpH_DIAG_HMI.SK2_MPL_PROP_ein := FALSE; 
   SpH_DIAG_HMI.SK[1].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG_HMI.SK[1].Steuerstrom_PROP := B#16#0; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[1].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[2].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[3].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[1].Stelle[4].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[2].Vorgabe_Steuerdruck := B#16#0; 
   SpH_DIAG_HMI.SK[2].Steuerstrom_PROP := B#16#0; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[1].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[2].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[3].IST_Druck := B#16#0; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Spannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Entspannen := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Druck0 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y21_Spannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y31_Entspannen_P := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y51_Spannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y61_Entspannen_T := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].frei1 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Spannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Entspannen_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Bef_Druck0_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y21_Spannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y31_Entspannen_P_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y51_Spannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].Y61_Entspannen_T_RM := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].frei3 := FALSE; 
   SpH_DIAG_HMI.SK[2].Stelle[4].IST_Druck := B#16#0; 
   ROB_Interface.HM_PI_GRST := FALSE; 
   ROB_Interface.HM_PI_SS_Roboter := FALSE; 
   ROB_Interface.PW_Freigabe := FALSE; 
   ROB_Interface.HM_NI_EX_PW_aktiv := FALSE; 
   ROB_Interface.HM_PI_M2 := FALSE; 
   ROB_Interface.HM_PI_M3 := FALSE; 
   ROB_Interface.HM_PI_M4 := FALSE; 
   ROB_Interface.PI_SS_Roboter := FALSE; 
   ROB_Interface.ZM_PW_Freigabe := FALSE; 
   ROB_Interface.HM_PI_PW_Freigabe := FALSE; 
   ROB_Interface.RPL_Nr_9999 := FALSE; 
   ROB_Interface.HM_PI_Rob_entladen_T1 := FALSE; 
   ROB_Interface.HM_PI_Rob_beladen_T1 := FALSE; 
   ROB_Interface.HM_PI_Rob_entladen_T2 := FALSE; 
   ROB_Interface.HM_PI_Rob_beladen_T2 := FALSE; 
   ROB_Interface.WS_TYP_gleich := FALSE; 
   ROB_Interface.Prg_Nr := L#0; 
   ROB_Interface.WS_Nr := L#0; 
   ROB_Interface.HM_PI_ROB_PWFG := FALSE; 
   ROB_Interface.res := B#16#0; 
   ALLG.BYTE_auf_BITS.Bit0 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit1 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit2 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit3 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit4 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit5 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit6 := FALSE; 
   ALLG.BYTE_auf_BITS.Bit7 := FALSE; 
   ALLG.t_INT := 0; 
   ALLG.t_INT1 := 0; 
   ALLG.t_INT2 := 0; 
   ALLG.t_STRING_1 := ''; 
   ALLG.t_STRING_2 := '+'; 
   ALLG.t_DINT := L#0; 
   ALLG.t_DINT1 := L#0; 
   ALLG.t_DINT2 := L#0; 
   ALLG.res[836] := B#16#0; 
   ALLG.res[837] := B#16#0; 
   ALLG.res[838] := B#16#0; 
   ALLG.res[839] := B#16#0; 
   ALLG.res[840] := B#16#0; 
   ALLG.res[841] := B#16#0; 
   ALLG.res[842] := B#16#0; 
   ALLG.res[843] := B#16#0; 
   ALLG.res[844] := B#16#0; 
   ALLG.res[845] := B#16#0; 
   ALLG.res[846] := B#16#0; 
   ALLG.res[847] := B#16#0; 
   ALLG.res[848] := B#16#0; 
   ALLG.res[849] := B#16#0; 
   ALLG.res[850] := B#16#0; 
   ALLG.res[851] := B#16#0; 
   ALLG.res[852] := B#16#0; 
   ALLG.res[853] := B#16#0; 
   ALLG.res[854] := B#16#0; 
   ALLG.res[855] := B#16#0; 
   ALLG.res[856] := B#16#0; 
   ALLG.res[857] := B#16#0; 
   ALLG.res[858] := B#16#0; 
   ALLG.res[859] := B#16#0; 
   ALLG.res[860] := B#16#0; 
   ALLG.res[861] := B#16#0; 
   ALLG.res[862] := B#16#0; 
   ALLG.res[863] := B#16#0; 
   ALLG.res[864] := B#16#0; 
   ALLG.res[865] := B#16#0; 
   ALLG.res[866] := B#16#0; 
   ALLG.res[867] := B#16#0; 
   ALLG.res[868] := B#16#0; 
   ALLG.res[869] := B#16#0; 
   ALLG.res[870] := B#16#0; 
   ALLG.res[871] := B#16#0; 
   ALLG.res[872] := B#16#0; 
   ALLG.res[873] := B#16#0; 
   ALLG.res[874] := B#16#0; 
   ALLG.res[875] := B#16#0; 
   ALLG.res[876] := B#16#0; 
   ALLG.res[877] := B#16#0; 
   ALLG.res[878] := B#16#0; 
   ALLG.res[879] := B#16#0; 
   ALLG.res[880] := B#16#0; 
   ALLG.res[881] := B#16#0; 
   ALLG.res[882] := B#16#0; 
   ALLG.res[883] := B#16#0; 
   ALLG.res[884] := B#16#0; 
   ALLG.res[885] := B#16#0; 
   ALLG.res[886] := B#16#0; 
   ALLG.res[887] := B#16#0; 
   ALLG.res[888] := B#16#0; 
   ALLG.res[889] := B#16#0; 
   ALLG.res[890] := B#16#0; 
   ALLG.res[891] := B#16#0; 
   ALLG.res[892] := B#16#0; 
   ALLG.res[893] := B#16#0; 
   ALLG.res[894] := B#16#0; 
   ALLG.res[895] := B#16#0; 
   ALLG.res[896] := B#16#0; 
   ALLG.res[897] := B#16#0; 
   ALLG.res[898] := B#16#0; 
   ALLG.res[899] := B#16#0; 
   frei[900] := B#16#0; 
   frei[901] := B#16#0; 
   frei[902] := B#16#0; 
   frei[903] := B#16#0; 
   frei[904] := B#16#0; 
   frei[905] := B#16#0; 
   frei[906] := B#16#0; 
   frei[907] := B#16#0; 
   frei[908] := B#16#0; 
   frei[909] := B#16#0; 
   frei[910] := B#16#0; 
   frei[911] := B#16#0; 
   frei[912] := B#16#0; 
   frei[913] := B#16#0; 
   frei[914] := B#16#0; 
   frei[915] := B#16#0; 
   frei[916] := B#16#0; 
   frei[917] := B#16#0; 
   frei[918] := B#16#0; 
   frei[919] := B#16#0; 
   frei[920] := B#16#0; 
   frei[921] := B#16#0; 
   frei[922] := B#16#0; 
   frei[923] := B#16#0; 
   frei[924] := B#16#0; 
   frei[925] := B#16#0; 
   frei[926] := B#16#0; 
   frei[927] := B#16#0; 
   frei[928] := B#16#0; 
   frei[929] := B#16#0; 
   frei[930] := B#16#0; 
   frei[931] := B#16#0; 
   frei[932] := B#16#0; 
   frei[933] := B#16#0; 
   frei[934] := B#16#0; 
   frei[935] := B#16#0; 
   frei[936] := B#16#0; 
   frei[937] := B#16#0; 
   frei[938] := B#16#0; 
   frei[939] := B#16#0; 
   frei[940] := B#16#0; 
   frei[941] := B#16#0; 
   frei[942] := B#16#0; 
   frei[943] := B#16#0; 
   frei[944] := B#16#0; 
   frei[945] := B#16#0; 
   frei[946] := B#16#0; 
   frei[947] := B#16#0; 
   frei[948] := B#16#0; 
   frei[949] := B#16#0; 
   frei[950] := B#16#0; 
   frei[951] := B#16#0; 
   frei[952] := B#16#0; 
   frei[953] := B#16#0; 
   frei[954] := B#16#0; 
   frei[955] := B#16#0; 
   frei[956] := B#16#0; 
   frei[957] := B#16#0; 
   frei[958] := B#16#0; 
   frei[959] := B#16#0; 
   frei[960] := B#16#0; 
   frei[961] := B#16#0; 
   frei[962] := B#16#0; 
   frei[963] := B#16#0; 
   frei[964] := B#16#0; 
   frei[965] := B#16#0; 
   frei[966] := B#16#0; 
   frei[967] := B#16#0; 
   frei[968] := B#16#0; 
   frei[969] := B#16#0; 
   frei[970] := B#16#0; 
   frei[971] := B#16#0; 
   frei[972] := B#16#0; 
   frei[973] := B#16#0; 
   frei[974] := B#16#0; 
   frei[975] := B#16#0; 
   frei[976] := B#16#0; 
   frei[977] := B#16#0; 
   frei[978] := B#16#0; 
   frei[979] := B#16#0; 
   frei[980] := B#16#0; 
   frei[981] := B#16#0; 
   frei[982] := B#16#0; 
   frei[983] := B#16#0; 
   frei[984] := B#16#0; 
   frei[985] := B#16#0; 
   frei[986] := B#16#0; 
   frei[987] := B#16#0; 
   frei[988] := B#16#0; 
   frei[989] := B#16#0; 
   frei[990] := B#16#0; 
   frei[991] := B#16#0; 
   frei[992] := B#16#0; 
   frei[993] := B#16#0; 
   frei[994] := B#16#0; 
   frei[995] := B#16#0; 
   frei[996] := B#16#0; 
   frei[997] := B#16#0; 
   frei[998] := B#16#0; 
   frei[999] := B#16#0; 
END_DATA_BLOCK

