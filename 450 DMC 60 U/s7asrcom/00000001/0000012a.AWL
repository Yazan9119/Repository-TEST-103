FUNCTION_BLOCK "FB_WZ_BRUCH"
TITLE =
//$Revision: 2.22 $
//$Date: 2008/09/26 10:39:21CEST $
//$Author: schmoelp $
VERSION : 0.1


VAR_INPUT
  EX_Ta_NC_Start : BOOL ;	
  E_MagNo : INT ;	
  E_LocNo : INT ;	
END_VAR
VAR
  SX_FN_SKR : BOOL ;	//Flanke Negativ SKR
  SX_VW_ANF : BOOL ;	//Vorwahl Anforderung Messen
  SX_GRF_ANF : BOOL ;	//Greifer Anforderung Messen
  SX_SP_ANF : BOOL ;	//Spindel Anforderung Messen
  SX_ANF_WZ_schreiben : BOOL ;	//Anforderung Sperren WZ
  SX_FERTIG_WZ_schreiben : BOOL ;	//Fertigmeldung Sperren WZ
  SX_FEHLER_WZ_schreiben : BOOL ;	//Fehler Sperren WZ
  SW_GRF_LAENGE : WORD ;	//Greifer Länge 1
  SW_SP_LAENGE : WORD ;	//Spindel Länge 1
  SW_WZ_LAENGE : WORD ;	//Aktueller Messwert
  SX_Laenge : BOOL ;	
  SX_gut : BOOL ;	
  sx_schlecht : BOOL ;	
  Bruch : BOOL ;	
  TM_WZBRUCH_W : "FB_TM_WZBRUCH_W";	
END_VAR
VAR_TEMP
  loc_zw : INT ;	
  ZM_GRF_LAENGE : WORD ;	
  t_int : INT ;	
  laenge_Real : REAL ;	
  dummy : BOOL ;	
  dummy1 : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =Merkerbit mit Wert Null

      U     "m_null"; 
      =     #dummy; 
      =     #dummy1; 
NETWORK
TITLE ="DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH speichern

      U     "M_1_ter_OB1_Zyklus"; 
      SPBNB _001; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      T     "DB_REMANENT".Speicher_Typ_WZB; 
_001: NOP   0; 
NETWORK
TITLE =Anzeige Abwahl Werkzeugbruch von HMI
//Wenn die Werkzeugbruchkontrolle defekt ist kann über HMI die Bruchkontrolle 
//deaktiviert werden.
      U     "m_eins"; 
      =     L     11.0; 
      BLD   103; 
      U     "m_eins"; 
      =     L     11.1; 
      BLD   103; 
      U     "DB_REMANENT".WZB_mechanisch_dekativie; 
      =     L     11.2; 
      BLD   103; 
      UN    "DB_REMANENT".WZB_mechanisch_dekativie; 
      =     L     11.3; 
      BLD   103; 
      U     #dummy1; 
      =     L     11.4; 
      BLD   103; 
      U     #dummy; 
      =     L     11.5; 
      BLD   103; 
      CALL "FC_HMI_IO_TO_TLINE" (
           Freigabe_AST_Hand        := L     11.0,
           Freigabe_GST_Hand        := L     11.1,
           Endlage_AST              := L     11.2,
           Endlage_GST              := L     11.3,
           Ventil_AST               := L     11.4,
           Ventil_GST               := L     11.5,
           Bewegungsnummer          := 158);
      NOP   0; 
NETWORK
TITLE =WZB wurde vom ANwender ausgeblendet

      U     "DB_EINRICHTFUNKTION".Bewegung_158_Minus; 
      S     "DB_REMANENT".WZB_mechanisch_dekativie; 
      U     "DB_EINRICHTFUNKTION".Bewegung_158_Plus; 
      R     "DB_REMANENT".WZB_mechanisch_dekativie; 
      NOP   0; 
NETWORK
TITLE =

      U     "DB_REMANENT".WZB_mechanisch_dekativie; 
      SPBNB _002; 
      L     0; 
      T     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
_002: NOP   0; 
NETWORK
TITLE =

      UN    "DB_REMANENT".WZB_mechanisch_dekativie; 
      SPBNB _003; 
      L     "DB_REMANENT".Speicher_Typ_WZB; 
      T     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
_003: NOP   0; 
NETWORK
TITLE =WZB: Keine Anwahl, Rücksetzen für Neuanwahl

      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      ==I   ; 
      O(    ; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     2; 
      >I    ; 
      )     ; 
      O     "MX_WZB_NeuWahl"; 
      SPBN  STRT; 

      R     "MX_WZB_NeuWahl"; 
      R     #SX_GRF_ANF; 

      L     0; 
      T     #SW_GRF_LAENGE; 

      U     "M_WZB_Anforderung"; 
      S     "M_WZB_Ready"; 
      R     "M_WZB_Anforderung"; 
      L     0; 
      T     "MB_SKZ_WZB"; 
      BE    ; 


NETWORK
TITLE =WZB: Rücksetzen Override auf 0

STRT: U     #EX_Ta_NC_Start; 
      R     "MX_WZB_Ov_0"; 

NETWORK
TITLE =Werkzeugbruch: Werkzeug gebrochen

      U     "DB_NC_PLC".WZW_NC_Aktiv; 
      R     "DB_NC_PLC".WZW_WZ_Bruch; 
      R     "DB_NC_PLC".WZW_WZ_Bruch_Mess_fertig; 

NETWORK
TITLE =Beschreiben der Werkzeugbruchvariablen

      U     "M_Req_write_Bruchdaten"; 
      SPBN  WBVE; 

      R     "M_Req_write_Bruchdaten"; 

      L     "DI_TM_WZBRUCH_R".TC_TPC1; //und WZBruch aktiviert
      L     0.000000e+000; 
      ==R   ; 
      O     ; 
      UN    "DB_DM_M_FUNKTION".MX_M[36]; //M-Funktion für WZB-Warnung ausgeben aktiviert
      UN    "DB_DM_M_FUNKTION".MX_M[37]; //M-Funktion für WZB-Warnung ausgeben aktiviert
      SPB   WBV0; 

      U     "DB_DM_M_FUNKTION".MX_M[36]; //M-Funktion für WZB-Warnung ausgeben aktiviert
      SPB   WBV1; 

      U     "DB_DM_M_FUNKTION".MX_M[37]; //M-Funktion für WZB-Warnung ausgeben aktiviert
      SPB   WBV2; 

WBV0: L     "DI_TM_WZBRUCH_R".TC_TPC1; 
      RND   ; 
      SPA   WBVT; 

// M36, OEM=2
WBV1: U     "m_eins"; 
      R     "DB_DM_M_FUNKTION".MX_M[36]; 
      L     2; //Für dieses WZ nur Warnung ausgeben
      SPA   WBVT; 

// M37, OEM=3
WBV2: U     "m_eins"; 
      R     "DB_DM_M_FUNKTION".MX_M[37]; 
      L     3; //Für dieses WZ Vorschub und Eilgang sperren
WBVT: T     "DB_REMANENT".WZB_GREIFER; 
WBVE: NOP   0; 
NETWORK
TITLE =Umspeichern WZB-Daten: Werkzeug wurde gewechselt

      U     "MX_T_WechselRdy"; 
      SPBN  ST02; 

      R     "MX_T_WechselRdy"; 

      L     "DB_REMANENT".WZB_GREIFER; 
      T     #t_int; 
      L     "DB_REMANENT".WZB_Spindel; 
      T     "DB_REMANENT".WZB_GREIFER; 
      L     #t_int; 
      T     "DB_REMANENT".WZB_Spindel; 

      L     #SW_GRF_LAENGE; 
      T     #ZM_GRF_LAENGE; 

      L     #SW_SP_LAENGE; 
      T     #SW_GRF_LAENGE; 

      L     #ZM_GRF_LAENGE; 
      T     #SW_SP_LAENGE; 

      U     #SX_GRF_ANF; 
      U     #SX_SP_ANF; 
      SPB   E_DT; 

      U     #SX_GRF_ANF; 
      S     #SX_SP_ANF; 
      R     #SX_GRF_ANF; 
      SPB   E_DT; 

      U     #SX_SP_ANF; 
      R     #SX_SP_ANF; 
      S     #SX_GRF_ANF; 
      SPB   E_DT; 

E_DT: NOP   0; 

NETWORK
TITLE =Rücksetzen der Speicher bei SKR

ST02: U     "DB_OEM".OEM_WZW_REttbildaktiv; 
      O     "DB_OEM".OEM_WZW2_Rettbildaktiv; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      FN    #SX_FN_SKR; 
      SPBN  ST03; 

      O     #SX_GRF_ANF; 
      O     #SX_SP_ANF; 
      SPBN  ST03; 

      L     0; 
      T     #SW_GRF_LAENGE; 
      T     #SW_SP_LAENGE; 
      SET   ; 
      R     #SX_GRF_ANF; 
      R     #SX_SP_ANF; 
      R     "M_WZB_Anforderung"; 
      R     "M_WZB_Ready"; 

      S     "DB_FEHLERMELDUNG".Warnung._701862_WZB_Reset; 

NETWORK
TITLE =Reset, Fehler Rücksetzen

ST03: U     "M_Reset_Taste"; 
      R     "DB_FEHLERMELDUNG".Warnung._701863_WZB_FR_MW_0SIG; 
      R     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701200_WZB_MW0; 


      U     "M_Reset_WZW"; 
      U(    ; 
      O     "DB_FEHLERMELDUNG".Warnung._701863_WZB_FR_MW_0SIG; 
      O     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701200_WZB_MW0; 
      )     ; 
      O(    ; 
      U     "DB_OEM".OEM_WZW_REttbildaktiv; 
      O     "DB_OEM".OEM_WZW2_Rettbildaktiv; 
      U     "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      )     ; 
      SPBN  ST04; 

      SET   ; 
      R     "M_WZB_Anforderung"; 
      R     "M_WZB_Ready"; 
      R     "DB_FEHLERMELDUNG".Warnung._701863_WZB_FR_MW_0SIG; 
      R     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701200_WZB_MW0; 
      L     0; 
      T     "MB_SKZ_WZB"; 

// -
// Fehler aufgetreten und der Werkzeugwechsel ist fertig
// -
ST04: U     "MX_WZB_2MW_gr_1MW"; 
      O     "MX_WZB_Toleranz"; 
      SPBN  ST06; 

// Stop auslösen wenn MC=1 und OEM=1 oder 3
// Warnung wenn MC=2 oder OEM=2

      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     2; 
      ==I   ; 
      O(    ; 
      L     "DB_REMANENT".WZB_GREIFER; 
      L     2; 
      ==I   ; 
      )     ; 
      SPB   ST05; 

      U     "MX_WZB_2MW_gr_1MW"; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700862_WZB_2MW_GR_1MW; 

      U     "MX_WZB_Toleranz"; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700863_WZB_TOL_UEBER; 


      U     "MX_WZB_2MW_gr_1MW"; 
      O     "MX_WZB_Toleranz"; 
      S     "Mx_Pal_Stoerung_WZBruch"; 

      UN    "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700862_WZB_2MW_GR_1MW; 
      UN    "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700863_WZB_TOL_UEBER; 
      R     "MX_WZB_Ov_0"; 
      R     "MX_WZB_G0_Sperre"; 

      SPA   ST07; 


ST05: U     "MX_WZB_2MW_gr_1MW"; 
      S     "DB_FEHLERMELDUNG".Warnung._701900_WZB_2MW_GR_1MW; 

      U     "MX_WZB_Toleranz"; 
      S     "DB_FEHLERMELDUNG".Warnung._701901_WZB_TOL_UEBER; 

      U     "MX_WZB_2MW_gr_1MW"; 
      O     "MX_WZB_Toleranz"; 
      S     "Mx_Pal_Stoerung_WZBruch"; 

      SET   ; 
      R     "MX_WZB_Ov_0"; 
      R     "MX_WZB_G0_Sperre"; 

ST07: SET   ; 
      R     "MX_WZB_2MW_gr_1MW"; 
      R     "MX_WZB_Toleranz"; 


ST06: U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".Warnung._701862_WZB_Reset; 
      R     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701202_WZB_2MW_GR_1MW; 
      R     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701203_WZB_TOL_UEBER; 
      R     "DB_FEHLERMELDUNG".Warnung._701900_WZB_2MW_GR_1MW; 
      R     "DB_FEHLERMELDUNG".Warnung._701901_WZB_TOL_UEBER; 
      R     "DB_FEHLERMELDUNG".Warnung._701903_WZB_SCHREIBFEHL; 
      R     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701201_WZB_EXT_GERAET; 

      U     "M_Reset_Taste"; 
      O(    ; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      U(    ; 
      U     "DB_SINRPC".Mode.FLR_unbemannt; 
      U     "DB_HR".FASTEMS.ABST_FASTEMS; 
      O     "MX_Jobbetrieb"; 
      )     ; 
      )     ; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700862_WZB_2MW_GR_1MW; 
      R     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700863_WZB_TOL_UEBER; 

NETWORK
TITLE =Schrittkette WZ Bruch
//
//-
// -- Schritt 0 ----------------------------------------------------------------
//
      L     "MB_SKZ_WZB"; // Schritt 0 ?
      L     0; 
      ==I   ; 
      SPBN  SK01; // Nein => Schritt 1

// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------

      U     "M_MA_Maschine_Ein"; // ohne Steuerspannung gehts nicht weiter
      U     "M_WZB_Anforderung"; 
      SPBN  MEND; 

      SET   ; 
//      R     "DB_NC_PLC".WZW_WZ_Bruch    // Ablöschen Übergabe WZ ist gebrochen
      R     "MX_WZB_Fertig_Lesen"; 


      U     "M_WZB_Messung"; 
      SPB   E002; 

// Erste Messung
      SET   ; 
      R     #SX_GRF_ANF; 

      U     "DI_TM_WZBRUCH_R".EA_WZBRUCH; 
      SPBN  n6z; 
      L     "DI_TM_WZBRUCH_R".TC_DPC5; // kein Messwert dann neu messen
      L     0.000000e+000; 
      <=R   ; 
      S     #SX_GRF_ANF; 
      SPB   n6z; 
      L     "DI_TM_WZBRUCH_R".TC_DPC5; 
      RND   ; 
      T     #SW_GRF_LAENGE; // wenn Messwert vorhanden, diesen laden und nicht das 1.mal messsen
      SET   ; 
      S     #SX_GRF_ANF; 
      SPA   E004; 

n6z:  U     #SX_GRF_ANF; 
      SPB   E003; 
      SPA   E004; 

// Zweite Messung
E002: U     #SX_GRF_ANF; 
      SPB   E003; 
      SPA   E004; 

E003: L     1; // Messung 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 

E004: L     5; //Ende
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 

// -- Schritt 1 ----------------------------------------------------------------

SK01: L     "MB_SKZ_WZB"; // Schritt 1 ?
      L     1; 
      ==I   ; 
      SPBN  SK02; // Nein => Schritt 2

// -----------------------------------------------------------------------------

      SET   ; 
      S     "MX_WZB_Anf_Lesen"; 

// -----------------------------------------------------------------------------

      L     2; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 

// -- Schritt 2 ----------------------------------------------------------------

SK02: L     "MB_SKZ_WZB"; // Schritt 2 ?
      L     2; 
      ==I   ; 
      SPBN  SK03; // Nein => Schritt 3

// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------

      U     "MX_WZB_Fertig_Lesen"; 
      SPBN  MEND; 
      R     "MX_WZB_Fertig_Lesen"; 

      L     3; 
      T     "MB_SKZ_WZB"; 

// -- Schritt 3 ----------------------------------------------------------------

SK03: L     "MB_SKZ_WZB"; // Schritt 3 ?
      L     3; 
      ==I   ; 
      SPBN  SK15; // Nein => Schritt 4

// -----------------------------------------------------------------------------

// Fehlerauswertung Zahl = 0

      L     #SW_WZ_LAENGE; 
      L     0; 
      ==I   ; 
      S     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701200_WZB_MW0; 

// Fehler im ext Gerät

      L     #SW_WZ_LAENGE; 
      U     "DB_PLC_MD_DB20".UDHex._60_Bit0_WZB_lang; 
      SPB   WZBL; 
      L     8192; //2253
      SPA   WZBV; 
WZBL: L     16384; 
WZBV: >=I   ; 
      S     "DB_FEHLERMELDUNG".VSP_Halt_Satzwechsel._701201_WZB_EXT_GERAET; 
      SPB   E046; 

// -----------------------------------------------------------------------------

      U     "DB_ANWENDER_SOFTKEY".Werkzeugbruch._start_messen; //"MX_SKR_WZB_ANF"
      SPB   E043; 

// erste Messung

      U     "M_WZB_Messung"; // bei der ersten Messung wird
      SPB   E042; // der gemessene Wert in Greifer-Länge abgelegt

      L     #SW_WZ_LAENGE; 
      T     #SW_GRF_LAENGE; 
      L     15; 
      T     "MB_SKZ_WZB"; 
      S     #SX_ANF_WZ_schreiben; 
      S     #SX_Laenge; 
      R     #SX_gut; 
      R     #sx_schlecht; 
      SPA   MEND; 


// zweite Messung

E042: L     #SW_WZ_LAENGE; 
      L     #SW_GRF_LAENGE; 
      >=I   ; 
      SPBN  E044; 
// Werkzeug kleiner gleich als bei erster Messung
      -I    ; 
// Überprüfung ob Toleranz überschritten wird
      L     "DB_PLC_MD_DB20".UDInt._115_WZB_TOLERANZ; 
      >=I   ; 
      SPBN  E045; 
// Fehler
      SET   ; 
      S     "MX_WZB_Toleranz"; 
      S     "DB_NC_PLC".WZW_WZ_Bruch; 
      S     #Bruch; 
      SPA   E046; 

// Werkzeug groesser als bei erster Messung
E044: L     #SW_GRF_LAENGE; 
      L     #SW_WZ_LAENGE; 
      -I    ; 
      L     "DB_PLC_MD_DB20".UDInt._115_WZB_TOLERANZ; 
      >=I   ; 
      SPBN  E045; 

      SET   ; 
      S     "DB_NC_PLC".WZW_WZ_Bruch; 
      S     "MX_WZB_2MW_gr_1MW"; 
      S     #Bruch; 

// WZ in der Tabelle sperren
E046: L     6; 
      T     "MB_SKZ_WZB"; //BRUCH
      UN    "M_WZW_Ausw"; 
      SPB   m001; 
      R     #SX_GRF_ANF; //WzBruchKtrl.Auftrag und WzBLänge nur bei Wz ablegen reset (slh,6.2.2007)
      L     0; 
      T     #SW_GRF_LAENGE; //WzBruchKtrl.Auftrag und WzBLänge nur bei Wz ablegen reset (slh,6.2.2007)
m001: SPA   MEND; 

E045: UN    "M_WZW_Ausw"; //OK
      SPB   E048; 
      R     #SX_GRF_ANF; //WzBruchKtrl.Auftrag und WzBLänge nur bei Wz ablegen reset (slh,6.2.2007)
      L     0; 
      T     #SW_GRF_LAENGE; //WzBruchKtrl.Auftrag und WzBLänge nur bei Wz ablegen reset (slh,6.2.2007)

E048: SET   ; //Fertigmeldung Schreiben
      R     #Bruch; 
      L     6; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 


E043: L     5; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 


// -- Schritt 15 ----------------------------------------------------------------

SK15: L     "MB_SKZ_WZB"; // Schritt 15 ?
      L     15; 
      ==I   ; 
      SPBN  SK05; // Nein => Schritt 5


      U     #SX_FERTIG_WZ_schreiben; 
      SPB   E081; 

      U     #SX_FEHLER_WZ_schreiben; 
      SPBN  MEND; 
      R     #SX_FERTIG_WZ_schreiben; 

      SET   ; 
      S     "DB_FEHLERMELDUNG".Warnung._701903_WZB_SCHREIBFEHL; 

E081: L     5; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 


// ---Schritt 5 ----------------------------------------------------------------

SK05: L     "MB_SKZ_WZB"; // Schritt 5 ?
      L     5; 
      ==I   ; 
      SPBN  SK06; // Nein => Schritt 6


      U     "M_WZB_Anforderung"; 
      S     "M_WZB_Ready"; 
      S     "DB_NC_PLC".WZW_WZ_Bruch_Mess_fertig; 
      R     "M_WZB_Anforderung"; 

      UN    "MX_WZB_2MW_gr_1MW"; 
      UN    "MX_WZB_Toleranz"; 
      R     "MX_WZB_Ov_0"; 
      R     "MX_WZB_G0_Sperre"; 

      SET   ; 
      R     #SX_ANF_WZ_schreiben; 

// -----------------------------------------------------------------------------

      L     0; 
      T     "MB_SKZ_WZB"; 

// -- Schritt 6 ----------------------------------------------------------------

SK06: L     "MB_SKZ_WZB"; // Schritt 6 ?
      L     6; 
      ==I   ; 
      SPBN  SK07; // Nein => Schritt 7

// -----------------------------------------------------------------------------

      U     #Bruch; 
      S     #SX_ANF_WZ_schreiben; 
      R     #SX_Laenge; 
      R     #SX_gut; 
      S     #sx_schlecht; 

      UN    #Bruch; 
      S     #SX_ANF_WZ_schreiben; 
      R     #SX_Laenge; 
      S     #SX_gut; 
      R     #sx_schlecht; 

// -----------------------------------------------------------------------------

      L     7; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 

// -- Schritt 7 ----------------------------------------------------------------

SK07: L     "MB_SKZ_WZB"; // Schritt 7 ?
      L     7; 
      ==I   ; 
      SPBN  SK08; // Nein => Schritt 8

// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------

      U     #SX_FERTIG_WZ_schreiben; 
      R     #SX_ANF_WZ_schreiben; 
      SPB   E071; 

      U     #SX_FEHLER_WZ_schreiben; 
      SPBN  MEND; 
      R     #SX_FERTIG_WZ_schreiben; 

      SET   ; 
      S     "DB_FEHLERMELDUNG".Warnung._701903_WZB_SCHREIBFEHL; 

E071: L     5; 
      T     "MB_SKZ_WZB"; 
      SPA   MEND; 

// -- Schritt 8 ----------------------------------------------------------------

SK08: L     "MB_SKZ_WZB"; // Schritt 8 ?
      L     8; 
      ==I   ; 
      SPBN  SK09; // Nein => Schritt 9

// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------

      SPA   MEND; 

// -- Schritt 9 ----------------------------------------------------------------

SK09: L     "MB_SKZ_WZB"; // Schritt 9 ?
      L     9; 
      ==I   ; 
      SPBN  SK10; // Nein => Schritt 10

// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------


// -- Schritt 10 ---------------------------------------------------------------

SK10: L     "MB_SKZ_WZB"; // Schritt 10 ?
      L     10; 
      ==I   ; 
      SPBN  SK11; // Nein => Schritt 11

// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------


// -- Schritt 11 ----------------------------------------------------------------

SK11: L     "MB_SKZ_WZB"; // Schritt 11 ?
      L     11; 
      ==I   ; 
      SPBN  MEND; // Nein =>Ende

// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------

      L     1; 
      T     "MB_SKZ_WZB"; 
      CLR   ; 
      =     "O_WZB_Messung_Start"; 

MEND: NOP   0; 

      L     #SW_GRF_LAENGE; 
      DTR   ; 
      T     #laenge_Real; 

      CALL #TM_WZBRUCH_W (
           E_Write_strobe           := #SX_ANF_WZ_schreiben,
           E_WRITE_length           := #SX_Laenge,
           E_WRITE_broken           := #sx_schlecht,
           E_WRITE_ok               := #SX_gut,
           E_MagNo                  := #E_MagNo,
           E_LocNo                  := #E_LocNo,// 1=Spindel, 2=GreiferI, 3=GreiferII, 4=Vorbereitungsplatz / TPU
           ER_act_length            := #laenge_Real,
           EA_Error_Write           := #SX_FEHLER_WZ_schreiben,
           EA_DONE_Write            := #SX_FERTIG_WZ_schreiben);


END_FUNCTION_BLOCK

