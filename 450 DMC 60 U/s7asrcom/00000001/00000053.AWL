FUNCTION "FC_SPL_ZD_BER1" : VOID
TITLE =
//$Revision: 1.4 $
//$Date: 2007/09/05 10:28:48CEST $
//$Author: riedlh $

//
//Für Solutionline

AUTHOR : AB
VERSION : 0.0


VAR_INPUT
  I_BT_Anfordern : BOOL ;	//Bremsentest anfordern
  I_BT_2_Anfordern : BOOL ;	
  I_ZD_Anfordern : BOOL ;	//Zwangsdynamisierung anfordern
  I_HW_Anfordern : BOOL ;	//Hardware testen
END_VAR
VAR_IN_OUT
  O_BT_Laeuft : BOOL ;	
  O_BT_2_Laeuft : BOOL ;	
  O_BT_Error : BOOL ;	//Fehler BT --> Bremse defekt
  O_BT_2_Error : BOOL ;	
  O_ZD_Laeuft : BOOL ;	
  O_ZD_SError : BOOL ;	//Fehler ZD Startbedingungen
  O_ZD_Error : BOOL ;	//Fehler Zwangsdynamisierung
  O_Bremse_defekt : BOOL ;	
  O_Bremse_2_defekt : BOOL ;	
  O_BT_Error_FC18 : BOOL ;	//Fehler beim Bremsentest mit FC18
  O_BT_Error_2_FC18 : BOOL ;	
  O_HW_laeuft : BOOL ;	
END_VAR
VAR_TEMP
  T_fnum : BYTE ;	
  T_Bit : BYTE ;	
  T_Byte : BYTE ;	
  T_errword : WORD ;	
  T_Err_1Eingang : BOOL ;	//Fehler Nur 1 Eingang darf 1 sein
  T_Err_BA1 : BOOL ;	//Fehler Test Freigabe Drehzahl 
  T_Err_BA2 : BOOL ;	//Fehler Test BA 2
  T_Err_BA3 : BOOL ;	//Fehler Test BA 3
  T_Err_BA4 : BOOL ;	//Fehler Test BA 4
  T_option_PNOZ_mult : BOOL ;	//Option PNOZ - Multi
  T_test : BOOL ;	
  tb_anz_achsen_cu : INT ;	
  T_Teller_mit_Hubachse : BOOL ;	
  T_Teller_mit_Hubzylinder : BOOL ;	
  T_Vertikalmagazin : BOOL ;	
  tb_anz_achsen_nx : INT ;	
  tb_anz_achsen_ges : INT ;	
  FC_SPL_ZD1_SERROR1 : BOOL ;	
  FC_SPL_ZD1_SERROR2 : BOOL ;	
  FC_SPL_ZD1_ERROR1 : BOOL ;	
  FC_SPL_ZD1_ERROR2 : BOOL ;	
  S3_ready : BOOL ;	
  S4_start : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =Option PNOZ Multi

      SET   ; 
      =     #T_option_PNOZ_mult; 
NETWORK
TITLE =Magazintyp

      U     "m_eins"; 
      =     L     17.0; 
      U     L     17.0; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._008_ANWAHL_WZW_TYP; 
      L     8; 
      ==I   ; 
      )     ; 
      =     #T_Teller_mit_Hubzylinder; 
      U     L     17.0; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._008_ANWAHL_WZW_TYP; 
      L     7; 
      ==I   ; 
      )     ; 
      =     #T_Teller_mit_Hubachse; 
      U     L     17.0; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._008_ANWAHL_WZW_TYP; 
      L     9; 
      ==I   ; 
      )     ; 
      =     #T_Vertikalmagazin; 
NETWORK
TITLE =Anzahl der Achsen ermitteln


      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._000_STANDORT_MASCHTYP; 
      L     3071; // h-maschine
      ==I   ; 
      )     ; 
      SPBN  ndel; 

// Anzahl der Achsen auf der CU

      L     5; 
      T     #tb_anz_achsen_cu; 

// Anzahl der Achsen auf NX

      U     #T_Vertikalmagazin; 
      O     #T_Teller_mit_Hubachse; 
      SPBN  xy; 

      L     3; 
      T     #tb_anz_achsen_nx; 
      SPA   N1b; 

xy:   U     #T_Teller_mit_Hubzylinder; 
      SPBN  N1b; 

      L     2; 
      T     #tb_anz_achsen_nx; 

N1b:  L     #tb_anz_achsen_cu; 
      L     #tb_anz_achsen_nx; 
      +I    ; 
      T     #tb_anz_achsen_ges; 


NETWORK
TITLE = Test - Anstoss BA 1

      U     #I_HW_Anfordern; 
      FP    "DB_SAFE_ZD".Seco_Test.FP_BA1; 
      =     #O_HW_laeuft; 
NETWORK
TITLE =Test der mechanischen Funktion der Bremse Z-Achse
//  UN    "Mx_Vert_Bremse_auf"        //"O_AL_ZACHS_Bremse_auf"
      U     "Mx_Vert_Bremse_auf"; 
      UN    "DB_SAFE_ZD".GR1_ZD.Bremse; // Zwangsdynamisierung
      UN    "DB_SAFE_ZD".GR1_BT.Bremse_schliessen; 
      NOT   ; 
      =     "DB_SAFE_ZD".GR1_BT.Bclosed_FB11; 

      U     #I_BT_Anfordern; //  Anstoss fuer den Bremsentest Z-Achse
      FP    "DB_SAFE_ZD".GR1_BT.BT_Start_Taste_FP; 
      UN    "DB_SAFE_ZD".GR1_BT.BT_error; //Fehler aufgetreten
      S     "DB_SAFE_ZD".GR1_BT.BT_laeuft; //Bremsentest laeuft
      S     "DB_SAFE_ZD".GR1_BT.Schritt1; //naechster Schritt
      S     "DB_ACHSE3_Z".A_NCASpStrobe; //Neutrale Achse anfordern
      R     "DB_ACHSE3_Z".A_NCASpChanA; //Neutrale Achse anfordern
      S     #O_BT_Laeuft; //Bremsentest laeuft

      U     "DB_ACHSE3_Z".E_NeutrASp; //Rueckmeldung Achse ist neutral
      U     "DB_SAFE_ZD".GR1_BT.Schritt1; 
      FP    "DB_SAFE_ZD".GR1_BT.Schritt1_FP; 
      S     "DB_SAFE_ZD".GR1_BT.Schritt2; //naechster Schritt
      R     "DB_SAFE_ZD".GR1_BT.Schritt1; 
      R     "DB_ACHSE3_Z".A_NCASpStrobe; 
      S     "DB_ACHSE3_Z".A_PLCAxis; //PLC-kontrollierte Achse anfordern (MD 10008)

      U     DB33.DBX   63.1; //Rueckmeldung Achse wird von PLC kontrolliert
      U     "DB_SAFE_ZD".GR1_BT.Schritt2; 
      FP    "DB_SAFE_ZD".GR1_BT.Schtitt2_FP; 
      R     "DB_SAFE_ZD".GR1_BT.Schritt2; 
      S     "DB_SAFE_ZD".GR1_BT.Start_BT_FB11; //Start Bremsentest fuer FB

      CALL "SI_BrakeTest" , "DB_SAFE_BTGR1_INST" (
           Start                    := "DB_SAFE_ZD".GR1_BT.Start_BT_FB11,
           Quit                     := "M_Ruecksetze_Fehler",//"MMC_SIGNALS".E_Cancel
           Bclosed                  := "DB_SAFE_ZD".GR1_BT.Bclosed_FB11,
           Axis                     := 3,
           TimerNo                  := "T_SAFECO_Bremsentest",
           TV_BTactiv               := S5T#200MS,//400ms
           TV_Bclose                := S5T#1S,//500MS
           TV_FeedCommand           := S5T#1S,//500MS
           TV_FXSreached            := S5T#1S,//500MS
           TV_FXShold               := S5T#1S500MS,//500MS
           CloseBrake               := "DB_SAFE_ZD".GR1_BT.Bremse_schliessen,
           MoveAxis                 := "DB_SAFE_ZD".GR1_BT.MoveAxis_FB11,
           Done                     := "DB_SAFE_ZD".GR1_BT.Done_FB11,
           Error                    := "DB_SAFE_ZD".GR1_BT.BT_error,
           State                    := "DB_SAFE_ZD".GR1_BT.State_FB11);

// S t a t e
// -----------
// 0:Kein Fehler                                                                                                            
// 1:Startbedingungen nicht gegeben, z.B. Achse nicht in Regelung / Bremse zu / Achsensperre steht an.                      
// 2:Bei Anwahl Bremsentest erfolgt keine Rückmeldung der NC im Signal "Bremsentest aktiv"                                  
// 3:Keine Rückmeldung "Bremse eingefallen" durch Eingangssignal BClosed                                                    
// 4:Keine Fahrbefehlausgabe (z.B. Bewegung der Achse wurde nicht gestartet)                                                
// 5:Festanschlag wird nicht erreicht -> Achs-RESET wurde ausgelöst                                                         
// 6:Verfahrsperre/Anfahrt zu langsam -> Festanschlag kann nicht erreicht werden. Überwachungszeit TV_FXSreached abgelaufen.
// 7:Bremse hält überhaupt nicht (Endposition wird erreicht) / Anfahrgeschwindigkeit zu groß                                
// 8:Bremse bricht während der Haltezeit auf                                                                                
// 9:Fehler bei Bremsentest-Abwahl                                                                                          
//10:Interner Fehler                                                                                                        
//11:Signal "PLC kontrolliert Achse" nicht eingeschaltet vom Anwenderprogramm (MD 10008)


      U     "M_Ruecksetze_Fehler"; 
      SPBN  er1; 
      L     0; 
      T     #T_errword; 
      R     "DB_SAFE_ZD".GR1_BT.BT_error; 
      SPA   equt; 

er1:  U     "DB_SAFE_ZD".GR1_BT.BT_error; 
      SPBN  eend; 
      L     "DB_SAFE_ZD".GR1_BT.State_FB11; 
      T     #T_fnum; 
      L     0; 
      ==I   ; 
      SPB   eend; 
      L     0; 
      T     #T_errword; 
      L     #T_fnum; 
      DEC   1; 
      L     8; 
      MOD   ; 
      T     #T_Bit; 
      L     #T_fnum; 
      L     8; 
      /I    ; 
      T     #T_Byte; 
      SLD   3; 
      L     #T_Bit; 
      OW    ; 
      LAR1  ; 
      L     P##T_errword; 
      +AR1  ; 
      S     L [AR1,P#0.0]; 
equt: L     #T_errword; 
      AUF   "DB_FEHLERMELDUNG"; 
      L     P#DBX 114.0; 
      LAR1  ; 
      L     #T_errword; 
      T     DBW [AR1,P#0.0]; 
eend: NOP   0; 


// Testmoment wird über MD 36966 definiert / Toleranz im MD 36967
// Beispiel: Haltemoment für Z-Achse 28% (MD 1728)
// Testmoment |50%| -> Achsgewicht (28%) ==> Motor (-23%) : MD 1728

      O     "DB_SAFE_ZD".GR1_BT.Done_FB11; //Test erfolgreich beendet
      O     "DB_SAFE_ZD".GR1_BT.BT_error; //Fehler aufgetreten
      FP    "DB_SAFE_ZD".GR1_BT.Done_Error_FB11_FP; 
      R     "DB_ACHSE3_Z".A_PLCAxis; //Anforderung PLC-kontrollierte Achse rücksetzen

      UN    DBX   63.1; //Rueckmeldung Achse wird von PLC kontrolliert
      U     "DB_SAFE_ZD".GR1_BT.Start_BT_FB11; //Start Bremsentest fuer FB
      U     "DB_SAFE_ZD".GR1_BT.BT_laeuft; //Bremsentest laeuft
      FP    "DB_SAFE_ZD".GR1_BT.BT_laeuft_PLCAx_FP; 
      R     "DB_SAFE_ZD".GR1_BT.Start_BT_FB11; //Start Bremsentest fuer FB
      R     "DB_SAFE_ZD".GR1_BT.BT_laeuft; //Bremsentest laeuft

      CALL "FC_SIEM_SPINCTRL" (//Z-Achse verfahren
           Start                    := "DB_SAFE_ZD".GR1_BT.MoveAxis_FB11,//Start des Verfahrbewegung
           Stop                     := FALSE,
           Funct                    := B#16#5,//Mode: Achsbetrieb
           Mode                     := B#16#1,//Verfahren: Inkrementell
           AxisNo                   := 3,//Achsnummer der zu verfahrenden Achse Z-Achse
           Pos                      := -3.000000e+000,//Verfahrweg: minus 3mm
           FRate                    := 2.000000e+003,//Vorschub: 2000 mm/min
           InPos                    := "DB_SAFE_ZD".GR1_BT.InPos_FC18,//Position erreicht
           Error                    := "DB_SAFE_ZD".GR1_BT.Error_FC18,
           State                    := "DB_SAFE_ZD".GR1_BT.State_FC18);


      U     "DB_SAFE_ZD".GR1_BT.Done_FB11; //Test erfolgreich beendet
      S     "DB_SAFE_ZD".GR1_BT.HM_BTest_ok; // Zwischenmerker Test Z ok

      U     "DB_SAFE_ZD".GR1_BT.HM_BTest_ok; // Zwischenmerker Test Z ok
      UN    DB33.DBX   63.1; // Z-Achse nicht mehr von PLC kontrolliert
      S     "DB_SAFE_ZD".GR1_BT.BTest_Fertig; 
      R     "DB_SAFE_ZD".GR1_BT.HM_BTest_ok; // Zwischenmerker Test Z ok
      R     #O_BT_Laeuft; 

//Fault handling

      U     "M_Ruecksetze_Fehler"; 
      R     #O_BT_Error; 
      R     "DB_SAFE_ZD".GR1_BT.BT_error; 
      R     "DB_SAFE_ZD".GR1_BT.Start_BT_FB11; 
      R     "DB_SAFE_ZD".GR1_BT.Error_FC18; 
      R     #O_BT_Laeuft; 

// Fehler erkannt durch FC 18

      U     "DB_SAFE_ZD".GR1_BT.Error_FC18; 
      =     #O_BT_Error_FC18; 

// Fehler Bremse defekt

      O(    ; 
      L     #T_fnum; 
      L     7; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_fnum; 
      L     8; 
      ==I   ; 
      )     ; 
      U     "DB_SAFE_ZD".GR1_BT.BT_error; 
      S     #O_Bremse_defekt; 

// Fehler erkannt durch FB 11

      U     "DB_SAFE_ZD".GR1_BT.BT_error; 
      R     #O_BT_Laeuft; 

// sonstiger Fehler beim Bremsentest

      U     "DB_SAFE_ZD".GR1_BT.BT_error; 
      UN    #O_Bremse_defekt; 
      S     #O_BT_Error; //-> Sammelmeldung ausgeben 

// Zustandsmeldung Bremsentest laeuft

      U     #O_BT_Laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.Test_Bremse_laeuft; 

NETWORK
TITLE =Test der mechanischen Funktion der Bremse B oder A-Achse

      UN    "O_AL_5ACHS_Bremse_auf"; 
      =     "DB_SAFE_ZD".GR2_BT.Bclosed_FB11; 

      U     #I_BT_2_Anfordern; //  Anstoss fuer den Bremsentest Z-Achse
      FP    "DB_SAFE_ZD".GR2_BT.BT_Start_Taste_FP; 
      UN    "DB_SAFE_ZD".GR2_BT.BT_error; //Fehler aufgetreten
      S     "DB_SAFE_ZD".GR2_BT.BT_laeuft; //Bremsentest laeuft
      S     "DB_SAFE_ZD".GR2_BT.Schritt1; //naechster Schritt
      S     "DB_ACHSE5".A_NCASpStrobe; //Neutrale Achse anfordern
      R     "DB_ACHSE5".A_NCASpChanA; //Neutrale Achse anfordern
      S     #O_BT_2_Laeuft; //Bremsentest laeuft

      U     "DB_ACHSE5".E_NeutrASp; //Rueckmeldung Achse ist neutral
      U     "DB_SAFE_ZD".GR2_BT.Schritt1; 
      FP    "DB_SAFE_ZD".GR2_BT.Schritt1_FP; 
      S     "DB_SAFE_ZD".GR2_BT.Schritt2; //naechster Schritt
      R     "DB_SAFE_ZD".GR2_BT.Schritt1; 
      R     "DB_ACHSE5".A_NCASpStrobe; 
      S     "DB_ACHSE5".A_PLCAxis; //PLC-kontrollierte Achse anfordern (MD 10008)

      U     DB35.DBX   63.1; //Rueckmeldung Achse wird von PLC kontrolliert
      U     "DB_SAFE_ZD".GR2_BT.Schritt2; 
      FP    "DB_SAFE_ZD".GR2_BT.Schtitt2_FP; 

      R     "DB_SAFE_ZD".GR2_BT.Schritt2; 
      S     "DB_SAFE_ZD".GR2_BT.Start_BT_FB11; //Start Bremsentest fuer FB

      CALL "SI_BrakeTest" , "DB_SAFE_BTGR2_INST" (
           Start                    := "DB_SAFE_ZD".GR2_BT.Start_BT_FB11,
           Quit                     := "M_Ruecksetze_Fehler",//"MMC_SIGNALS".E_Cancel
           Bclosed                  := "DB_SAFE_ZD".GR2_BT.Bclosed_FB11,
           Axis                     := 5,
           TimerNo                  := "T_SAFECO_SPL_STARTI",
           TV_BTactiv               := S5T#400MS,
           TV_Bclose                := S5T#1S,
           TV_FeedCommand           := S5T#1S,
           TV_FXSreached            := S5T#1S,
           TV_FXShold               := S5T#1S,
           CloseBrake               := "DB_SAFE_ZD".GR2_BT.Bremse_schliessen,
           MoveAxis                 := "DB_SAFE_ZD".GR2_BT.MoveAxis_FB11,
           Done                     := "DB_SAFE_ZD".GR2_BT.Done_FB11,
           Error                    := "DB_SAFE_ZD".GR2_BT.BT_error,
           State                    := "DB_SAFE_ZD".GR2_BT.State_FB11);

// S t a t e
// -----------
// 0:Kein Fehler                                                                                                            
// 1:Startbedingungen nicht gegeben, z.B. Achse nicht in Regelung / Bremse zu / Achsensperre steht an.                      
// 2:Bei Anwahl Bremsentest erfolgt keine Rückmeldung der NC im Signal "Bremsentest aktiv"                                  
// 3:Keine Rückmeldung "Bremse eingefallen" durch Eingangssignal BClosed                                                    
// 4:Keine Fahrbefehlausgabe (z.B. Bewegung der Achse wurde nicht gestartet)                                                
// 5:Festanschlag wird nicht erreicht -> Achs-RESET wurde ausgelöst                                                         
// 6:Verfahrsperre/Anfahrt zu langsam -> Festanschlag kann nicht erreicht werden. Überwachungszeit TV_FXSreached abgelaufen.
// 7:Bremse hält überhaupt nicht (Endposition wird erreicht) / Anfahrgeschwindigkeit zu groß                                
// 8:Bremse bricht während der Haltezeit auf                                                                                
// 9:Fehler bei Bremsentest-Abwahl                                                                                          
//10:Interner Fehler                                                                                                        
//11:Signal "PLC kontrolliert Achse" nicht eingeschaltet vom Anwenderprogramm (MD 10008)


      U     "M_Ruecksetze_Fehler"; 
      SPBN  er3; 
      L     0; 
      T     #T_errword; 
      R     "DB_SAFE_ZD".GR2_BT.BT_error; 
      SPA   equ3; 

er3:  U     "DB_SAFE_ZD".GR2_BT.BT_error; 
      SPBN  een3; 
      L     "DB_SAFE_ZD".GR2_BT.State_FB11; 
      T     #T_fnum; 
      L     0; 
      ==I   ; 
      SPB   een3; 
      L     0; 
      T     #T_errword; 
      L     #T_fnum; 
      DEC   1; 
      L     8; 
      MOD   ; 
      T     #T_Bit; 
      L     #T_fnum; 
      L     8; 
      /I    ; 
      T     #T_Byte; 
      SLD   3; 
      L     #T_Bit; 
      OW    ; 
      LAR1  ; 
      L     P##T_errword; 
      +AR1  ; 
      S     L [AR1,P#0.0]; 
equ3: L     #T_errword; 
      AUF   "DB_FEHLERMELDUNG"; 
      L     P#DBX 114.0; 
      LAR1  ; 
      L     #T_errword; 
      T     DBW [AR1,P#0.0]; 
een3: NOP   0; 


// Testmoment wird über MD 36966 definiert / Toleranz im MD 36967
// Beispiel: Haltemoment für Z-Achse 28% (MD 1728)
// Testmoment |50%| -> Achsgewicht (28%) ==> Motor (-23%) : MD 1728

      O     "DB_SAFE_ZD".GR2_BT.Done_FB11; //Test erfolgreich beendet
      O     "DB_SAFE_ZD".GR2_BT.BT_error; //Fehler aufgetreten
      FP    "DB_SAFE_ZD".GR2_BT.Done_Error_FB11_FP; 
      R     "DB_ACHSE5".A_PLCAxis; //Anforderung PLC-kontrollierte Achse rücksetzen

      UN    DBX   63.1; //Rueckmeldung Achse wird von PLC kontrolliert
      U     "DB_SAFE_ZD".GR2_BT.Start_BT_FB11; //Start Bremsentest fuer FB
      U     "DB_SAFE_ZD".GR2_BT.BT_laeuft; //Bremsentest laeuft
      FP    "DB_SAFE_ZD".GR2_BT.BT_laeuft_PLCAx_FP; 
      R     "DB_SAFE_ZD".GR2_BT.Start_BT_FB11; //Start Bremsentest fuer FB
      R     "DB_SAFE_ZD".GR2_BT.BT_laeuft; //Bremsentest laeuft

      CALL "FC_SIEM_SPINCTRL" (//Z-Achse verfahren
           Start                    := "DB_SAFE_ZD".GR2_BT.MoveAxis_FB11,//Start des Verfahrbewegung
           Stop                     := FALSE,
           Funct                    := B#16#5,//Mode: Achsbetrieb
           Mode                     := B#16#1,//Verfahren: Inkrementell
           AxisNo                   := 5,//Achsnummer der zu verfahrenden Achse Z-Achse
           Pos                      := 3.000000e+000,//Verfahrweg: minus 1 Grad
           FRate                    := 2.000000e+003,//Vorschub: 2 mu/min
           InPos                    := "DB_SAFE_ZD".GR2_BT.InPos_FC18,//Position erreicht
           Error                    := "DB_SAFE_ZD".GR2_BT.Error_FC18,
           State                    := "DB_SAFE_ZD".GR2_BT.State_FC18);


      U     "DB_SAFE_ZD".GR2_BT.Done_FB11; //Test erfolgreich beendet
      S     "DB_SAFE_ZD".GR2_BT.HM_BTest_ok; // Zwischenmerker Test Z ok

      U     "DB_SAFE_ZD".GR2_BT.HM_BTest_ok; // Zwischenmerker Test Z ok
      UN    DB33.DBX   63.1; // Z-Achse nicht mehr von PLC kontrolliert
      S     "DB_SAFE_ZD".GR2_BT.BTest_Fertig; 
      R     "DB_SAFE_ZD".GR2_BT.HM_BTest_ok; // Zwischenmerker Test Z ok
      R     #O_BT_2_Laeuft; 


//Fault handling

      U     "M_Ruecksetze_Fehler"; //DB19.DBX   20.2
      R     #O_BT_2_Error; 
      R     #O_BT_2_Laeuft; 
      R     "DB_SAFE_ZD".GR2_BT.BT_error; 
      R     "DB_SAFE_ZD".GR2_BT.Start_BT_FB11; 
      R     "DB_SAFE_ZD".GR2_BT.Error_FC18; 

// -- Fehler erkannt durch FC18

      U     "DB_SAFE_ZD".GR2_BT.Error_FC18; 
      =     #O_BT_Error_FC18; 

// -- Fehler Bremse defekt

      O(    ; 
      L     #T_fnum; 
      L     7; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_fnum; 
      L     8; 
      ==I   ; 
      )     ; 
      U     "DB_SAFE_ZD".GR2_BT.BT_error; 
      S     #O_Bremse_2_defekt; 

// -- Fehler erkannt durch FB11

      U     "DB_SAFE_ZD".GR2_BT.BT_error; 
      R     #O_BT_2_Laeuft; 

// sonstiger Fehler beim Bremsentest

      U     "DB_SAFE_ZD".GR2_BT.BT_error; 
      UN    #O_Bremse_2_defekt; 
      S     #O_BT_2_Error; //-> Sammelmeldung ausgeben 

// Zustandsmeldung Bremsentest laeuft

      U     #O_BT_2_Laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.Test_Bremse_laeuft; 

NETWORK
TITLE =Abschaltwege / externe Stops testen

      NOP   0; 

// Schritt 1 --> Bremse(n) einfallen lassen (wenn Startbedingungen gegeben)

      U     #I_ZD_Anfordern; // U E 6.2 Anstoss fuer den Bremsentest Z-Achse
      FP    "DB_SAFE_ZD".GR1_ZD.Start_Taste_FP; 
      S     "DB_SAFE_ZD".GR1_ZD.Schritt1; //Schritt 1 
      S     #O_ZD_Laeuft; 

      U     "DB_SAFE_ZD".GR1_ZD.Schritt1; 
      S     "DB_SAFE_ZD".GR1_ZD.Bremse; // Bremse Z schliessen

// Schritt 2 --> RF für Z wegnehmen (sonst Arbeiten gegen Bremse)

      U     "DB_SAFE_ZD".GR1_ZD.Schritt1; 
      L     S5T#300MS; 
      SE    "T_SAFECO_ZD_Schrit[2]"; 

      U     "T_SAFECO_ZD_Schrit[2]"; 
      S     "DB_SAFE_ZD".GR1_ZD.Schritt2; //Schritt 2 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt1; 
      S     "DB_SAFE_ZD".GR1_ZD.Reglerfreigabe; // RF weg für gesamte ZD -> DB33.DBX2.1 1->0 - FC140 NW5


// Schritt 3 --> Test der Abschaltpfade (Antrieb/NCK intern)

      U     "DB_SAFE_ZD".GR1_ZD.Schritt2; //Schritt 2 
      S     "DB_SAFE_ZD".GR1_ZD.Schritt3; // Schritt 3 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt2; 
      S     "DB_SAFE_ZD".Seco_Test.Test_ABSP_laeuft; 

// Achsen auf CU-Baugruppe
      CALL "FC_SPL_ZD1_6AX1" (
           start                    := "DB_SAFE_ZD".GR1_ZD.Schritt3,
           clear                    := "M_Reset_Taste",//"MMC_SIGNALS".E_Cancel
           num_axis                 := #tb_anz_achsen_cu,
           test_axis_1              := 1,//X
           test_axis_2              := 2,//Z
           test_axis_3              := 3,//Y
           test_axis_4              := 6,//SPI
           test_axis_5              := 7,//WZM
           test_axis_6              := 0,
           aux_dword                := "DB_SAFE_ZD".GR1_ZD.aux_dword_ZD1_int,
           ready                    := #S3_ready,
           serror                   := #FC_SPL_ZD1_SERROR1,// Startbed. nicht gegeben : mind. 1 Achse mit DBX108.2 == 0
           error                    := #FC_SPL_ZD1_ERROR1);// Parametrierfehler Achsanzahl ...

// Schritt 4--> Test der Abschaltpfade (Antrieb/NCK intern)
      UN    "DB_SAFE_ZD".GR1_ZD.Schritt3; 
      U     "DB_SAFE_ZD".GR1_ZD.Schritt4; 
      =     #S4_start; 

      U     #S3_ready; 
      S     "DB_SAFE_ZD".GR1_ZD.Schritt4; 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt3; 


// Achsen auf NX-Baugruppe
      CALL "FC_SPL_ZD1_6AX1" (
           start                    := #S4_start,
           clear                    := "M_Reset_Taste",//"MMC_SIGNALS".E_Cancel
           num_axis                 := #tb_anz_achsen_nx,
           test_axis_1              := 4,//B
           test_axis_2              := 8,//PW
           test_axis_3              := 14,//WW
           test_axis_4              := 0,
           test_axis_5              := 0,
           test_axis_6              := 0,
           aux_dword                := "DB_SAFE_ZD".GR1_ZD.aux_dword_ZD1_ext,
           ready                    := "DB_SAFE_ZD".GR1_ZD.Schritt5,
           serror                   := #FC_SPL_ZD1_SERROR2,// Startbed. nicht gegeben : mind. 1 Achse mit DBX108.2 == 0
           error                    := #FC_SPL_ZD1_ERROR2);// Parametrierfehler Achsanzahl ...

//Test der Abschaltpfade error
      U     #FC_SPL_ZD1_ERROR1; 
      O     #FC_SPL_ZD1_ERROR2; 
      =     "DB_SAFE_ZD".GR1_ZD.ZD1_error_int; 

//Test der Abschaltpfade serror
      U     #FC_SPL_ZD1_SERROR1; 
      O     #FC_SPL_ZD1_SERROR2; 
      =     "DB_SAFE_ZD".GR1_ZD.ZD1_serror_int; 

// Schritt 5 --> Test der externen Stopps (STOP D -> STOP C -> STOP A) : [1] Antrieb / [2] NCK

      U     "DB_SAFE_ZD".GR1_ZD.Schritt5; 
      R     "DB_SAFE_ZD".Seco_Test.Test_ABSP_laeuft; 
      S     "DB_SAFE_ZD".Seco_Test.Test_extStop_laeuft; 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt4; 

      CALL "FC_SPL_ZD2_8AX1" (
           start                    := "DB_SAFE_ZD".GR1_ZD.Schritt5,
           clear                    := "M_Reset_Taste",//"MMC_SIGNALS".E_Cancel
           num_axis                 := #tb_anz_achsen_ges,
           test_axis_1              := 1,
           test_axis_2              := 2,
           test_axis_3              := 3,
           test_axis_4              := 4,
           test_axis_5              := 6,
           test_axis_6              := 7,
           test_axis_7              := 8,
           test_axis_8              := 14,
           req_stopd_plc            := "DB_SAFE_ZD".GR1_ZD.req_stopd_plc,
           req_stopc_plc            := "DB_SAFE_ZD".GR1_ZD.req_stopc_plc,
           req_stopa_plc            := "DB_SAFE_ZD".GR1_ZD.req_stopa_plc,
           req_stopd_nck            := "DB_SPL".IPLC_ZD_Gr1_STOPD,
           req_stopc_nck            := "DB_SPL".IPLC_ZD_Gr1_STOPC,
           req_stopa_nck            := "DB_SPL".IPLC_ZD_Gr1_STOPA,
           aux_dword                := "DB_SAFE_ZD".GR1_ZD.aux_dword_ZD2,
           ready                    := "DB_SAFE_ZD".GR1_ZD.Schritt6,
           serror                   := "DB_SAFE_ZD".GR1_ZD.ZD2_serror,
           error                    := "DB_SAFE_ZD".GR1_ZD.ZD2_error);




// Abschluss --> RF wieder setzen / Bremse wieder freigeben

      U     "DB_SAFE_ZD".GR1_ZD.Schritt6; 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt3; 
      R     "DB_SAFE_ZD".GR1_ZD.Reglerfreigabe; // RF Z wieder geben
      R     "DB_SAFE_ZD".Seco_Test.Test_extStop_laeuft; 
      R     "DB_SPL".IPLC_ZD_Gr1_EXT; // Ende externe Impulslöschung
      R     "DB_SAFE_ZD".GR1_ZD.Bremse; // Bremse Z schliessen

// Fertigmeldung

      U     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      R     "DB_SAFE_ZD".GR1_ZD.Schritt7; 
      R     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      R     #O_ZD_Laeuft; 

      U     "DB_SAFE_ZD".GR1_ZD.Schritt7; 
      S     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 

      U     "DB_SAFE_ZD".GR1_ZD.Schritt6; 
      S     "DB_SAFE_ZD".GR1_ZD.Schritt7; 

NETWORK
TITLE =--- Fehler / Reset -----------------------------

      O     "DB_SAFE_ZD".GR1_ZD.ZD1_serror_int; 
      O     "DB_SAFE_ZD".GR1_ZD.ZD1_serror_ext; 
      O     "DB_SAFE_ZD".GR1_ZD.ZD2_serror; 
      S     #O_ZD_SError; //-> Sammelmeldung ausgeben 

      UN    "M_Ruecksetze_Fehler"; 
      SPB   ndel; 

// HW-Test
      R     "DB_SAFE_ZD".Seco_Test.Test_HW_laueft; 
      R     "DB_SAFE_ZD".Seco_Test.Test_Bremse_laeuft; 

// Bremsentest
      R     "DB_SAFE_ZD".GR1_BT.BT_laeuft; //Bremsentest laeuft
      R     "DB_SAFE_ZD".GR1_ZD.Bremse; // Bremse Z schliessen
      R     #O_BT_Laeuft; 
      R     #O_BT_2_Laeuft; 


// Abschaltpfade / externe Stops
      R     #O_ZD_Laeuft; 
      L     0; 
      T     DB397.DBW    0; 
      T     "DB_SAFE_ZD".GR1_ZD.aux_dword_ZD2; 
      R     "DB_SPL".IPLC_ZD_Gr1_EXT; 
      R     "DB_SPL".IPLC_ZD_Gr1_INT; 
      R     "DB_SAFE_ZD".Seco_Test.Test_ABSP_laeuft; 
      R     "DB_SAFE_ZD".Seco_Test.Test_extStop_laeuft; 

      R     #O_ZD_SError; 
      R     "DB_SAFE_ZD".GR1_ZD.Reglerfreigabe; // RF Z wieder geben
      R     "DB_SAFE_ALLG1".M_Bremse_Z_schliessen; //"M_Bremse_Z_schliessen"; // Bremse Z schliessen

ndel: NOP   0; 


END_FUNCTION

