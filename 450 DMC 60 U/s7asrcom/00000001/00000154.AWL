FUNCTION_BLOCK "FB_SMARTKEY_TEST"
TITLE =
//$Revision: 1.4 $
//$Date: 2008/03/03 13:37:46CET $
//$Author: wri $
//
{ S7_language := '7(1) Deutsch (Deutschland)  29.02.2008  12:12:19' }
VERSION : 0.1


VAR_INPUT
  EX_Enable : BOOL ;	//Aktivierung des Bausteins
  EX_Init : BOOL ;	//Initalisierung des Bausteins und damit in den Grundzustand zu setzen
  EX_MaschineEin : BOOL ;	//Einschaltsignal der Maschine zum Start der Schrittkette
  EX_Start : BOOL ;	//Startsignal zur Simulation der Identnummer-Übertragung
  EX_TagRemoved : BOOL ;	//Smartkey wurde entfernt. Signal um Schrittkette in den Grundzustand zusetzen
  EX_GEN_OM_ID_DATA_0 : BOOL ;	//Smartkeyreader-Eingang: Bestätigung der Datenleitung 0 von der PLC
  EX_GEN_OM_ID_DATA_1 : BOOL ;	//Smartkeyreader-Eingang: Bestätigung der Datenleitung 1 von der PLC
  EDW_SEND_DATA : DWORD ;	//Die zu übertragende Identnummer. 
  ES5T_Clock : S5TIME ;	//Peridendauer des Clockimpulses
  ET_Clock : TIMER ;	//Timer für die Generierung der Clockimpulses
END_VAR
VAR_IN_OUT
  EAX_GEN_OM_ID_SYNC : BOOL ;	//Smartkeyreader-Ausgang: Synchronisations-Impuls
  EAX_GEN_OM_ID_CLOCK : BOOL ;	//Smartkeyreader-Ausgang: Clock-Impuls für die Datenübertragung
  EAX_GEN_OM_ID_DATA_0 : BOOL ;	//Smartkeyreader-Ausgang: Datenleitung 0
  EAX_GEN_OM_ID_DATA_1 : BOOL ;	//Smartkeyreader-Ausgang: Datenleitung 1
END_VAR
VAR
  SW_Schrittkette : WORD ;	//Schrittkettenzähler zur Übertragung der Identnummer
  SW_Send_Data_0 : WORD ;	//Speichern der zusendenen Daten auf der Datenleitung 0
  SW_Send_Data_1 : WORD ;	//Speichern der zusendenen Daten auf der Datenleitung 1
  SW_Bit_Mask : WORD ;	//Bitmaske zur Übertragung der einzelnen Bits der Identnummer
  SB_Data_Counter : BYTE ;	//Zähler für die zusendenen Bits auf der Datenleitung
  SX_FP_Start : BOOL ;	//Positiver Zustandsflankenmerker für Start der Identnummer-Übertragung
  SX_Start : BOOL ;	//Positiver Flankenmerker für Start der Identnummer-Übertragung
END_VAR
BEGIN
NETWORK
TITLE =

      UN    #EX_Enable; 
      BEB   ; 
NETWORK
TITLE =

      U     #EX_Start; 
      FP    #SX_FP_Start; 
      =     #SX_Start; 

NETWORK
TITLE =

      U(    ; 
      ON    #EX_MaschineEin; 
      O     #EX_Init; 
      O     #EX_TagRemoved; 
      O     #SX_Start; 
      )     ; 
      SPBN  INIT; 

      L     0; 
      T     #SW_Schrittkette; 


      SET   ; 
      R     #EAX_GEN_OM_ID_SYNC; 
      R     #EAX_GEN_OM_ID_CLOCK; 
      R     #EAX_GEN_OM_ID_DATA_0; 
      R     #EAX_GEN_OM_ID_DATA_1; 

INIT: NOP   0; 

NETWORK
TITLE =

SSRT: NOP   0; 

      L     #SW_Schrittkette; 
      SPL   SDFT; 
      SPA   SK00; // Pos. Flanke von Synch
      SPA   SK01; // Neg. Flanke von Synch
      SPA   SK02; // Aufbereitung der Daten
      SPA   SK03; // Pos. Flanke von Clock
      SPA   SK04; // Neg. Flanke von Clock
      SPA   SK05; // Auswertung der empfangenen Daten
      SPA   SEND; // Letzter Schritt in Schrittkette

SDFT: SPA   SEND; 

NETWORK
TITLE =Syncronisation
//Wenn die Maschine eingeschalten wird, wird für 50msec der 
//Synchronisationsimpuls 
//auf High ausgegeben
SK00: NOP   0; 

      U     #EX_MaschineEin; 
      U     #EX_Start; 
      SPBN  SEND; 

      SET   ; 
      S     #EAX_GEN_OM_ID_SYNC; 

      CLR   ; 
      SE    #ET_Clock; 
      SET   ; 
      L     #ES5T_Clock; 
      SE    #ET_Clock; 

      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 

NETWORK
TITLE =Verzugszeit bis Adressübertragung startet
//Nach Synchronisationsimpuls wird für 50msec der Synchronisationsimpuls auf Low 
//ausgegeben, als Pause vor der Datenübermittlung
SK01: NOP   0; 

      U     #ET_Clock; 
      SPBN  SEND; 

      SET   ; 
      R     #EAX_GEN_OM_ID_SYNC; 

      CLR   ; 
      SE    #ET_Clock; 
      SET   ; 
      L     #ES5T_Clock; 
      SE    #ET_Clock; 

      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 

NETWORK
TITLE =Asup_FC240

SK02: NOP   0; 

      U     #ET_Clock; 
      SPBN  SEND; 

      L     0; 
      T     #SW_Send_Data_0; 
      T     #SW_Send_Data_1; 

      L     13; 
      T     #SB_Data_Counter; 

      L     #EDW_SEND_DATA; 
      UD    DW#16#3FFF; 
      T     #SW_Send_Data_0; 

      L     #EDW_SEND_DATA; 
      UD    DW#16#FFFFFFF; 
      SRD   14; 
      UD    DW#16#3FFF; 
      T     #SW_Send_Data_1; 

      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 


NETWORK
TITLE =Übertragung der Adresse
//Generierung des Takt mit 50msec 1:1. Im positiven Taktzustand wird ein 
//Adressbit 
//ausgegeben im negativen geschieht nichts. Mit Abschluss des negativen wird die 
//Adresse geschoben und die Schrittkette erhöht
SK03: NOP   0; 

      SET   ; 
      S     #EAX_GEN_OM_ID_CLOCK; 

      L     #SB_Data_Counter; 
      L     1; 
      SLW   ; 
      T     #SW_Bit_Mask; 


      U(    ; 
      L     #SW_Bit_Mask; 
      L     #SW_Send_Data_0; 
      UW    ; 
      ==I   ; 
      )     ; 
      =     #EAX_GEN_OM_ID_DATA_0; 


      U(    ; 
      L     #SW_Bit_Mask; 
      L     #SW_Send_Data_1; 
      UW    ; 
      ==I   ; 
      )     ; 
      =     #EAX_GEN_OM_ID_DATA_1; 


      CLR   ; 
      SE    #ET_Clock; 
      SET   ; 
      L     #ES5T_Clock; 
      SE    #ET_Clock; 


      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 

NETWORK
TITLE =Aufnehmen der zurückgesandten Adresse
//Mit einer neg. Flanke des Takt wird die Adressrückmeldung vom PILZ-Smartkey 
//ausgewertet
SK04: NOP   0; 

      U     #ET_Clock; 
      SPBN  SEND; 

      SET   ; 
      R     #EAX_GEN_OM_ID_CLOCK; 

      CLR   ; 
      SE    #ET_Clock; 
      SET   ; 
      L     #ES5T_Clock; 
      SE    #ET_Clock; 


      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 

NETWORK
TITLE =Übertragung der Adresse
//Generierung des Takt mit 50msec 1:1. Im positiven Taktzustand wird ein 
//Adressbit 
//ausgegeben im negativen geschieht nichts. Mit Abschluss des negativen wird die 
//Adresse geschoben und die Schrittkette erhöht
SK05: NOP   0; 

      U     #ET_Clock; 
      SPBN  SEND; 

      X     #EAX_GEN_OM_ID_DATA_0; 
      X     #EX_GEN_OM_ID_DATA_0; 
      O     ; 
      X     #EAX_GEN_OM_ID_DATA_1; 
      X     #EX_GEN_OM_ID_DATA_1; 
      SPBN  S05a; 

      L     0; 
      T     #SW_Schrittkette; 

      SPA   SSRT; 

S05a: NOP   0; 

      U(    ; 
      L     #SB_Data_Counter; 
      L     0; 
      >I    ; 
      )     ; 
      SPBN  S05b; 

      L     #SB_Data_Counter; 
      DEC   1; 
      T     #SB_Data_Counter; 

      L     #SW_Schrittkette; 
      DEC   2; 
      T     #SW_Schrittkette; 

      SPA   SSRT; 

S05b: NOP   0; 

      L     #SW_Schrittkette; 
      INC   1; 
      T     #SW_Schrittkette; 

NETWORK
TITLE =
//Roboter meldet Fehler
SEND: NOP   0; 

END_FUNCTION_BLOCK

