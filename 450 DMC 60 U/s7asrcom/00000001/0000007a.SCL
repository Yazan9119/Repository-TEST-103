FUNCTION "FC_RANGIER_PW_DATA1" : VOID

TITLE = ''
//$Revision: 1.23 $
//$Date: 2008/08/27 15:01:52CEST $
//$Author: schmoelp $

VAR_INPUT
PlatzNr: INT  ;// Eingangsparameter
bTransport: INT; // 1.rangiere von Platz auf Transporter 2.rangiere von Transporter auf Platz, 3.rangiere bei PW 
END_VAR

VAR_IN_OUT
  // Durchgangsparameter
END_VAR

VAR_OUTPUT
retWert: BOOL; // 1 --> Daten rangiert     
 // Ausgangsparameter
END_VAR

VAR_TEMP
   tiPalNr: INT;
   tsPrgName: STRING[32];
   tsOrdnerName: STRING[32];
   tbyStatus: BYTE;
   txWRSoTeil: BOOL;
   txaktiv: BOOL; 
   txdefekt: BOOL;       
   txbearbeitet: BOOL;        
   txSpannhyd: BOOL;
   txPal_schwer: BOOL;
   tsLeer: STRING[32];
   i: INT;
   tint_RET_VAL: INT;
   tQuelle: INT;
   tZiel: INT;

   // temporäre Variablen
END_VAR

BEGIN

retWert:= 1;
tsLeer:='                                ';

// Anweisungsteil
// von Platz auf Transporter
// 0:Maschine,1:Überpl1,2:Überpl2,3:Transportw,4:Ruepl,5-xx:Speicherpl 1 -- xx 

IF bTransport=1 THEN 
    tQuelle:=PlatzNr;
    tZiel:=3;
END_IF;

IF bTransport=2 THEN 
    tQuelle:=3;
    tZiel:=PlatzNr;
END_IF;

IF (bTransport=1) OR (bTransport=2) THEN 

// von Platz auf Transport oder von Transport auf Platz
   CASE PlatzNr OF
       1,2,4,5,6,7,8,9,10,11,12,13,14:

       "DB_PAL_NR".Platz[tZiel].Prg_Name      := tsLeer;
       "DB_PAL_NR".Platz[tZiel].Ordner_Name   := tsLeer;

       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PAL_NR".Platz[tQuelle],
       DSTBLK := "DB_PAL_NR".Platz[tZiel]);

       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PAL_NR".Platz[16],
       DSTBLK := "DB_PAL_NR".Platz[tQuelle]);

       //SpannHydraulik-Daten  0:Maschine  1:Rüstplatz-Maschine  16: Leerplatz
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph[tQuelle],
       DSTBLK := "DB_PV_SpH".Sph[tZiel]);
  
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph[16],
       DSTBLK := "DB_PV_SpH".Sph[tQuelle]);

       //SpannHydraulik-Daten-Erweiterung  0:Maschine  1:Rüstplatz-Maschine  16: Leerplatz
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph_Erw[tQuelle],
       DSTBLK := "DB_PV_SpH".Sph_Erw[tZiel]);
  
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph_Erw[16],
       DSTBLK := "DB_PV_SpH".Sph_Erw[tQuelle]);

       //FD-SpannHydraulik-Daten  0:Maschine  1:Rüstplatz-Maschine  16: Leerplatz
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph_FD[tQuelle],
       DSTBLK := "DB_PV_SpH".Sph_FD[tZiel]);
  
       tint_RET_VAL := BLKMOVE(
       SRCBLK := "DB_PV_SpH".Sph_FD[16],
       DSTBLK := "DB_PV_SpH".Sph_FD[tQuelle]);

       // Programmliste 4-Seitenbearbeitung
       FOR i:=1 TO 4 BY 1 DO  
           "DB_PRG_LISTE".Platz[tZiel].Seite[i].Prg_Name      := tsLeer; 
           "DB_PRG_LISTE".Platz[tZiel].Seite[i].Ordner_Name   := tsLeer;

           tint_RET_VAL := BLKMOVE(
           SRCBLK := "DB_PRG_LISTE".Platz[tQuelle].Seite[i],
           DSTBLK := "DB_PRG_LISTE".Platz[tZiel].Seite[i]);

           tint_RET_VAL := BLKMOVE(
           SRCBLK := "DB_PRG_LISTE".Platz[16].Seite[i],
           DSTBLK := "DB_PRG_LISTE".Platz[tQuelle].Seite[i]);
       END_FOR; 
 
       // Tausch der erweiterten Palettendaten zur Werkstück-Identifikation
       // 0:Maschine, 3: Drehstation, 4:Rüstplatz, 12: Leerplatz
       IF ("DB_PLC_MD_DB20".UDHex._32_Bit1_RPL_Erweit_Data = true) THEN
           tint_RET_VAL := BLKMOVE(
           SRCBLK := "DB_WORKPIECE_IDENT".Platz[tQuelle],
           DSTBLK := "DB_WORKPIECE_IDENT".Platz[tZiel]);
    
           tint_RET_VAL := BLKMOVE(
           SRCBLK := "DB_WORKPIECE_IDENT".Platz[16],
           DSTBLK := "DB_WORKPIECE_IDENT".Platz[tQuelle]);
       END_IF; 

   ELSE: 
     retWert:= 0; 
     RETURN;
   END_CASE ; 

ELSE

   IF (bTransport=3) THEN 
      // von Maschine auf Übergabeplatz und umgekehrt
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PAL_NR".Platz[0],
      DSTBLK := "DB_PAL_NR".Platz[15]);
  
      "DB_PAL_NR".Platz[0].Prg_Name      := tsLeer; 
      "DB_PAL_NR".Platz[0].Ordner_Name   := tsLeer;
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PAL_NR".Platz[1],
      DSTBLK := "DB_PAL_NR".Platz[0]);

      "DB_PAL_NR".Platz[1].Prg_Name      :=tsLeer;
      "DB_PAL_NR".Platz[1].Ordner_Name   :=tsLeer;
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PAL_NR".Platz[15],
      DSTBLK := "DB_PAL_NR".Platz[1]);
                
      //SpannHydraulik-Daten  0:Maschine   1:Rüstplatz-Maschine   15: temporärer Speicherplatz
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph[0],
      DSTBLK := "DB_PV_SpH".Sph[15]);
  
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph[1],
      DSTBLK := "DB_PV_SpH".Sph[0]);

      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph[15],
      DSTBLK := "DB_PV_SpH".Sph[1]);

      //SpannHydraulik-Daten-Erweiterung  0:Maschine   1:Rüstplatz-Maschine   15: temporärer Speicherplatz
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_Erw[0],
      DSTBLK := "DB_PV_SpH".Sph_Erw[15]);
  
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_Erw[1],
      DSTBLK := "DB_PV_SpH".Sph_Erw[0]);

      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_Erw[15],
      DSTBLK := "DB_PV_SpH".Sph_Erw[1]);
         
      //FD-SpannHydraulik-Daten  0:Maschine   1:Rüstplatz-Maschine   15: temporärer Speicherplatz
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_FD[0],
      DSTBLK := "DB_PV_SpH".Sph_FD[15]);
  
      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_FD[1],
      DSTBLK := "DB_PV_SpH".Sph_FD[0]);

      tint_RET_VAL := BLKMOVE(
      SRCBLK := "DB_PV_SpH".Sph_FD[15],
      DSTBLK := "DB_PV_SpH".Sph_FD[1]);

      // Programmliste 4-Seitenbearbeitung
      FOR i:=1 TO 4 BY 1 DO  

          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_PRG_LISTE".Platz[0].Seite[i],
          DSTBLK := "DB_PRG_LISTE".Platz[15].Seite[i]);
  
          "DB_PRG_LISTE".Platz[0].Seite[i].Prg_Name      := tsLeer; 
          "DB_PRG_LISTE".Platz[0].Seite[i].Ordner_Name   := tsLeer;
          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_PRG_LISTE".Platz[1].Seite[i],
          DSTBLK := "DB_PRG_LISTE".Platz[0].Seite[i]);

          "DB_PRG_LISTE".Platz[1].Seite[i].Prg_Name      :=tsLeer;
          "DB_PRG_LISTE".Platz[1].Seite[i].Ordner_Name   :=tsLeer;
          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_PRG_LISTE".Platz[15].Seite[i],
          DSTBLK := "DB_PRG_LISTE".Platz[1].Seite[i]);
                
      END_FOR; 

      // Tausch der erweiterten Palettendaten zur Werkstück-Identifikation
      // 0:Maschine, 3: Drehstation, 4:Rüstplatz, 15: temporärer Speicherplatz
      IF ("DB_PLC_MD_DB20".UDHex._32_Bit1_RPL_Erweit_Data = true) THEN
          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_WORKPIECE_IDENT".Platz[0],
          DSTBLK := "DB_WORKPIECE_IDENT".Platz[15]);
    
          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_WORKPIECE_IDENT".Platz[1],
          DSTBLK := "DB_WORKPIECE_IDENT".Platz[0]);

          tint_RET_VAL := BLKMOVE(
          SRCBLK := "DB_WORKPIECE_IDENT".Platz[15],
          DSTBLK := "DB_WORKPIECE_IDENT".Platz[1]);       
      END_IF;

      IF ((PlatzNr = 0) AND ("DB_PLC_MD_DB20".UDHex._32_Bit1_RPL_Erweit_Data = true)) THEN
          "DB_PS_ADVANCED_DATA".GUDWriteData.GUD_Write_Request:= true;   
      END_IF;

   ELSE
     retWert:= 0; 
     RETURN;
   END_IF ; 

END_IF;

END_FUNCTION
