FUNCTION "FC_CS_BHG_MPI" : VOID
TITLE =
//$Revision: 1.12 $
//$Date: 2007/10/18 14:13:29CEST $
//$Author: hgc $
AUTHOR : FUH
VERSION : 0.1


VAR_TEMP
  PI_BHG_aktiv : BOOL ;	
  PI_Handrad : BOOL ;	
  PI_Anwahl_X : BOOL ;	
  PI_Anwahl_C : BOOL ;	
  PI_BHG_JOG : BOOL ;	
  InPos_alle : BOOL ;	
  TX_GEO_aktiv : BOOL ;	
  INC1 : BOOL ;	
  INC100 : BOOL ;	
  INC1_DEL : BOOL ;	
  T_Teilapparat : BOOL ;	
  TB_A_INC : BYTE ;	
  TX_A_HW1 : BOOL ;	
  TX_E_HW1 : BOOL ;	
  T_Zustimm_oder_Tuerzu : BOOL ;	
  PI_BHG_deaktiviert : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =

      L     "DB_PLC_MD_DB20".UDInt._029_BEDIENOPTIION_SIE; 
      L     2; 
      ==I   ; 
      SPBN  MEND; 

NETWORK
TITLE =Flanke für Handrad EIN

      U     "I_DM_Ta_BHG"; 
      O     "DB_BHG_MPI".Eingang.Taste_Handrad; 
      FP    "M_pos_Fl_Tas_BHG_aktiv"; 
      =     #PI_Handrad; 
NETWORK
TITLE =Lampentest

      UN    "MX_BHG_Lampentest"; 
      SPB   nola; 

      L     255; 
      T     DB290.DBB    8; 
      T     DB290.DBB    9; 
      SPA   MEND; 

nola: NOP   0; 
NETWORK
TITLE =Schlüsselschalter EIN

      U     "DB_BHG_MPI".Eingang.Schluesselschalter; 
      UN    "DB_SIEM_KANAL_1".E_ChanActive; 
      S     "MX_BHG_aktiv"; 

      UN    "DB_BHG_MPI".Eingang.Schluesselschalter; 
      UN    "DB_SIEM_KANAL_1".E_ChanActive; 
      R     "MX_BHG_aktiv"; 

      U     "MX_BHG_aktiv"; 
      FP    "MX_FP_BHG_aktiv"; 
      =     #PI_BHG_aktiv; 

      U     "DB_BHG_MPI".Eingang.Schluesselschalter; 
      FN    "MX_FN_BHG_aktiv"; 
      =     #PI_BHG_deaktiviert; 

      U     "MX_BHG_aktiv"; 
      SPB   AKT; 

      L     0; 
//      T     "MW_Nr_Bereitst"
      T     "MB_Wert_0"; 
      T     DB290.DBB    8; 
      T     DB290.DBB    9; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 
      T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 
      CLR   ; 
      =     "DB_ACHSE1_X".A_HW1; 
      =     "DB_ACHSE2_Y".A_HW1; 
      =     "DB_ACHSE3_Z".A_HW1; 
      =     "DB_ACHSE4".A_HW1; 
      =     "DB_ACHSE5".A_HW1; 
      =     "DB_SIEM_KANAL_1".A_Geo[1].HW1; 
      =     "DB_SIEM_KANAL_1".A_Geo[2].HW1; 
      =     "DB_SIEM_KANAL_1".A_Geo[3].HW1; 
      SPA   M001; 

//Reset
AKT:  U     "DB_BHG_MPI".Eingang.Taste_Reset; 
      SPBN  KRES; 
      SET   ; 
      =     "MX_BHG_Reset"; 
KRES: NOP   0; 
NETWORK
TITLE =Zustimmtaste
// sja 28.4.05 entprellen des Eingangs Zustimmtaste
      U     "MX_BHG_aktiv"; 
      U     "I_HR_Anwahl"; 
      L     S5T#200MS; 
      SA    "TV_HR_Entprell"; 
      U     "TV_HR_Entprell"; 
      =     "O_Umsch_Zustimm_HR"; 

NETWORK
TITLE =JOG

      U     "DB_BHG_MPI".Eingang.Taste_JOG; 
      S     "MX_BHG_Anf_JOG"; 
      R     "MX_BHG_Anf_Single"; 

      U     "MX_BHG_Anf_JOG"; 
      FP    "HM_PI_BHG_Anf_JOG"; 
      =     #PI_BHG_JOG; 

      U     #PI_BHG_JOG; 
      =     "MSSTst BA JOG"; 

      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.manual; 
      R     "MX_BHG_Anf_JOG"; 

      U     "MX_BHG_Anf_JOG"; 
      R     "MSSTst BA AUTO"; 
      R     "MSSTst BA MDA"; 

      U     "DB_CMM_PLC".CMM_OUT.base_sig.main_mode_mill.manual; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_JOG; //Anzeige Jog     

NETWORK
TITLE =Kühlmittel 1 

      U     "DB_BHG_MPI".Eingang.Taste_Kuehlmittel; //Taste Kühlmittel
      =     "MX_BHG_KM1_EinAus"; 
      =     "I_DM_Ta_KMTL"; 

      U     "M_M8_Act"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Kuehlmittel; //Anzeige Kühlmittel 1
NETWORK
TITLE =Kühlmittel 2
//      U     "IX_BHG_Taste_T2"           //Taste Kühlmittel 2
//      =     "MX_BHG_KM2_EinAus"
//
//      U     "M_M7_Act"
//      =     "OX_BHG_LED_L2"             //Anzeige Kühlmittel 2
NETWORK
TITLE =
//FUH: 12.11.2003
//
//Wenn Cycle 800 und WKS aktiv ist und nicht SRT - Maschine, mit den Geoachsen 
//verfahren
      U     "DB_ICON"._1.UI_17; //TCARR aktiv
      U     "DB_SIEM_MMC".A_ActWCS; 
      UN(   ; 
      L     "DB_PLC_MD_DB20".UDInt._042_ANWAHL_KINE_TYP; 
      L     1; 
      ==I   ; 
      )     ; 
      =     #TX_GEO_aktiv; 
NETWORK
TITLE =Achsen
//Richtungstaste +
      U     "DB_BHG_MPI".Eingang.Taste_Plus; 
      UN    "MX_BHG_Handrad_aktiv"; 
      U     "M_Leistung_Steht_an"; 
      UN    "DB_BHG_MPI".Ausgang.Anzeige_Vorschub_Halt; 
      =     "MX_BHG_Taste_plus"; 

//Richtungstaste -

      U     "DB_BHG_MPI".Eingang.Taste_Minus; 
      UN    "MX_BHG_Handrad_aktiv"; 
      U     "M_Leistung_Steht_an"; 
      UN    "DB_BHG_MPI".Ausgang.Anzeige_Vorschub_Halt; 
      =     "MX_BHG_Taste_minus"; 

//Eilgangüberlagerung

      U     "DB_BHG_MPI".Eingang.Taste_Eilgang; 
      U     "I_AL_Kabine_zu"; 
      =     "MX_BHG_Taste_Eilgang"; 
      =     "I_DM_Ta Eilgang"; 

//Achsvorwahl X

      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_X; 
      FP    "HM_PI_Taste_X_Anwahl"; 
      =     #PI_Anwahl_X; 

      U     #PI_Anwahl_X; 
      UN    "DB_BHG_MPI".Eingang.Taste_Anwahl_C; 
      S     "MX_BHG_X_Vorwahl"; 
      R     "MX_BHG_Y_Vorwahl"; 
      R     "MX_BHG_Z_Vorwahl"; 
      R     "MX_BHG_C_Vorwahl"; 
      R     "MX_BHG_5/6_Vorwahl"; 

//Achsvorwahl Y

      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_Y; 
      R     "MX_BHG_X_Vorwahl"; 
      S     "MX_BHG_Y_Vorwahl"; 
      R     "MX_BHG_Z_Vorwahl"; 
      R     "MX_BHG_C_Vorwahl"; 
      R     "MX_BHG_5/6_Vorwahl"; 

//Achsvorwahl Z

      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_Z; 
      R     "MX_BHG_X_Vorwahl"; 
      R     "MX_BHG_Y_Vorwahl"; 
      S     "MX_BHG_Z_Vorwahl"; 
      R     "MX_BHG_C_Vorwahl"; 
      R     "MX_BHG_5/6_Vorwahl"; 

//Achsvorwahl C

      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_C; 
      FP    "HM_PI_Taste_C_Anwahl"; 
      =     #PI_Anwahl_C; 

      U     #PI_Anwahl_C; 
      UN    "DB_BHG_MPI".Eingang.Taste_Anwahl_X; 
      R     "MX_BHG_X_Vorwahl"; 
      R     "MX_BHG_Y_Vorwahl"; 
      R     "MX_BHG_Z_Vorwahl"; 
      S     "MX_BHG_C_Vorwahl"; 
      R     "MX_BHG_5/6_Vorwahl"; 

//Achsvorwahl 5/6. Achse

      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_X; 
      U     "DB_BHG_MPI".Eingang.Taste_Anwahl_C; 
      R     "MX_BHG_X_Vorwahl"; 
      R     "MX_BHG_Y_Vorwahl"; 
      R     "MX_BHG_Z_Vorwahl"; 
      R     "MX_BHG_C_Vorwahl"; 
      S     "MX_BHG_5/6_Vorwahl"; 

//Anzeige BHG X-Achse

      U     "MX_BHG_X_Vorwahl"; 
      O     "MX_BHG_5/6_Vorwahl"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_X; 

//Anzeige BHG Y-Achse

      U     "MX_BHG_Y_Vorwahl"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Y; 

//Anzeige BHG Z-Achse

      U     "MX_BHG_Z_Vorwahl"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Z; 

//Anzeige BHG C-Achse

      U     "MX_BHG_C_Vorwahl"; 
      O     "MX_BHG_5/6_Vorwahl"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_C; 

NETWORK
TITLE =Handrad-Funktion aktivieren

      U(    ; 
      O     "MX_BHG_X_Vorwahl"; 
      O     "MX_BHG_Y_Vorwahl"; 
      O     "MX_BHG_Z_Vorwahl"; 
      O     "MX_BHG_C_Vorwahl"; 
      O     "MX_BHG_5/6_Vorwahl"; 
      )     ; 
      U(    ; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC1; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC10; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC100; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC1000; 
      )     ; 
      U     "MX_BHG_aktiv"; 
      U     #PI_Handrad; 
      SPBN  HRAD; 

      UN    "MX_BHG_Handrad_aktiv"; 
      =     "MX_BHG_Handrad_aktiv"; 

HRAD: UN    "MX_BHG_Handrad_aktiv"; 
      O     "DB_BHG_MPI".Eingang.Taste_JOG; 
      ON    "M_Handbetrieb"; // "DB_SIEM_BAG".E_JOG
      R     "MX_BHG_Handrad_aktiv"; 

//Anzeige Handrad aktiv
      U     "MX_BHG_Handrad_aktiv"; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Handrad; 

//X-Achse für Handrad aktivieren
      U     "MX_BHG_X_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      UN    #TX_GEO_aktiv; 
      =     "DB_ACHSE1_X".A_HW1; 

      U     "MX_BHG_X_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      U     #TX_GEO_aktiv; 
      =     "DB_SIEM_KANAL_1".A_Geo[1].HW1; 

//Y-Achse für Handrad aktivieren
      U     "MX_BHG_Y_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      UN    #TX_GEO_aktiv; 
      =     "DB_ACHSE2_Y".A_HW1; 

      U     "MX_BHG_Y_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      U     #TX_GEO_aktiv; 
      =     "DB_SIEM_KANAL_1".A_Geo[2].HW1; 

//Z-Achse für Handrad aktivieren
      U     "MX_BHG_Z_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      UN    #TX_GEO_aktiv; 
      =     "DB_ACHSE3_Z".A_HW1; 

      U     "MX_BHG_Z_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      U     #TX_GEO_aktiv; 
      =     "DB_SIEM_KANAL_1".A_Geo[3].HW1; 

//C-Achse für Handrad aktivieren
      U     "M_4Achse_existiert"; 
      SPBN  n9a; 
      U     "MX_BHG_C_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      =     "DB_ACHSE4".A_HW1; 
n9a:  NOP   0; 
//B-Achse für Handrad aktivieren
      U     "M_5Achse_existiert"; 
      SPBN  n9b; 
      U     "MX_BHG_5/6_Vorwahl"; 
      U     "MX_BHG_Handrad_aktiv"; 
      =     "DB_ACHSE5".A_HW1; 
n9b:  NOP   0; 
NETWORK
TITLE =Inkrementelles Verfahren

      U     "DB_BHG_MPI".Eingang.Taste_INC10; //BHG: Taste INC10
      U     "DB_BHG_MPI".Eingang.Taste_INC100; //BHG: Taste INC100
      S     "MX_BHG_Taste_INC1000"; 

      UN    "DB_BHG_MPI".Eingang.Taste_INC10; //BHG: Taste INC10
      UN    "DB_BHG_MPI".Eingang.Taste_INC100; //BHG: Taste INC100
      R     "MX_BHG_Taste_INC1000"; 

      U     "DB_BHG_MPI".Eingang.Taste_INC100; //BHG: Taste INC100
      UN    "MX_BHG_Taste_INC1000"; 
      =     "MX_BHG_Anf_INC_100"; 
      =     "MSSTst 100 INC"; 

      U     "DB_BHG_MPI".Eingang.Taste_INC10; //BHG: Taste INC10
      UN    "MX_BHG_Taste_INC1000"; 
      =     "MX_BHG_Anf_INC_10"; 
      =     "MSSTst 10 INC"; 

      U     "DB_BHG_MPI".Eingang.Taste_INC1; //BHG: Taste INC1
      =     "MX_BHG_Anf_INC_1"; 
      =     "MSSTst 1 INC"; 

      U     "DB_BHG_MPI".Eingang.Taste_INC10; //BHG: Taste INC10
      U     "DB_BHG_MPI".Eingang.Taste_INC100; //BHG: Taste INC100
      S     "MSSTst 1000 INC"; 

      UN    "DB_BHG_MPI".Eingang.Taste_INC10; //BHG: Taste INC10
      UN    "DB_BHG_MPI".Eingang.Taste_INC100; //BHG: Taste INC100
      R     "MSSTst 1000 INC"; 

      U     "MSSTst 1000 INC"; 
      =     "MX_BHG_Anf_INC_1000"; 

      U     "DB_SIEM_KANAL_1".E_Geo[1].INC1; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_INC1; 

      U     "DB_SIEM_KANAL_1".E_Geo[1].INC10; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC1000; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_INC10; 

      U     "DB_SIEM_KANAL_1".E_Geo[1].INC100; 
      O     "DB_SIEM_KANAL_1".E_Geo[1].INC1000; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_INC100; 

NETWORK
TITLE =Inkrementeinstellung
//sja 02-04-01
//
//bei angewaehltem BHG kann durch Tastendruck das gültige Inkrement für 
//Normal und für Eilgang (zusammen mit Eilgangtaste!) verstellt werden 
      U     "MX_BHG_aktiv"; 
      SPBN  IEND; 

      U     "I_HR_Eilgang_Taste"; 
      SPB   EILG; 


//-------- Normal -------------------------

      L     "DB_REMANENT".Handrad_Inkrement_normal; // aktuelle Inkrementeinstellung fuer normal

      U     "MSSTst var. INC"; 
      SPBN  n1; 
      L     1; 

n1:   U     "MSSTst 1 INC"; 
      SPBN  n2; 
      L     2; 

n2:   U     "MSSTst 10 INC"; 
      SPBN  n3; 
      L     3; 

n3:   U     "MSSTst 100 INC"; 
      O(    ; 
      U     "MSSTst 1000 INC"; 
      U(    ; 
      O     "M_Einrichtbetrieb"; 
      O     "M_3Te_Betriebsart"; 
      O     "M_4Te_Betriebsart"; 
      )     ; 
      )     ; 
      SPBN  n4; 
      L     4; 
      SPA   nend; 

n4:   U     "MSSTst 1000 INC"; 
      UN    "M_Einrichtbetrieb"; 
      UN    "M_3Te_Betriebsart"; 
      UN    "M_4Te_Betriebsart"; 
      SPBN  nend; 
      L     5; 


nend: T     "DB_REMANENT".Handrad_Inkrement_normal; 
      SPA   IEND; 


//------------ Eilgang ---------------------

EILG: L     "DB_REMANENT".Handrad_Inkrement_Eilgan; // aktuelle Inkrementeinstellung für Eilgang

      U     "MSSTst var. INC"; 
      SPBN  e1; 
      L     1; 

e1:   U     "MSSTst 1 INC"; 
      SPBN  e2; 
      L     2; 

e2:   U     "MSSTst 10 INC"; 
      SPBN  e3; 
      L     3; 

e3:   U     "MSSTst 100 INC"; 
      O(    ; 
      U     "MSSTst 1000 INC"; 
      U(    ; 
      O     "M_Einrichtbetrieb"; 
      O     "M_3Te_Betriebsart"; 
      O     "M_4Te_Betriebsart"; 
      )     ; 
      )     ; 
      SPBN  e4; 
      L     4; 
      SPA   eend; 

e4:   U     "MSSTst 1000 INC"; 
      UN    "M_Einrichtbetrieb"; 
      UN    "M_3Te_Betriebsart"; 
      UN    "M_4Te_Betriebsart"; 
      SPBN  eend; 
      L     5; 

eend: T     "DB_REMANENT".Handrad_Inkrement_Eilgan; 



IEND: NOP   0; 


NETWORK
TITLE =Einzelsatz

      U     "DB_BHG_MPI".Eingang.Taste_AUTO; 
      =     "MSSTst Einzelsatz"; 

      U     "DB_SIEM_KANAL_1".A_SBL; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Auto; 
NETWORK
TITLE =Vorschub Halt / Spindel Stop

      U     "DB_BHG_MPI".Eingang.Taste_VorschSpindel_Halt; 
      =     "MX_BHG_Anf_VorschHalt"; 
      R     "MSSTst Feed Halt *"; 
      R     E      1.5; 

      U     "DB_ICON"._1.UI_30; //Icon für Vorschub Halt
      =     "DB_BHG_MPI".Ausgang.Anzeige_Vorschub_Halt; 
NETWORK
TITLE =Vorschub Start

      U     "DB_BHG_MPI".Eingang.Taste_Handrad; 
      U     "MX_BHG_Handrad_aktiv"; 
      O     "DB_BHG_MPI".Eingang.Taste_Vorschub_Start; 
      O     "DB_BHG_MPI".Eingang.Taste_Spindel_Start; 
      SPBN  n14a; 
      SET   ; 
      =     "MX_BHG_Anf_VorschStart"; 
      =     "I_DM_Ta_Feed_Start"; 

n14a: U     "DB_ICON"._1.UI_15; //Anzeige für Vorschub Ein
      =     "DB_BHG_MPI".Ausgang.Anzeige_Vorschub_Start; 
NETWORK
TITLE =Spindel Start

      U     "DB_BHG_MPI".Eingang.Taste_Spindel_Start; 
      U(    ; 
      UN    "I_AL_Kabine_zu"; 
      U     "O_Umsch_Zustimm_HR"; 
      O     "I_AL_Kabine_zu"; 
      )     ; 
      S     "MX_BHG_Anf_SpindelStart"; 

      O     "DB_BHG_MPI".Eingang.Taste_VorschSpindel_Halt; 
      O     "M_Reset_Taste"; 
      O     ; 
      UN    "I_AL_Kabine_zu"; 
      UN    "O_Umsch_Zustimm_HR"; 
      R     "MX_BHG_Anf_SpindelStart"; 

      U     "DB_ICON"._1.UI_27; 
      O     "DB_ICON"._1.UI_28; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_Spindel_Ein; 
NETWORK
TITLE =Zyklus Start

      U     "DB_BHG_MPI".Eingang.Taste_NC_Start; 
      =     "MX_BHG_Anf_NC-Start"; 
      =     "MSSTst_NC_Start"; 

      U     "DB_ICON"._1.UI_12; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_NC_Start; 
NETWORK
TITLE =NC-Stop

      UN    "MSSTst NC-Stop *"; 
      =     "M_NCStop_aktiv"; 

      U     "DB_BHG_MPI".Eingang.Taste_NC_Stop; 
      =     "MX_BHG_Anf_NC-Stop"; 

      UN    "MX_BHG_Anf_NC-Stop"; 
      UN    "M_NCStop_aktiv"; 
      =     "MSSTst NC-Stop *"; 

      U     "DB_ICON"._1.UI_13; 
      =     "DB_BHG_MPI".Ausgang.Anzeige_NC_Stop; 
NETWORK
TITLE =Vorschubkorrektur BHG

      L     DB290.DBW    4; 
      SLW   10; 
      SRW   11; 
      T     "MW_BHG_Vorschub"; 

//Begrenzung auf 100% bei offener Tür
      U     "M_Leistung_Steht_an"; 
      UN    "I_AL_Kabine_zu"; 
      U(    ; 
      L     2#11010; 
      L     "MW_BGH_Vorschub_LSB"; 
      <I    ; 
      )     ; 
      SPBN  TRAN; 
      TAK   ; 
TRAN: T     "MB_VS_Korr_BHG"; 


      SPA   EIL; 

      L     "MB_VS_Korr_BHG"; 
      L     1; //Schalterstellung 0
      ==I   ; 
      SPB   EIL; 

      TAK   ; 
      L     B#16#4; //Schalterstellung BHG 10%
      ==I   ; 
      SPB   G10; 

      TAK   ; 
      L     B#16#C; //Schalterstellung BHG 20%
      ==I   ; 
      SPB   G20; 

      TAK   ; 
      L     B#16#D; //Schalterstellung BHG 30%
      ==I   ; 
      SPB   G30; 

      TAK   ; 
      L     B#16#F; //Schalterstellung BHG 40%
      ==I   ; 
      SPB   G40; 

      TAK   ; 
      L     B#16#E; //Schalterstellung BHG 50%
      ==I   ; 
      SPB   G50; 

      TAK   ; 
      L     B#16#A; //Schalterstellung BHG 60%
      ==I   ; 
      SPB   G60; 

      TAK   ; 
      L     B#16#B; //Schalterstellung BHG 70%
      ==I   ; 
      SPB   G70; 

      TAK   ; 
      L     B#16#8; //Schalterstellung BHG 80%
      ==I   ; 
      SPB   G80; 

      TAK   ; 
      L     B#16#19; //Schalterstellung BHG 90%
      ==I   ; 
      SPB   G90; 

      TAK   ; 
      L     B#16#1A; //Schalterstellung BHG 100%
      ==I   ; 
      SPB   G100; 

      TAK   ; 
      L     B#16#1F; //Schalterstellung BHG 110%
      ==I   ; 
      SPB   G100; 

      L     0; 
      SPA   EIL; 

G10:  L     B#16#A; //Schalterstellung für Eilgang 10%
      SPA   EIL; 

G20:  L     B#16#9; //Schalterstellung für Eilgang 20%
      SPA   EIL; 

G30:  L     B#16#8; //Schalterstellung für Eilgang 30%
      SPA   EIL; 

G40:  L     B#16#18; //Schalterstellung für Eilgang 40%
      SPA   EIL; 

G50:  L     B#16#19; //Schalterstellung für Eilgang 50%
      SPA   EIL; 

G60:  L     B#16#1B; //Schalterstellung für Eilgang 60%
      SPA   EIL; 

G70:  L     B#16#1A; //Schalterstellung für Eilgang 70%
      SPA   EIL; 

G80:  L     B#16#1E; //Schalterstellung für Eilgang 80%
      SPA   EIL; 

G90:  L     B#16#1F; //Schalterstellung für Eilgang 90%
      SPA   EIL; 

G100: L     B#16#1C; //Schalterstellung für Eilgang 100%
      SPA   EIL; 

      T     "MB_VS_Korr_BHG"; 
      L     "MSST_Vorschub_OVR"; 
      UW    W#16#FFE0; 
      L     "MSST_Vorschub_OVR"; 
      OW    ; 
      T     "MSST_Vorschub_OVR"; 


//Vorschuboverride BHG auch für Eilgang benützen

EIL:  L     "MB_VS_Korr_BHG"; 
      L     1; //Schalterstellung 0
      ==I   ; 
      SPB   EILK; 

      TAK   ; 
      L     B#16#4; //Schalterstellung BHG 10%
      ==I   ; 
      SPB   P10; 

      TAK   ; 
      L     B#16#C; //Schalterstellung BHG 20%
      ==I   ; 
      SPB   P20; 

      TAK   ; 
      L     B#16#D; //Schalterstellung BHG 30%
      ==I   ; 
      SPB   P30; 

      TAK   ; 
      L     B#16#F; //Schalterstellung BHG 40%
      ==I   ; 
      SPB   P40; 

      TAK   ; 
      L     B#16#E; //Schalterstellung BHG 50%
      ==I   ; 
      SPB   P50; 

      TAK   ; 
      L     B#16#A; //Schalterstellung BHG 60%
      ==I   ; 
      SPB   P60; 

      TAK   ; 
      L     B#16#B; //Schalterstellung BHG 70%
      ==I   ; 
      SPB   P70; 

      TAK   ; 
      L     B#16#8; //Schalterstellung BHG 80%
      ==I   ; 
      SPB   P80; 

      TAK   ; 
      L     B#16#19; //Schalterstellung BHG 90%
      ==I   ; 
      SPB   P90; 

      TAK   ; 
      L     B#16#1A; //Schalterstellung BHG 100%
      ==I   ; 
      SPB   P100; 

      TAK   ; 
      L     B#16#1F; //Schalterstellung BHG 110%
      ==I   ; 
      SPB   P100; 

      L     0; 
      SPA   EILK; 

P10:  L     B#16#A; //Schalterstellung für Eilgang 10%
      SPA   EILK; 

P20:  L     B#16#9; //Schalterstellung für Eilgang 20%
      SPA   EILK; 

P30:  L     B#16#8; //Schalterstellung für Eilgang 30%
      SPA   EILK; 

P40:  L     B#16#18; //Schalterstellung für Eilgang 40%
      SPA   EILK; 

P50:  L     B#16#19; //Schalterstellung für Eilgang 50%
      SPA   EILK; 

P60:  L     B#16#1B; //Schalterstellung für Eilgang 60%
      SPA   EILK; 

P70:  L     B#16#1A; //Schalterstellung für Eilgang 70%
      SPA   EILK; 

P80:  L     B#16#1F; //Schalterstellung für Eilgang 80%
      SPA   EILK; 

P90:  L     B#16#1C; //Schalterstellung für Eilgang 90%
      SPA   EILK; 

P100: L     B#16#15; //Schalterstellung für Eilgang 100%
      SPA   EILK; 

EILK: T     "MB_Eil_Korr_BHG"; 
      L     "MSST_Eilgang_OVR"; 
      UW    W#16#FFE0; 
      L     "MB_Eil_Korr_BHG"; 
      OW    ; 
      T     "MSST_Eilgang_OVR"; 


      L     "MSST_Eilgang_OVR"; 

      L     "MB_Eil_Korr_BHG"; 
      T     "MSST_Vorschub_OVR"; 


      L     "MSST_Eilgang_OVR"; //Schalterstellung für 0%
      L     1; 
      ==I   ; 
      SPBN  n18a; 
      SET   ; 
      =     "DB_FEHLERMELDUNG".Meldung._702002_MBHG_Override0; 
n18a: NOP   0; 
NETWORK
TITLE =Fahren der Achsen über BHG-Tastatur

      U     "MX_BHG_X_Vorwahl"; 
      U     "MX_BHG_Taste_plus"; 
      =     "I_DM_Ta X-Achse plus"; 

      U     "MX_BHG_X_Vorwahl"; 
      U     "MX_BHG_Taste_minus"; 
      =     "I_DM_Ta X-Achse minus"; 

      U     "MX_BHG_Y_Vorwahl"; 
      U     "MX_BHG_Taste_plus"; 
      =     "I_DM_Ta Y-Achse plus"; 

      U     "MX_BHG_Y_Vorwahl"; 
      U     "MX_BHG_Taste_minus"; 
      =     "I_DM_Ta Y-Achse minus"; 

      U     "MX_BHG_Z_Vorwahl"; 
      U     "MX_BHG_Taste_plus"; 
      =     "I_DM_Ta Z-Achse plus"; 

      U     "MX_BHG_Z_Vorwahl"; 
      U     "MX_BHG_Taste_minus"; 
      =     "I_DM_Ta Z-Achse minus"; 

      U     "MX_BHG_C_Vorwahl"; 
      U     "MX_BHG_Taste_plus"; 
      =     "I_DM_Ta 4-Achse rechts"; 

      U     "MX_BHG_C_Vorwahl"; 
      U     "MX_BHG_Taste_minus"; 
      =     "I_DM_Ta 4-Achse links"; 

      U     "MX_BHG_5/6_Vorwahl"; 
      U     "MX_BHG_Taste_plus"; 
      =     "I_DM_Ta_5/6-Achse plus"; 

      U     "MX_BHG_5/6_Vorwahl"; 
      U     "MX_BHG_Taste_minus"; 
      =     "I_DM_Ta_5/6-Achse minus"; 

M001: NOP   0; 
NETWORK
TITLE =Zustimmtaste oder Tuer geschlossen und BHG angewaehlt
//SJA 13-06-00
//BHG angewaehlt (ueber Taste) BHG und angeschlossen und Zustimm-Taste oder Tuere 
//zu -->
//T_Zustimm_oder_Tuerzu = 1
//
      U     "MX_BHG_aktiv"; 
      U(    ; 
      O     "I_HR_Anwahl"; 
      O     "M_Spritz_Tuer_Zu"; 
      )     ; 
      =     #T_Zustimm_oder_Tuerzu; 
NETWORK
TITLE = Löschen INC 1
//04-02-01 sja Ablöschen aller möglichen INC's
//
//
//bei Verfahren durch Plus-/Minus Tasten oder bei (keine HR-Freigabe und keine 
//Maschine ein und keine Handrad-Leistung)
//
//
//--> abloeschen der INC1 (Plus-Minus wird je nach Override-Stellung verfahren)
//--> ueberspringe NW15/16 (setzen Inc 1 ider Inc 100 (Eilgang))
      UN    #T_Zustimm_oder_Tuerzu; // sja 13-06-00
      UN    "M_MA_Maschine_Ein"; 
      UN    "MX_BHG_Handrad_aktiv"; 
      O     "I_HR_plus_Taste"; 
      O     "I_HR_minus_Taste"; 
      =     #INC1_DEL; 

      U     #INC1_DEL; 
      SPBN  HL7; 

      L     0; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 
      T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 

      UN    "M_4Achse_existiert"; //nein
      SPB   HL4; 
      T     DB34.DBB    5; //AchsDB Achse 5 vorhanden ?

HL4:  UN    "M_5Achse_existiert"; //nein
      SPB   HL5; 

      T     DB35.DBB    5; 

HL5:  UN    "M_6Achse_existiert"; 
      SPB   HL6; 

      T     DB36.DBB    5; 


HL6:  U     #T_Teilapparat; 
      SPBN  HL7; 

      T     #TB_A_INC; 

HL7:  U     #INC1_DEL; 
      SPB   HAND; 
NETWORK
TITLE = Handrad: kein Eilgang // INC 1 
//04-02-01 sja
//setzen von angewaehltem INC
//
//Handrad bereit und kein Eilgang
//--> setzen von INC1
      U     "MX_BHG_Handrad_aktiv"; 
      UN    "I_HR_Eilgang_Taste"; 
      =     #INC1; 

      U     #INC1; 
      SPBN  IEIL; 

      L     "DB_REMANENT".Handrad_Inkrement_normal; // angewaehltes Inkrement

      SPL   I0; // an Ende, wenn grösser 5
      SPA   I0; // an Ende wenn 0
      SPA   I1; // Inc Var
      SPA   I2; // Inc 1
      SPA   I3; // Inc 10
      SPA   I4; // Inc 100
      SPA   I5; // Inc 1000

I0:   SPA   IE5; 

// -------- variables Inkrement angewaehlt ----------------------

I1:   L     32; 

      SET   ; 
      S     "MSSTLED var. INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      SPA   IE5; 


// -------- 1 Inkrement angewaehlt ----------------------


I2:   SET   ; 
      S     "MSSTLED 1 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     1; 

      SPA   IE5; 

// -------- 10 Inkrement angewaehlt ----------------------


I3:   SET   ; 
      S     "MSSTLED 10 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     2; 
      SPA   IE5; 

// -------- 100 Inkrement angewaehlt ----------------------
I4:   SET   ; 
      S     "MSSTLED 100 INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     4; 
      SPA   IE5; 

// -------- 1000 Inkrement angewaehlt ----------------------


I5:   SET   ; 
      S     "MSSTLED 1000 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1 INC"; 

      L     8; 

IE5:  U     #TX_GEO_aktiv; 
      SPB   IGa1; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 
      L     0; 
      T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 
      TAK   ; 
      SPA   IGa2; 

IGa1: T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 

IGa2: NOP   0; 

      U     "M_4Achse_existiert"; 
      SPBN  A5te; 
      T     DB34.DBB    5; 

A5te: U     "M_5Achse_existiert"; 
      SPBN  A6te; 
      T     DB35.DBB    5; 

A6te: U     "M_6Achse_existiert"; 
      SPBN  A11e; 
      T     DB36.DBB    5; 

A11e: U     #T_Teilapparat; 
      SPBN  Aend; 

      T     #TB_A_INC; 

Aend: NOP   0; 
NETWORK
TITLE = Handrad Taste Eilgang entspricht INC 100 
//Hnadrad und Eilgang
//--> setzen von INC100
IEIL: U     "MX_BHG_Handrad_aktiv"; 
      U     "I_HR_Eilgang_Taste"; 
      =     #INC100; 

      U     #INC100; 
      SPBN  IEEN; 

      L     "DB_REMANENT".Handrad_Inkrement_Eilgan; // angewaehltes Inkrement

      SPL   E0; // an Ende, wenn grösser 5
      SPA   E0; // an Ende wenn 0
      SPA   E1; // Inc Var
      SPA   E2; // Inc 1
      SPA   E3; // Inc 10
      SPA   E4; // Inc 100
      SPA   E5; // Inc 1000

E0:   SPA   IH5; 

// -------- variables Inkrement angewaehlt ----------------------

E1:   SET   ; 
      S     "MSSTLED var. INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     32; 

      SPA   IH5; 

// -------- 1 Inkrement angewaehlt ----------------------

E2:   SET   ; 
      S     "MSSTLED 1 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     1; 
      SPA   IH5; 

// -------- 10 Inkrement angewaehlt ----------------------

E3:   SET   ; 
      S     "MSSTLED 10 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     2; 

      SPA   IH5; 

// -------- 100 Inkrement angewaehlt ----------------------

E4:   SET   ; 
      S     "MSSTLED 100 INC"; 
      R     "MSSTLED 1 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1000 INC"; 

      L     4; 

      SPA   IH5; 

// -------- 1000 Inkrement angewaehlt ----------------------

E5:   SET   ; 
      S     "MSSTLED 1000 INC"; 
      R     "MSSTLED 100 INC"; 
      R     "MSSTLED var. INC"; 
      R     "MSSTLED 10 INC"; 
      R     "MSSTLED 1 INC"; 

      L     8; 

IH5:  U     #TX_GEO_aktiv; 
      SPB   IGe1; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 
      L     0; 
      T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 
      TAK   ; 
      SPA   IGe2; 

IGe1: T     DB21.DBB   13; 
      T     DB21.DBB   17; 
      T     DB21.DBB   21; 
      T     DB31.DBB    5; 
      T     DB32.DBB    5; 
      T     DB33.DBB    5; 

IGe2: NOP   0; 
      U     "M_4Achse_existiert"; 
      SPBN  I5te; 
      T     DB34.DBB    5; 

I5te: U     "M_5Achse_existiert"; 
      SPBN  I6te; 
      T     DB35.DBB    5; 

I6te: U     "M_6Achse_existiert"; 
      SPBN  I11e; 
      T     DB36.DBB    5; 

I11e: U     #T_Teilapparat; 
      SPBN  IEEN; 

      T     #TB_A_INC; 


IEEN: NOP   0; 
HAND: NOP   0; 
NETWORK
TITLE =Achsenwerte von NC holen
//BHG aktivieren
      SET   ; 
      =     "DB_BHG_MPI".Ausgang.Einsignal; 

//Aktuell Achsen-SOLL-/IST-Werte (MKS) lesen
      U     "DB_SIEM_MMC".A_ActWCS; 
      X     "DB_BHG_MPI".letzter_Zustand_MKS; 
      =     "MX_WKS_MKS_Aend"; 

      U     "DB_SIEM_MMC".A_ActWCS; 
      =     "DB_BHG_MPI".letzter_Zustand_MKS; 

      U     "M_4Achse_existiert"; 
      SPBN  n20a; 
      U     "DB_ACHSE4".E_ExactFine; 
      =     "MX_AX4_InPos_Fein"; 

n20a: U     "M_5Achse_existiert"; 
      SPBN  n20b; 
      U     "DB_ACHSE5".E_ExactFine; 
      =     "MX_AX5_InPos_Fein"; 

n20b: U     "DB_ACHSE1_X".E_ExactFine; 
      U     "DB_ACHSE2_Y".E_ExactFine; 
      U     "DB_ACHSE3_Z".E_ExactFine; 
      U(    ; 
      U     "MX_AX4_InPos_Fein"; 
      ON    "M_4Achse_existiert"; 
      )     ; 
      U(    ; 
      U     "MX_AX5_InPos_Fein"; 
      ON    "M_5Achse_existiert"; 
      )     ; 
      =     #InPos_alle; 

      U     #InPos_alle; 
      U     "MX_BHG_aktiv"; 
      UN    "MX_BHG_Taste_plus"; 
      UN    "MX_BHG_Taste_minus"; 
      L     S5T#500MS; 
      SV    "TV_BHG_Anz_Akt"; 

      U(    ; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_X; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_Y; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_Z; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_C; 
      )     ; 
      UN    "DB_SIEM_MMC".A_ActWCS; 
      UN    "MX_NC_Datueb_aktiv"; 
      U     "MX_BHG_aktiv"; 
      U(    ; 
      U     "MX_BHG_Taste_plus"; 
      O     "MX_BHG_Taste_minus"; 
      O     "TV_BHG_Anz_Akt"; 
      O     "MX_WKS_MKS_Aend"; 
      ON    #InPos_alle; 
      )     ; 
      UN    "DB_BHG_MPI".MKS_uebertragen; 
      UN    "DB_BHG_MPI".MKS_uebertragen_Teil2; 
      O     ; 
      UN    "DB_SIEM_MMC".A_ActWCS; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      UN    "DB_BHG_MPI".MKS_uebertragen; 
      UN    "DB_BHG_MPI".MKS_uebertragen_Teil2; 
      UN    "MX_RD_akt_Pos_MKS"; 
      S     "MX_RD_akt_Pos_MKS"; 
      S     "MX_NC_Datueb_aktiv"; 

      U     "DB_BHG_MPI".MKS_uebertragen; 
      UN    "DB_BHG_MPI".Lesen_Teil2; 
      U     "MX_RD_akt_Pos_MKS"; 
      O     ; 
      U     "DB_BHG_MPI".MKS_uebertragen_Teil2; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      U     "MX_RD_akt_Pos_MKS"; 
      O     "M_Reset_Taste"; 
      R     "DB_BHG_MPI".Lesen_Teil2; 
      R     "MX_RD_akt_Pos_MKS"; 
      R     "MX_NC_Datueb_aktiv"; 

      U     "DB_SIEM_MMC".A_ActWCS; 
      UN    "DB_BHG_MPI".MKS_uebertragen; 
      UN    "DB_BHG_MPI".MKS_uebertragen_Teil2; 
      UN    "MX_RD_akt_Pos_MKS"; 
      O     "DB_BHG_MPI".WKS_uebertragen; 
      O     "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      O     "MX_RD_akt_Pos_WKS"; 
      SPB   EMKS; 

      UN    "DB_BHG_MPI".MKS_uebertragen; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      O     "DB_BHG_MPI".MKS_uebertragen_Teil2; 
      SPB   MKS2; 

      CALL "FB_SIEM_GET" , "DI_FB2_AXwerte" (
           Req                      := "MX_RD_akt_Pos_MKS",
           NumVar                   := 8,
           Addr1                    := "DB_NC_VAR".C1_SEMA_cmdContrPos1_9,
           Addr2                    := "DB_NC_VAR".C1_SEMA_measPos11_5,
           Addr3                    := "DB_NC_VAR".C1_SEMA_cmdContrPos2_9,
           Addr4                    := "DB_NC_VAR".C1_SEMA_measPos12_5,
           Addr5                    := "DB_NC_VAR".C1_SEMA_cmdContrPos3_9,
           Addr6                    := "DB_NC_VAR".C1_SEMA_measPos13_5,
           Addr7                    := "DB_NC_VAR".C1_SEMA_cmdContrPos4_9,
           Addr8                    := "DB_NC_VAR".C1_SEMA_measPos14_5,
           Error                    := "DB_BHG_MPI".FB2_Error_MKS,
           NDR                      := "DB_BHG_MPI".MKS_uebertragen,
           State                    := "DB_BHG_MPI".MKS_Error_State,
           RD1                      := "DB_BHG_MPI".Sollwert_X,
           RD2                      := "DB_BHG_MPI".Istwert_X,
           RD3                      := "DB_BHG_MPI".Sollwert_Y,
           RD4                      := "DB_BHG_MPI".Istwert_Y,
           RD5                      := "DB_BHG_MPI".Sollwert_Z,
           RD6                      := "DB_BHG_MPI".Istwert_Z,
           RD7                      := "DB_BHG_MPI".Sollwert_C,
           RD8                      := "DB_BHG_MPI".Istwert_C);

      U     "DB_BHG_MPI".MKS_uebertragen; 
      U     "MX_RD_akt_Pos_MKS"; 
      U     "M_5Achse_existiert"; 
      R     "MX_RD_akt_Pos_MKS"; 
      S     "DB_BHG_MPI".Lesen_Teil2; 
      SPA   EMKS; 

MKS2: CALL "FB_SIEM_GET" , "DI_FB2_AXwerte" (
           Req                      := "MX_RD_akt_Pos_MKS",
           NumVar                   := 2,
           Addr1                    := "DB_NC_VAR".C1_SEMA_cmdContrPos5_9,
           Addr2                    := "DB_NC_VAR".C1_SEMA_measPos15_5,
           Error                    := "DB_BHG_MPI".FB2_Error_MKS,
           NDR                      := "DB_BHG_MPI".MKS_uebertragen_Teil2,
           State                    := "DB_BHG_MPI".MKS_Error_State,
           RD1                      := "DB_BHG_MPI".Sollwert_B,
           RD2                      := "DB_BHG_MPI".Istwert_B);

      SPA   EWKS; 

//Aktuelle Achsen-Soll-/IST-Werte (WKS) lesen
EMKS: U(    ; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_X; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_Y; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_Z; 
      O     "DB_BHG_MPI".Ausgang.Anzeige_C; 
      )     ; 
      U     "DB_SIEM_MMC".A_ActWCS; 
      UN    "MX_NC_Datueb_aktiv"; 
      U     "MX_BHG_aktiv"; 
      U(    ; 
      U     "MX_BHG_Taste_plus"; 
      O     "MX_BHG_Taste_minus"; 
      O     "TV_BHG_Anz_Akt"; 
      O     "MX_WKS_MKS_Aend"; 
      ON    #InPos_alle; 
      )     ; 
      UN    "DB_BHG_MPI".WKS_uebertragen; 
      UN    "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      O     ; 
      U     "DB_SIEM_MMC".A_ActWCS; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      UN    "DB_BHG_MPI".WKS_uebertragen; 
      UN    "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      S     "MX_RD_akt_Pos_WKS"; 
      S     "MX_NC_Datueb_aktiv"; 

      U     "DB_BHG_MPI".WKS_uebertragen; 
      UN    "DB_BHG_MPI".Lesen_Teil2; 
      U     "MX_RD_akt_Pos_WKS"; 
      O     ; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      U     "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      U     "MX_RD_akt_Pos_WKS"; 
      O     "M_Reset_Taste"; 
      R     "DB_BHG_MPI".Lesen_Teil2; 
      R     "MX_RD_akt_Pos_WKS"; 
      R     "MX_NC_Datueb_aktiv"; 

      UN    "DB_SIEM_MMC".A_ActWCS; 
      UN    "DB_BHG_MPI".WKS_uebertragen; 
      UN    "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      UN    "MX_RD_akt_Pos_WKS"; 
      SPB   EWKS; 

      UN    "DB_BHG_MPI".WKS_uebertragen; 
      U     "DB_BHG_MPI".Lesen_Teil2; 
      O     "DB_BHG_MPI".WKS_uebertragen_Teil2; 
      SPB   WKS2; 

      CALL "FB_SIEM_GET" , "DI_FB2_AXwerte" (
           Req                      := "MX_RD_akt_Pos_WKS",
           NumVar                   := 8,
           Addr1                    := "DB_NC_VAR".C1_SGA_cmdProgPos1_9,
           Addr2                    := "DB_NC_VAR".C1_SGA_actProgPos1_10,
           Addr3                    := "DB_NC_VAR".C1_SGA_cmdProgPos2_9,
           Addr4                    := "DB_NC_VAR".C1_SGA_actProgPos2_10,
           Addr5                    := "DB_NC_VAR".C1_SGA_cmdProgPos3_9,
           Addr6                    := "DB_NC_VAR".C1_SGA_actProgPos3_10,
           Addr7                    := "DB_NC_VAR".C1_SGA_cmdProgPos4_9,
           Addr8                    := "DB_NC_VAR".C1_SGA_actProgPos4_10,
           Error                    := "DB_BHG_MPI".FB2_Error_WKS,
           NDR                      := "DB_BHG_MPI".WKS_uebertragen,
           State                    := "DB_BHG_MPI".WKS_Error_State,
           RD1                      := "DB_BHG_MPI".Sollwert_X,
           RD2                      := "DB_BHG_MPI".Istwert_X,
           RD3                      := "DB_BHG_MPI".Sollwert_Y,
           RD4                      := "DB_BHG_MPI".Istwert_Y,
           RD5                      := "DB_BHG_MPI".Sollwert_Z,
           RD6                      := "DB_BHG_MPI".Istwert_Z,
           RD7                      := "DB_BHG_MPI".Sollwert_C,
           RD8                      := "DB_BHG_MPI".Istwert_C);

      U     "DB_BHG_MPI".WKS_uebertragen; 
      U     "MX_RD_akt_Pos_WKS"; 
      U     "M_5Achse_existiert"; 
      R     "MX_RD_akt_Pos_WKS"; 
      S     "DB_BHG_MPI".Lesen_Teil2; 
      SPA   EWKS; 

WKS2: CALL "FB_SIEM_GET" , "DI_FB2_AXwerte" (
           Req                      := "MX_RD_akt_Pos_WKS",
           NumVar                   := 2,
           Addr1                    := "DB_NC_VAR".C1_SGA_cmdProgPos5_9,
           Addr2                    := "DB_NC_VAR".C1_SGA_actProgPos5_10,
           Error                    := "DB_BHG_MPI".FB2_Error_WKS,
           NDR                      := "DB_BHG_MPI".WKS_uebertragen_Teil2,
           State                    := "DB_BHG_MPI".WKS_Error_State,
           RD1                      := "DB_BHG_MPI".Sollwert_B,
           RD2                      := "DB_BHG_MPI".Istwert_B);

EWKS: NOP   0; 
NETWORK
TITLE =BHG-Display ansteuern
//SOLL/IST-Wert X-Achse
      U     "DB_BHG_MPI".Ausgang.Anzeige_X; 
      UN    "DB_BHG_MPI".Ausgang.Anzeige_C; 
      SPBN  YACH; 

//SOLL-Wert X-Achse

      CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_X,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_X,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert X-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_X,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_X,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

      SPA   EBHG; 

YACH: NOP   0; 
//SOLL/IST-Wert Y-Achse

      U     "DB_BHG_MPI".Ausgang.Anzeige_Y; 
      SPBN  ZACH; 

//SOLL-Wert Y-Achse

      CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_Y,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_Y,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert Y-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_Y,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_Y,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

      SPA   EBHG; 

ZACH: NOP   0; 
//SOLL/IST-Wert Z-Achse

      U     "DB_BHG_MPI".Ausgang.Anzeige_Z; 
      SPBN  CACH; 

//SOLL-Wert Z-Achse

      CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_Z,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_Z,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert Z-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_Z,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_Z,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

      SPA   EBHG; 

CACH: NOP   0; 

//SOLL/IST-Wert C-Achse

      U     "DB_BHG_MPI".Ausgang.Anzeige_C; 
      UN    "DB_BHG_MPI".Ausgang.Anzeige_X; 
      SPBN  BACH; 

//SOLL-Wert C-Achse

      CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_C,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_C,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert C-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_C,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_C,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

      SPA   EBHG; 

BACH: NOP   0; 
//SOLL/IST-Wert B-Achse

      U     "DB_BHG_MPI".Ausgang.Anzeige_X; 
      U     "DB_BHG_MPI".Ausgang.Anzeige_C; 
      SPBN  EBHG; 

      L     "DB_PLC_MD_DB20".UDInt._007_ANWAHL_FRAESKOPF; 
      L     4; 
      ==I   ; 
      SPB   AAX; 
//SOLL-Wert B-Achse

      CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_B,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_B,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert B-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_B,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_B,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");
      SPA   EBHG; 
//SOLL-Wert A-Achse

AAX:  CALL "BHGDisp" (
           Row                      := B#16#3,
           ChrArray                 := "DB_BHG_MPI".Display_A,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Sollwert_B,
           DataType                 := B#16#8,
           StringAddr               := 16,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

//IST-Wert A-Achse

      CALL "BHGDisp" (
           Row                      := B#16#0,
           ChrArray                 := "DB_BHG_MPI".Display_A,
           Convert                  := "DB_BHG_MPI".Eingang.Quittierung_Anzeige,
           Addr                     := "DB_BHG_MPI".Istwert_B,
           DataType                 := B#16#8,
           StringAddr               := 32,
           Digits                   := B#16#3,
           Error                    := "M_Error_WR_FC13");

EBHG: NOP   0; 
NETWORK
TITLE =Betriebsmeldung

      U     "MX_BHG_aktiv"; 
      =     "DB_FEHLERMELDUNG".Meldung._702003_MBHG_aktiv; 
NETWORK
TITLE =

MEND: NOP   0; 

END_FUNCTION

