FUNCTION "FC_ROB_MIT_RPL_MAIN" : VOID
TITLE =
//$Revision: 1.17 $
//$Date: 2008/10/02 10:16:57CEST $
//$Author: riedlh $
VERSION : 0.1


VAR_INPUT
  i_ROBOT_SS_AUTOM_EIN : BOOL ;	//"I_ROBOT_AUTOM_EIN" Schlüsselschalter "Roboter EIN"
  i_RPL_TUER_OFFEN_LINKS : BOOL ;	//"I_PW_RP_TUER_1_OFFEN 
  i_RPL_TUER_OFFEN_RECHTS : BOOL ;	//"I_PW_RP_TUER_2_OFFEN 
  i_RPL_TUER_VERRIEGELT : BOOL ;	//"I_RPT_verriegelt"
  i_RPL_TUER_ZU : BOOL ;	//"I_PW_Tuer_Ruestpl_Zu"
  i_ALK_SS_AUS : BOOL ;	//"I_SP_RPL_ALK_AUS"
  i_RPL_ALK1_OK : BOOL ;	//"O_SP_RPL_ALK1_OK"
  i_RPL_ALK2_OK : BOOL ;	//"O_SP_RPL_ALK2_OK"
  i_RPL_ALK3_OK : BOOL ;	//"O_SP_RPL_ALK3_OK"
  i_RPL_ALK4_OK : BOOL ;	//"O_SP_RPL_ALK4_OK"
  i_KM_RPL_DUSCHE : BOOL ;	//"O_KM_RP_Dusche_Ventil"
  i_VORR_ABBLASEN : BOOL ;	//"O_SP_VORR_ABBLASEN"
  i_Schutzzaun_ZuVerr : BOOL ;	//I_SCHUTZZAUN_ZU
  i_PW_Ablauf_in_GRST : BOOL ;	//Merker PW-Ablauf in GRST
  i_RPL_0_GRAD_FIXIERT : BOOL ;	//Rüstplatz 0-Grad-Position fixiert
END_VAR
VAR_IN_OUT
  io_RPL_PW_Freigabe : BOOL ;	
END_VAR
VAR_TEMP
  dummy : BOOL ;	
  t_RPL_TUER_OFFEN : BOOL ;	
  keine_ABST_Handling : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =Netzwerk-Doku-Übersicht
// Netzwerk-Übersicht
// ==================
// NW 1: Netzwerk-Doku-Übersicht
// NW 2: 701117 "VS-HA-HPT, ext. Gerät hält Achsen an (nur bei NICHT-G00)
// NW 3: 701400 "WAR, Sperre PW-Freigabe von externem Gerät"
// NW 4: Reset von ABST: Handlingsystem
// NW 5: Baustein-Ende bedingt
// NW 6: ProfiBus: Daten von Roboter über DP/DP-Coupler einlesen 
// NW 7: Roboter ist eingeschaltet und Automation aktiv
// NW 8: Maschine auf Betriebsart "Automation mit Roboter"
// NW 9: Rüstplatz-Tür ist offen
// NW 10: Roboter ist eingeschaltet und Automation aktiv
// NW 11: vonROB: Befehl Rüstplatz spuelen
// NW 12: vonROB: Befehl Rüstplatz abblasen
// NW 13: ProfiBus: Daten an Roboter über DP/DP-Coupler übergeben
// NW 14: Maschinen Konfigurations-Daten
      NOP   0; 

NETWORK
TITLE =701117 "VS-HA-HPT, ext. Gerät hält Achsen an (nur bei NICHT-G00)
//Externes Gerät meldet VS-HLT-Achsen, weil z.B. externe Vorrichtungsüberwachung
//meldet, dass nicht korrekt gespannt ist.
//G00 und JOG muss frei sein, damit ein PW-Ablauf zum Tauschen der 
//defekten Palette oder REFPKT-Fahren erfolgen kann.
      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Haupt._701117_ext_Geraet; 
      U     "DB_ROB_IF".IN.gesamt.Achsen_Stop_extern; 
      UN    "M_G00_aktiv"; 
      UN    "M_Handbetrieb"; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Haupt._701117_ext_Geraet; 
      NOP   0; 
NETWORK
TITLE =701400 "WAR, Sperre PW-Freigabe von externem Gerät"

      U     "DB_ROB_IF".IN.gesamt.PW_Sperre_extern; 
      =     "DB_FEHLERMELDUNG".WARNUNG2._701400_PW_Sperre; 
NETWORK
TITLE =

      U     #i_PW_Ablauf_in_GRST; 
      =     L      1.0; 
      BLD   103; 
      U     "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T1_belegt; 
      =     L      1.1; 
      BLD   103; 
      U     "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T2_belegt; 
      =     L      1.2; 
      BLD   103; 
      U     #i_ROBOT_SS_AUTOM_EIN; 
      =     L      1.3; 
      BLD   103; 
      CALL "FC_ROB_MPL_STAT_ERW" (
           i_PW_inGRST              := L      1.0,
           i_PalV_MPL_T1_belegt     := L      1.1,
           i_PalV_MPL_T2_belegt     := L      1.2,
           i_SS_ROBOTER_EIN         := L      1.3,
           io_MPL_T1_bearbeitet     := "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T1_bearbeitet,
           io_MPL_T1_NIO            := "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T1_niO,
           io_MPL_T2_bearbeitet     := "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T2_bearbeitet,
           io_MPL_T2_NIO            := "DB_PV_SpH".SpH_Erw[0].Stelle[1].Status.T2_niO);
      NOP   0; 
NETWORK
TITLE =Reset von ABST: Handlingsystem
//FMs zurücksetzen, wenn ABST für Roboter-Schnittstelle abgewählt ist.
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.HASYS_ROB_BELADUNG_RPL; 
      R     "DB_ROB_IF".STAT.Roboter.Automation_ein; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async2._701649_LZ_Roboter; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510226_BTB_Roboter; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async2._701648_Rob_Stoerbereich; 
      R     "DB_FEHLERMELDUNG".MELDUNG5._510228_NotAus_Roboter; 
      R     "DB_FEHLERMELDUNG".Meldung._702217_Schutzzaun_offen; 
      =     #keine_ABST_Handling; 

NETWORK
TITLE =Baustein-Ende bedingt

      U     #keine_ABST_Handling; 
      SPB   ENDE; 
NETWORK
TITLE =ProfiBus: Daten von Roboter über DP/DP-Coupler einlesen 

      U     "m_eins"; 
      =     L      1.0; 
      BLD   103; 
      U     "m_null"; 
      =     L      1.1; 
      BLD   103; 
      CALL "FC_UT_IO_PROFIBUS" (
           read                     := L      1.0,
           write                    := L      1.1,
           Datenbereich             := "DB_ROB_IF".IN,
           Profibus_ADR             := "DB_CONFIG".ProfiBus.StartAdrPLC.IN_Robot);
      NOP   0; 


NETWORK
TITLE =Roboter ist eingeschaltet und Automation aktiv

      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.HASYS_ROB_BELADUNG_RPL; 
      U     #i_ROBOT_SS_AUTOM_EIN; 
      =     "DB_ROB_IF".STAT.Roboter.Automation_ein; 
      =     "DB_ROB_IF".OUT.gesamt.SS_Roboter_EIN; 
NETWORK
TITLE =Maschine auf Betriebsart "Automation mit Roboter"

      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.HASYS_ROB_BELADUNG_RPL; 
      R     "DB_ROB_IF".OUT.gesamt.Automation_ein; 
      R     "DB_ROB_IF".OUT.gesamt.FG_Schutzzaun_oeffnen; 
      R     "DB_ROB_IF".OUT.gesamt.MPL_RPL_leer; 
NETWORK
TITLE =Rüstplatz-Tür ist offen

      U     #i_RPL_TUER_OFFEN_LINKS; 
      U     #i_RPL_TUER_OFFEN_RECHTS; 
      O     "DB_OUT".AmxSusDoorOpen; 
      =     #t_RPL_TUER_OFFEN; 
NETWORK
TITLE =Roboter ist eingeschaltet und Automation aktiv

      CALL "FC_IF_DMC_ROBOTER" (
           EX_Freigabe              := "DB_ROB_IF".STAT.Roboter.Automation_ein,
           EX_Takt_1Hz              := "m_takt_1sec.",
           EX_Leistung_steht_an     := "M_Leistung_Steht_an",
           EX_Kein_NotAus           := "DB_SPL".MK_NEG_NOT_HALT,
           EX_Automatikbetrieb      := "M_Automatik_Betrieb",
           EX_RPL_TUER_ZU           := #i_RPL_TUER_ZU,
           EX_RPL_TUER_OFFEN        := #t_RPL_TUER_OFFEN,
           ER_RPL_Position          := "DB_ACHSE_RPL".MR_IstPosition,
           EX_RPL_TUER_VERRIEGELT   := #i_RPL_TUER_VERRIEGELT,
           EX_ALK_SS_AUS            := #i_ALK_SS_AUS,
           EX_RPL_ALK1_OK           := #i_RPL_ALK1_OK,
           EX_RPL_ALK2_OK           := #i_RPL_ALK2_OK,
           EX_RPL_ALK3_OK           := #i_RPL_ALK3_OK,
           EX_RPL_ALK4_OK           := #i_RPL_ALK4_OK,
           EX_KM_RP_DUSCHE          := #i_KM_RPL_DUSCHE,
           EX_VORR_ABBLASEN         := #i_VORR_ABBLASEN,
           EX_PW_Ablauf_in_GRST     := #i_PW_Ablauf_in_GRST,
           EX_SCHUTZZAUN_VERRIEGELT := #i_Schutzzaun_ZuVerr,
           EX_SS_ROBOTERBETRIEB     := #i_ROBOT_SS_AUTOM_EIN,
           EX_RPL_0_GRAD_FIXIERT    := #i_RPL_0_GRAD_FIXIERT,
           EAX_Fehler_LZ_Roboter    := "DB_FEHLERMELDUNG".VS_Halt_Async2._701649_LZ_Roboter,
           EAX_Fehler_Roboter_BTB   := "DB_FEHLERMELDUNG".MELDUNG5._510226_BTB_Roboter,
           EAX_Lader_im_Stoerber    := "DB_FEHLERMELDUNG".VS_Halt_Async2._701648_Rob_Stoerbereich,
           EAX_Roboter_NotAus       := "DB_FEHLERMELDUNG".MELDUNG5._510228_NotAus_Roboter,
           EAX_Schutzzaun_ni_zu     := "DB_FEHLERMELDUNG".Meldung._702217_Schutzzaun_offen,
           EAX_RPL_PW_Freigabe      := #io_RPL_PW_Freigabe);

NETWORK
TITLE =vonROB: Befehl Rüstplatz spuelen

      U     "DB_ROB_IF".IN.RPL.Bef_Vorrichtung_Spuelen; 
      U     #i_ROBOT_SS_AUTOM_EIN; 
      =     "DB_HR".vonROB.Bef_RP_spuelen; 
NETWORK
TITLE =vonROB: Befehl Rüstplatz abblasen

      U     "DB_ROB_IF".IN.RPL.Bef_Vorrichtung_Abblasen; 
      U     #i_ROBOT_SS_AUTOM_EIN; 
      =     "DB_HR".vonROB.Bef_RP_abblasen; 
NETWORK
TITLE =ProfiBus: Daten an Roboter über DP/DP-Coupler übergeben

      U     "m_null"; 
      =     L      1.0; 
      BLD   103; 
      U     "m_eins"; 
      =     L      1.1; 
      BLD   103; 
      CALL "FC_UT_IO_PROFIBUS" (
           read                     := L      1.0,
           write                    := L      1.1,
           Datenbereich             := "DB_ROB_IF".OUT,
           Profibus_ADR             := "DB_CONFIG".ProfiBus.StartAdrPLC.OUT_Robot);
      NOP   0; 
NETWORK
TITLE =Maschinen Konfigurations-Daten

ENDE: U     #dummy; 
      =     #dummy; 
END_FUNCTION

