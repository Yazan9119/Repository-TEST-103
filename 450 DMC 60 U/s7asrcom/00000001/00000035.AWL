FUNCTION "FC_UT_BIT_TO_DEZ" : VOID
TITLE =
//$Revision: 1.5 $
//$Date: 2007/07/16 13:12:53CEST $
//$Author: riedlh $

//
// Umwandlung Bit in Dezimal
AUTHOR : PS
FAMILY : DMC_H
NAME : BIT_ZAHL
VERSION : 0.0


VAR_INPUT
  Bit_Zeiger : POINTER ;	// erstes auszuwertendes Byte
  Anzahl_Byte : INT ;	// Anzahl der auszuwertenden Bytes
END_VAR
VAR_OUTPUT
  Dezimal : POINTER ;	// Ausgabe der Bit-Nummer
END_VAR
VAR_TEMP
  DB_No1 : WORD ;	
  DB_No2 : WORD ;	
  Byte_Nr : INT ;	// Zähler für Byte
  Bit_No : INT ;	
  A_Zeiger : DWORD ;	
  ZS_Byte : BYTE ;	// Funktionsbeschreibung:
// Es wird die Bitadresse eines gesetzten Bits in einer F
END_VAR
BEGIN
NETWORK
TITLE = Netzwerk 1: 

      L     P##Dezimal; 
      LAR1  ; 
      L     W [AR1,P#0.0]; 
      T     #DB_No2; 

      L     D [AR1,P#2.0]; 
      T     #A_Zeiger; 

      L     P##Bit_Zeiger; 
      LAR1  ; 
      L     W [AR1,P#0.0]; 
      T     #DB_No1; 

      L     D [AR1,P#2.0]; 
      LAR1  ; 

      AUF   DB [#DB_No1]; 

      L     0; 
      T     #Bit_No; 

      L     1; 
      T     #Byte_Nr; 

RET2: L     B [AR1,P#0.0]; 
      T     #ZS_Byte; 

RET1: L     #ZS_Byte; 
      SRW   1; 
      T     #ZS_Byte; 
      SPP   END1; // zuletzt geschobenes Bit ist 1

      L     #Bit_No; 
      INC   1; 
      T     #Bit_No; 

      SLW   13; 
      SRW   13; 
      L     0; 
      <>I   ; 
      SPB   RET1; // wenn Zahl durch 8 teilbar nächstes Byte

      L     #Anzahl_Byte; 
      L     #Byte_Nr; 
      <=I   ; 
      SPB   KBIT; 

      INC   1; 
      T     #Byte_Nr; 

      TAR1  ; 
      L     8; 
      +D    ; 
      LAR1  ; 
      SPA   RET2; 

KBIT: L     B#16#FF; 
      SPA   ENDE; 

END1: L     #Bit_No; 

ENDE: LAR1  #A_Zeiger; 
      AUF   DB [#DB_No2]; 
      T     B [AR1,P#0.0]; 

END_FUNCTION

