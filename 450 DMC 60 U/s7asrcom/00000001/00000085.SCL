FUNCTION FC_PS_SpeicherzuMa : VOID

TITLE = ''
//$Revision: 1.16 $
//$Date: 2007/11/29 13:17:11CET $
//$Author: schmoelp $

// Erstellen Transportauftrag von Speicher zu Maschine oder von Rüstplatz zu Speicher oder Maschine


VAR_INPUT
bUebpl1frei: BOOL; //Übergabeplatz 1 frei
bUebpl2frei: BOOL; //Übergabeplatz 2 frei
bMaschinefrei: BOOL; // Maschine frei
RPverfuegbar: BOOL; // Ruestplatz verfuegbar
bQuerStellung: BOOL;
iAnzahlSpPlaetze: INT;
iAnzahlJobs: INT;  
END_VAR

VAR_IN_OUT
  // Durchgangsparameter
END_VAR

VAR_OUTPUT
TR_holen: INT;
TR_bringen: INT;
b_Transport: BOOL;
END_VAR

VAR_TEMP
tintPriorzaehl: INT;
bholen:BOOL; // wenn eine Palette geholt werden muss, dann true
i: INT;
job: INT;
job_prio: INT;
tbyPrioritaet: BYTE;
tbyStatus: BYTE;
tdwStueckzahl: INT;
tdwPrgname: STRING[32];
tdwOrdname: STRING[32];
y: INT;
bPalgefunden: BOOL;
bJobMPFoWPD:BOOL;
bPalMPoWPD:BOOL; 
iSpeifrei:INT;
bUebplatzfrei: BOOL; //Palette kann auf Uebergabeplatz abgelegt werden 
bJobRohteil: BOOL;   //Job und ein Rohteil vorhanden
tUebergabeplatz: INT;
tiPriori: INT;
byprioUEP: INT;
END_VAR
   
tbyPrioritaet:=0;
tdwPrgname:='';
tdwOrdname:='';
bPalgefunden:= false;
bJobRohteil:=FALSE;
 
bUebplatzfrei:=FALSE;
iSpeifrei:=0;
b_Transport:= false;


// schauen, ob Speicherplatz frei ist 
FOR i:=5 TO (iAnzahlSpPlaetze+4) BY 1 DO
    IF ("DB_PAL_NR".Platz[i].Pal_Nr = 0) THEN
       iSpeifrei:= i;
       EXIT;
    END_IF;
END_FOR; 

// schauen, ob Uebergabeplatz frei ist
// 0:Maschine,1:Überpl1,2:Überpl2,3:Transportw,4:Ruepl,5-xx:Speicherpl 1 -- xx 

IF bUebpl1frei THEN     
   bUebplatzfrei:=TRUE;
   tUebergabeplatz := 1; // Uebergabeplatz 1
END_IF;      

IF (bUebplatzfrei=FALSE) AND (iSpeifrei=0) THEN
   RETURN;
END_IF;

// Setzen / Rücksetzen von JOB fertig
FC_PS_JOB_FERTIG(
   iAnzahlJobs :=iAnzahlJobs);  // IN: INT

// new
// check Priority of ÜP Palette, if Rohteil
// suchen nach Job mit Prioritaet  
y:=1;
byprioUep:=99;
IF (("DB_PAL_NR".Platz[y].Pal_Nr <> 0) AND ("DB_PAL_NR".Platz[y].Status = 2))  THEN// Rohteil on ÜP

  FOR tintPriorzaehl:=1 TO 20 BY 1 DO
      
   tbyPrioritaet:=WORD_TO_BYTE(INT_TO_WORD(tintPriorzaehl));

   FOR i := 1 TO iAnzahlJobs BY 1 DO
       IF (("DB_JOB".Job[i].Prg_Name) <> ' ') AND ("DB_JOB".Job[i].Prioritaet = tbyPrioritaet) THEN // if Prgnumber exists
         job_prio:= i;
         tdwStueckzahl:= WORD_TO_INT("DB_JOB".Job[job_prio].Stueckzahl);
         // Suche nach Job mit gleiche Prioritaet und kleinerer Stückzahl, dann diese Palette ausgenommen Maschinenplätze
         FOR job := i TO iAnzahlJobs BY 1 DO
             IF ("DB_JOB".Job[job].Prioritaet = tbyPrioritaet) THEN  // nächster Job gleiche Prioritaet
                IF (WORD_TO_INT("DB_JOB".Job[job].Stueckzahl) < tdwStueckzahl) THEN  // Stückzahl kleiner
                    IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[0].Prg_name) THEN  // nicht Job von Palette auf Maschine
                       IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[1].Prg_name) THEN // nicht Job von Palette auf Übergabeplatz 1
                          IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[2].Prg_name) THEN // nicht Job von Palette auf Übergabeplatz 2
                          job_prio:= job;
                          tdwStueckzahl:= WORD_TO_INT("DB_JOB".Job[job_prio].Stueckzahl);
                          END_IF;
                       END_IF;
                    END_IF;
                 END_IF;
             END_IF;
         END_FOR;
         tdwPrgname:="DB_JOB".Job[job_prio].Prg_name; // lesen von Programnummer aus Job
         bJobMPFoWPD:="DB_JOB".Job[job_prio].MPFoWPD; // Werkstück oder Teileprogramm
         tdwOrdname:="DB_JOB".Job[job_prio].Ordner_name;// lesen von Ordnername aus Job
         
          // look if Palette exists with Jobnumber on RP
          // bring Üp1 to storage/rp
          y:=4; 
             IF (tdwPrgname = "DB_PAL_NR".Platz[y].Prg_Name) THEN // Job and PalPrgnumber o.k.
                IF ((bJobMPFoWPD = "DB_PAL_NR".Platz[y].TeiloWRS) AND (tdwOrdname = "DB_PAL_NR".Platz[y].Ordner_name OR bJobMPFoWPD=0)) THEN // Werkstueck oder Teile
                   byprioUEP:=tintPriorzaehl;
                END_IF; 
             END_IF;  
      END_IF;
   
   END_FOR;
  END_FOR;
END_IF;
//end new



// suche Jobliste nach Prioritaeten von 1 bis 20 // Priority 0 --> Job inactiv
FOR tintPriorzaehl:=1 TO 20 BY 1 DO
    tbyPrioritaet:=WORD_TO_BYTE(INT_TO_WORD(tintPriorzaehl));

  // suchen nach Job mit Prioritaet  
  FOR i := 1 TO iAnzahlJobs BY 1 DO

    IF ("DB_JOB".Job[i].Prioritaet = tbyPrioritaet) THEN  // wenn Prioritaet gefunden in Jobliste

      IF (("DB_JOB".Job[i].Prg_Name) <> '') THEN // if Prgnumber exists
         job_prio:= i;
         tdwStueckzahl:= WORD_TO_INT("DB_JOB".Job[job_prio].Stueckzahl);

         // Suche nach Job mit gleiche Prioritaet und kleinerer Stückzahl, dann diese Palette ausgenommen Maschinenplätze
         FOR job := i TO iAnzahlJobs BY 1 DO
             IF (("DB_JOB".Job[job].Prioritaet = tbyPrioritaet) AND (("DB_JOB".Job[job].Prg_Name) <> '')) THEN  // nächster Job gleiche Prioritaet
                IF (WORD_TO_INT("DB_JOB".Job[job].Stueckzahl) < tdwStueckzahl) THEN  // Stückzahl kleiner
                    IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[0].Prg_name) THEN  // nicht Job von Palette auf Maschine
                       IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[1].Prg_name) THEN // nicht Job von Palette auf Übergabeplatz 1
                          IF ("DB_JOB".Job[job].Prg_Name) <> ("DB_PAL_NR".Platz[2].Prg_name) THEN // nicht Job von Palette auf Übergabeplatz 2
                             job_prio:= job;
                          END_IF;
                       END_IF;
                    END_IF;
                 END_IF;
             END_IF;
         END_FOR;
         tdwPrgname:="DB_JOB".Job[job_prio].Prg_name; // lesen von Programnummer aus Job
         bJobMPFoWPD:="DB_JOB".Job[job_prio].MPFoWPD; // Werkstück oder Teileprogramm
         tdwOrdname:="DB_JOB".Job[job_prio].Ordner_name;// lesen von Ordnername aus Job
         
         // look if Palette exists with Jobnumber on Ruestplatz
         IF (tdwPrgname = "DB_PAL_NR".Platz[4].Prg_name)AND RPverfuegbar AND ("DB_PAL_NR".Platz[4].Pal_nr  > 0) THEN // Prgnumber gefunden
             IF (bJobMPFoWPD = "DB_PAL_NR".Platz[4].TeiloWRS AND (tdwOrdname = "DB_PAL_NR".Platz[4].Ordner_name OR bJobMPFoWPD=0)) THEN // Werkstueck oder Teile
                IF ("DB_PAL_NR".Platz[4].Status = 2) THEN // wenn Status Rohteil
                    IF (bUebplatzfrei) THEN
                       b_Transport:= true;
                       Tr_holen:=4; // holen von Ruestplatz
                       Tr_bringen:= tUebergabeplatz; // bringen zu Uebergabeplatz
                    ELSE    
                       IF (byprioUEP <= tintPriorzaehl) OR (byprioUEP=99) THEN
                          b_Transport:= true;
                          Tr_holen:=4; // holen von Ruestplatz
                          Tr_bringen:=iSpeifrei; // bringen zu Speicher 
                       END_IF;
                    END_IF;

                    RETURN;
                END_IF; 
             END_IF; 
         END_IF;  
    
         // auf Speicherplaetze 1-5 schauen ,ob Palette aus Jobliste
         IF (bUebplatzfrei) THEN
             FOR y:=5 TO (iAnzahlSpPlaetze+4) BY 1 DO
                 IF (tdwPrgname = "DB_PAL_NR".Platz[y].Prg_name) AND  ("DB_PAL_NR".Platz[y].Pal_nr > 0) THEN // Prgnumber gefunden
                    IF (bJobMPFoWPD =  "DB_PAL_NR".Platz[y].TeiloWRS AND (tdwOrdname = "DB_PAL_NR".Platz[y].Ordner_name OR bJobMPFoWPD=0)) THEN // Werkstueck oder Teile
                        IF ("DB_PAL_NR".Platz[y].Status = 2) THEN // Rohteil
                           b_Transport:= true;
                           Tr_holen:=y; // holen von Platz
                           Tr_bringen:=tUebergabeplatz; // bringen zu Übergabeplatz
                           RETURN;
                        END_IF; 
                    END_IF; 
                 END_IF;  
             END_FOR;
         END_IF;

      END_IF; 

    END_IF;    

  END_FOR; // ende suche Job mit Prioritaet tbyPrioritaet

END_FOR; // ende durchsuchen Jobliste

// suche Jobliste nach kleinster Prioritaet von 21 bis 30 für Abarbeitung nach Reihenfolge
job_prio:= 0;
tbyPrioritaet:= 0;
FOR i := 1 TO iAnzahlJobs BY 1 DO
    IF ((BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) > 20) AND (("DB_JOB".Job[i].Prg_Name) <> '') AND ("DB_JOB".Job[i].fertig = FALSE)) THEN
       IF ((BYTE_TO_INT("DB_JOB".Job[i].Prioritaet) < BYTE_TO_INT(tbyPrioritaet)) OR (tbyPrioritaet = 0)) THEN 
          tbyPrioritaet:= "DB_JOB".Job[i].Prioritaet;
          job_prio:= i;
       END_IF;
    END_IF;
END_FOR;
IF (BYTE_TO_INT(tbyPrioritaet) > 0) AND (job_prio > 0) THEN
         tdwPrgname:="DB_JOB".Job[job_prio].Prg_name; // lesen von Programnummer aus Job
         bJobMPFoWPD:="DB_JOB".Job[job_prio].MPFoWPD; // Werkstück oder Teileprogramm
         tdwOrdname:="DB_JOB".Job[job_prio].Ordner_name;// lesen von Ordnername aus Job
         // look if Palette exists with Jobnumber on Ruestplatz
         IF (tdwPrgname = "DB_PAL_NR".Platz[4].Prg_name)AND RPverfuegbar AND ("DB_PAL_NR".Platz[4].Pal_nr  > 0) THEN // Prgnumber gefunden
             IF (bJobMPFoWPD = "DB_PAL_NR".Platz[4].TeiloWRS AND (tdwOrdname = "DB_PAL_NR".Platz[4].Ordner_name OR bJobMPFoWPD=0)) THEN // Werkstueck oder Teile
                IF ("DB_PAL_NR".Platz[4].Status = 2) THEN // wenn Status Rohteil
                    b_Transport:= true;
                    Tr_holen:=4; // holen von Ruestplatz
                    IF (bUebplatzfrei) THEN
                       Tr_bringen:= tUebergabeplatz; // bringen zu Uebergabeplatz
                    ELSE    
                       Tr_bringen:=iSpeifrei; // bringen zu Speicher 
                    END_IF;
                    RETURN;
                END_IF; 
             END_IF; 
         END_IF;  
         // auf Speicherplaetze 1-5 schauen ,ob Palette aus Jobliste
         IF (bUebplatzfrei) THEN
             FOR y:=5 TO (iAnzahlSpPlaetze+4) BY 1 DO
                 IF (tdwPrgname = "DB_PAL_NR".Platz[y].Prg_name) AND  ("DB_PAL_NR".Platz[y].Pal_nr > 0) THEN // Prgnumber gefunden
                    IF (bJobMPFoWPD =  "DB_PAL_NR".Platz[y].TeiloWRS AND (tdwOrdname = "DB_PAL_NR".Platz[y].Ordner_name OR bJobMPFoWPD=0)) THEN // Werkstueck oder Teile
                        IF ("DB_PAL_NR".Platz[y].Status = 2) THEN // Rohteil
                           b_Transport:= true;
                           Tr_holen:=y; // holen von Platz
                           Tr_bringen:=tUebergabeplatz; // bringen zu Übergabeplatz
                           RETURN;
                        END_IF; 
                    END_IF; 
                 END_IF;  
             END_FOR;
         END_IF;
END_IF;    

FC_Prg_Job_Suche(
   iAnzahlSpPlaetze:=iAnzahlSpPlaetze,  // IN: INT
   iAnzahlJobs     :=iAnzahlJobs);      // IN: INT

// Leerpalette zum Übergabeplatz, wenn Übergabeplatz der einzige Leerplatz ist
IF (bUebplatzfrei) AND (iSpeifrei=0) AND (RPverfuegbar) AND ("DB_JOB".Job_auf_Ruestplatz=FALSE) THEN
   IF ("DB_PAL_NR".Platz[4].Pal_nr > 0) AND ("DB_PAL_NR".Platz[4].Status = 1) THEN
      b_Transport:= true;
      Tr_holen:=4; // holen von Rüstplatz
      Tr_bringen:=tUebergabeplatz; // bringen zu Übergabeplatz
      RETURN;
   END_IF;
END_IF;

// Ein-Palettenbetrieb
// Leerpalette zur Maschine, wenn Palette in der Maschine einziger Job laut Jobliste ist
IF ("MX_1Job_Maschine"=TRUE) AND (bUebplatzfrei) AND (RPverfuegbar) THEN
   IF ("DB_PAL_NR".Platz[4].Pal_nr > 0) AND ("DB_PAL_NR".Platz[4].Status = 1) THEN
      b_Transport:= true;
      Tr_holen:=4; // holen von Rüstplatz
      Tr_bringen:=tUebergabeplatz; // bringen zu Übergabeplatz
      RETURN;
   END_IF;
   FOR y:=5 TO (iAnzahlSpPlaetze+4) BY 1 DO
       IF ("DB_PAL_NR".Platz[y].Status = 1) AND ("DB_PAL_NR".Platz[y].Pal_nr > 0) THEN // Prgnumber gefunden
          b_Transport:= true;
          Tr_holen:=y; // holen von Platz
          Tr_bringen:=tUebergabeplatz; // bringen zu Übergabeplatz
          RETURN;
       END_IF; 
   END_FOR;
END_IF;
 
// keine Palette gefunden, noch schauen, ob von RP eine auf Speicher gebracht werden kann
// Rohteil, Leerpalette oder ohne Job
IF ((iSpeifrei>0) AND (RPverfuegbar)) THEN
   IF ("DB_PAL_NR".Platz[4].Pal_nr > 0) AND (("DB_PAL_NR".Platz[4].Status = 2) OR (("DB_PAL_NR".Platz[4].Status = 1) AND NOT("DB_JOB".Job_auf_Ruestplatz))) THEN
      b_Transport:= true;
      Tr_holen:=4; // holen von RP
      Tr_bringen:=iSpeifrei; // bringen zu Speicher
   END_IF;          
END_IF;

END_FUNCTION
