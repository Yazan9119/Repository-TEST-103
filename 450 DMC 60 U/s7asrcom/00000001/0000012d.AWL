FUNCTION_BLOCK "FB_WZV_ABL_REGAL"
TITLE =
//$Revision: 1.7 $
//$Date: 2008/09/04 10:32:26CEST $
//$Author: schmoelp $
//
//===============================================================================
//Omron_Regal_Tx Werkzeug vorbereiten 
//===============================================================================
//
//erstellt: 1.2.2000 AB
//geändert: 27.06.01 AB
//   --> Aufruf Wzbruch- Erkennung 
//geändert: 18.07.02 FUH
//   --> Werkzeug vorbereiten in Zwischenspeicher
//geändert: 30.11.2006, Helmut Scheuenstuhl (slh)
//   --> WzWechsler und Regal autom. Grundstlg. fahren
//geändert: 07.12.2006, slh
//   --> umspeichern in Sr24 (Marke R24) auch bei Omronregal wenn Regalgrf. das Wz
//       gespannt hat und Kommando[2].Pos_Quitt. 
//       Bisher galt: Umspeichern bei Omron erst wenn WzwHub in Gst
//
//Version: vorläufig
//
//Konfiguration:
//
//Wechsler mit Doppelgreifer (Holer und Bringer)
//     1:1 Tausch ist Standard ($TC_MAMP2) Bit 15 = 1
//     --> wandern der Werkzeuge über Magazine ist möglich
//
//Eingangsparameter:
//    E_EN_1zu1_Uebergross : 0: übergrosse werkzeuge können nicht 1:1 getauscht 
//                              werden
//                           1: auch übergrosse werkzeuge können 1:1 getauscht 
//                              werden
//
//    E_Nr_Bereitst_Platz  :Zwischenspeicher-Nr. des Bereitstellungsplatzes
//                           0: kein Bereitstellen
//                           2: Greifer 1
//                           3: Greifer 2
//                           4: Bereitstellungsplatz
//
//    E_Mag1_Fertig: Positonier-Anforderung an Mag1 fertig -> Quit Txx   
//    E_Mag2_Fertig: Positonier-Anforderung an Mag2 fertig <-- i.V   
//   
//    E_WZ_abgelegt_in_Mag   : Wz aus ZwSp wieder in Mag abgelegt bei Txx
//    E_Bereitstellen_Fertig : Bereitstellen in Zwischenspeicher fertig
VERSION : 0.1


VAR_INPUT
  E_Reset_Taste : BOOL ;	//Reset-Taste
  E_Nr_Bereitst_Platz : INT ;	//Zwischenspeicher-Nr. des Bereitstellungsplatzes 0: kein Bereitstellen
  E_M6_aktiv : BOOL ;	//Rückmeldung M6 aktiv
  E_Sperre_T_Befehl : BOOL ;	
  E_Req_Ablegen_ZwSp : BOOL ;	//Anforderung Ablegen von Werkzeug im Greifer
END_VAR
VAR_OUTPUT
  A_Quit_Bereitstellen : BOOL ;	//Anforderung Quittieren Txx Kette in Position
  A_Anf_load_M6 : BOOL ;	
  A_Anf_unload_M6 : BOOL ;	
  A_Anf_change_M6 : BOOL ;	
  A_Anf_unload_load_M6 : BOOL ;	
  A_Anf_HWZ_load_M6 : BOOL ;	
  A_ANF_HWZ_unload_M6 : BOOL ;	
END_VAR
VAR_IN_OUT
  EA_Mag_load_M6 : BYTE ;	
  EA_Loc_load_M6 : BYTE ;	
  EA_Mag_unload_M6 : BYTE ;	
  EA_Loc_unload_M6 : BYTE ;	
  EA_Res1 : BOOL ;	
END_VAR
VAR
  FMP_WechselVorbereiten : BOOL ;	//Flankenmerker Wechsel vorbereiten
  Req_Tx : BOOL ;	//Start Kette Tx
  Req_FB192 : BOOL ;	//Request Daten aus Zwischenspeicher lesen
  NDR_FB192 : BOOL ;	//Fertigmeldung FB 192
  Wz_equal_FB1921 : BOOL ;	//Wz in Spindel und Greifer sin vom gleichen Typ und Größe 
  Error_FB192 : BOOL ;	//Fehler aus FB 192
  Warning_FB192 : BOOL ;	//Warnung aus FB 192
  Wz_equal_FB192 : BOOL ;	//Wz in Spindel und Greifer haben gleichen Typ und Größe
  State_FB192 : WORD ;	//Status FB192
  Req_FB92 : BOOL ;	
  NDR_FB92 : BOOL ;	
  Error_FB92 : BOOL ;	
  Warning_FB92 : BOOL ;	
  State_FB92 : WORD ;	
  Fehler_FB92 : BOOL ;	
  T_SpWz_Typ : WORD ;	
  T_NewTool_Typ : WORD ;	
  Schritt_Tx : INT ;	//Schrittzaehler
  Schritt : INT ;	
  Anf_Leerplatzsuche : BOOL ;	//Anforderung Leerplatzsuche
  Start_FB191 : BOOL ;	//Start Leerplatzsuche
  Done_FB191 : BOOL ;	//Fertigmeldung Leerplatzsuche
  Aktiv_FB191 : BOOL ;	//Leerplatzsuche laeuft
  Error_FB191 : BOOL ;	//Fehler Leerplatzsuche
  State_FB191 : WORD ;	//Status Leerplatzsuche
  MagNr_Empty : INT ;	//Ergebnis aus Leerplatzsuche MagazinNr
  LocNr_Empty : INT ;	//Ergebnis aus Leerplatzsuche PlatzNr
  Schritt_alt : INT ;	//Schrittnummer alt
  Fehler_FB191 : BOOL ;	//Fehler bei Leerplatzsuche kein Platz in beiden Magazinen
  Fehler_FB192 : BOOL ;	//Fehler aus FB 192
  WZ_ins_Regal_beendet : BOOL ;	
  WZ_vorbereitet : BOOL ;	
  WZ_GRF_leer : BOOL ;	
  Fehler6 : BOOL ;	
  Fehler7 : BOOL ;	
  Fehler8 : BOOL ;	
  Fehler_State : WORD ;	//Fehlerinfo abh. von Fehlerbit (FB191 / FB192)
  Mag_unload_Tx : INT ;	//Magazin entladen bei T-Befehl
  Loc_unload_Tx : INT ;	//Platz entladen bei T-Befehl
  MagNr_pos_Tx : INT ;	//Mag positionieren für neues Wz
  LocNr_pos_Tx : INT ;	//Platz positionieren für neues Wz
  Anf_pos_Tx : BOOL ;	//Anforderung Magazin positionieren 
  Req_Regal_Tx : BOOL ;	//Anforderung Kette Tx
  Uebergross : BOOL ;	//altes oder neues Wz ist übergross
  Wz_equal_alt_neu : BOOL ;	//altes und neues Wz sind gleich
  Anf_T0_Tx : BOOL ;	//nur ablegen bei Tx = T0
  Einsprung_Regal_Tx : INT ;	//Schrittnummer für Einsprung in Kette Tx
  Mag_unload_Tx_Buf : INT ;	//Magazin entladen bei T-Befehl
  Loc_unload_Tx_Buf : INT ;	//Platz entladen bei T-Befehl
  MagNr_pos_Tx_Buf : INT ;	//Mag positionieren für neues Wz
  LocNr_pos_Tx_Buf : INT ;	//Platz positionieren für neues Wz
  loc_zw_Tx_Buf : INT ;	//Zwischenspeicher-Nr aus der abgelegt werden soll
  Uebergross_Buf : BOOL ;	//altes oder neues Wz ist übergross
  Anf_T0_Tx_Buf : BOOL ;	//nur ablegen bei Tx = T0
  Mag_unload_M6 : INT ;	//MagazinNr. für Unload
  Loc_unload_M6 : INT ;	//PlatzNr. für Unload
  Mag_load_M6 : INT ;	//MagazinNr. für Load
  Loc_load_M6 : INT ;	//PlatzNr. für Load
  Anf_load_M6 : BOOL ;	//Anf. laden in Spindel
  Anf_change_M6 : BOOL ;	//Anf. 1:1 Tausch Daten stehen in Load
  Anf_unload_M6 : BOOL ;	//Anf. entladen aus Spindel 
  Anf_unload_load_M6 : BOOL ;	//Anf. entladen dann laden
  Anf_load_HWZ_M6 : BOOL ;	//Anf. Handwerkzeug laden
  Anf_unload_HWZ_M6 : BOOL ;	//Anf. Handwerkzeug laden
  LocNr_ZW_LPS : INT ;	
  MagNr_ZW_LPS : INT ;	
  Mag_Nr_LPS : INT ;	
  loc_zw : INT ;	
  Done_FB197 : BOOL ;	
  Error_FB197 : BOOL ;	
  Req_FB197 : BOOL ;	
  WzVgw_WzBruch_FB197 : BOOL ;	//Kennung Werkzeugbruch bei neuem Wz
  SMag_NewTool : INT ;	
  SLoc_NewTool : INT ;	
  Kommando_WZ : INT ;	
  TMag_Save : INT ;	
  TLoc_Save : INT ;	
  SMag_Save : INT ;	
  SLoc_Save : INT ;	
  TLoc_Save_S1 : INT ;	
  PF_WW_ausfuehren : BOOL ;	
  T_SpWz_langsam : BOOL ;	
  T_NewTool_langsam : BOOL ;	
  WZ_ablegen_aus_ZwSp : BOOL ;	
  T_SpWz_schnell : BOOL ;	
  T_NewTool_schnell : BOOL ;	
END_VAR
VAR_TEMP
  IM_Schritt : BOOL ;	//Impuls Schrittwechsel
  Offset_TNR_ZwSp : DWORD ;	//Offset Zwischenspeicher in DB 192
  zeiger : DWORD ;	
  ZwSp2_liegt_neuesWz : BOOL ;	//in Greifer 1 liegt das neue Wz
  ZwSp4_liegt_neuesWz : BOOL ;	//in Bstp liegt das neue Wz
  ZwSp3_liegt_neuesWz : BOOL ;	//in Greifer 2 liegt das neue Wz
  neuesWz_festpl : BOOL ;	//neues Wz ist festplatzcodiert
  altesWz_festpl : BOOL ;	//altes Wz ist festplatzcodiert
  PI_WechselVorbereiten : BOOL ;	
  PI_WW_ausfuehren : BOOL ;	
  dummy : REAL ;	
END_VAR
BEGIN
NETWORK
TITLE =Netzwerk-Übersicht
// Netzwerk-Übersicht
// ==================
// NW 1: Netzwerk-Übersicht
// NW 2: Wechsel vorbereiten
// NW 3: Lesen der Zwischenspeicherplätze
// NW 4: Lesen der Daten der beteiligten Werkzeuge
// NW 5: WzBruch-erkennen
// NW 6: Auswerten T0
// NW 7: Warten bis Greiferwerkzeug abgelegt ist bei T0
// NW 8: Makro starten und Warten auf Request ablegen von Makro bei T0
// NW 9: T0 beendet
// NW 10: Abfrage WZ in Zwischenspeicher 
// NW 11:  Wz im Greifer 1, Greifer 2 oder Bereitstellungsplatz  
// NW 12: Greiferwerkzeug im Regal ablegen 
// NW 13: Werkzeug wurde ins Regal abgelegt --> Abfrage Voll. od Aus-Ein
// NW 14: Aus- Einwechseln
// NW 15: Aus- Einwechseln
// NW 16: Aus- Einwechseln
// NW 17: Vollwechsel od. Einwechsel 
// NW 18: Vollwechsel: Abfrage Werkzeugtyp (neues Werkzeug)
// NW 19: Vollwechsel
// NW 20: Vollwechsel
// NW 21: Vollwechsel
// NW 22: Vollwechsel
// NW 23: Einwechseln
// NW 24: Einwechseln
// NW 25: Einwechseln
// NW 26: 
// NW 27: Aufruf FB191
// NW 28: CALL "FB_TM_MAGAZINDATEN"
// NW 29: CALL "FB_TM_WZTYP_RD"
// NW 30: CALL "FB_HANDSHAKE_WZREGAL"
// NW 31: Werkzeugtypen
// NW 32: WZM: Regal nicht bereit für Auftrag
// NW 33: Anfrage an Regal ob Werkzeug vorhanden
// NW 34: Kommando an Regal Werkzeug aus Regal an Werkzeugwechselpunkt
// NW 35: WZW: Befehl Hub zum Magazin
// NW 36: Kommando an Regal Greifer-Spanner öffnen und auf Vorposition
// NW 37: WZW: Hub in Grundstellung fahren
// NW 38: Alles in Grundstellung --> Vorbereiten quittieren
// NW 39: Werkzeug vom WZ-Greifer ablegen
// NW 40: Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe
// NW 41: WZM: Werkzeug im Lader    
// NW 42: Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe
// NW 43: Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe
// NW 44: WZW Übergabeplatz nicht 1-Signal  
// NW 45: WZM: Negative Quittung bei Auftrag Regal
// NW 46: Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe
      NOP   0; 

NETWORK
TITLE =Wechsel vorbereiten

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".Warnung._701902_WZB_LESEFEHLER; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701826_Kein_Pl_im_Regal; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701828_WZ_nicht_vorhand; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701829_RegGr_ni_in_Pos; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701830_Regal_ni_bereit; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701831_Stoerung_Regal; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701807_WZ_in_Lader; 


      U     #E_Reset_Taste; 
      O(    ; 
      U     "DB_NC_PLC".WZW_NC_Aktiv; 
      FN    "MX_FN_WZW_NC_Aktiv"; 
      )     ; 
      R     #A_Anf_load_M6; 
      R     #A_Anf_change_M6; 


      U     #E_Reset_Taste; 
      SPBN  nore; 
      R     "M_WZW_Vorber_laeuft"; 
      R     "M_WZW_Ausw"; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      R     #A_Quit_Bereitstellen; 
      R     #Req_Tx; 
      R     #Req_Regal_Tx; 
      R     #Req_FB192; 
      R     #NDR_FB192; 
      R     #Fehler_FB92; 
      R     #Req_FB197; 
      L     0; 
      T     #Schritt; 
      T     #Schritt_Tx; 

nore: U     "TMSpindleIF".IFNo[1]; 
      U     "TMSpindleIF".IF[1].Prepare; 
      UN    "DB_NC_PLC".WZW_Ablegen_aktiv; 
      UN    #E_Sperre_T_Befehl; 
      FP    #FMP_WechselVorbereiten; 
      =     #PI_WechselVorbereiten; 

//*********************************************************************
//Eingefügt für Satzsuchlauf 16.07.2003
      U(    ; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     9998; 
      ==I   ; 
      )     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SLoc; 
      L     1; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     2; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     "TMSpindleIF".IF[1].TMag; 
      L     2; 
      ==I   ; 
      U     "TMSpindleIF".IF[1].T0; 
      )     ; 
      U     "TMSpindleIF".IF[1].Prepare; 
      O     ; 
      U     "DB_SIEM_KANAL_1".E_ActBlock; 
      U     "TMSpindleIF".IF[1].Prepare; 
      UN    "DB_REMANENT".WZ_Im_Greifer; 
//      FP    "MX_IMP_W_Prep"
      =     "MX_FP_W_Prep"; 

      U     "MX_FP_W_Prep"; 
      R     #PI_WechselVorbereiten; 
//*********************************************************************

      U     "TMSpindleIF".IFNo[1]; 
      U     "TMSpindleIF".IF[1].Perform; 
      UN(   ; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     2; 
      ==I   ; 
      )     ; 
      UN(   ; 
      L     "TMSpindleIF".IF[1].TMag; 
      L     2; 
      ==I   ; 
      )     ; 
      UN(   ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     9998; 
      ==I   ; 
      )     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SLoc; 
      L     1; 
      )     ; 
      )     ; 
//      U     "M_SSL_Aktiv"
      FP    #PF_WW_ausfuehren; 
      =     #PI_WW_ausfuehren; 

      U     #PI_WechselVorbereiten; 
      O     #PI_WW_ausfuehren; 
      UN    #E_Sperre_T_Befehl; 
      S     #Req_Tx; 

      U     #Req_Tx; //21.12.04 FUH
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  x1; 
//      U     #E_Sperre_T_Befehl
//      SPB   LPS

      L     0; 
      T     #Schritt_Tx; 

x1:   L     #Schritt_Tx; 
      L     0; 
      ==I   ; 
      SPBN  x2; 
      UN    #Req_Tx; //--000--- pos Flanke Txx
      SPB   LPS; 
      S     "M_WZW_VORG_AUSWERTUNG"; 
      R     #Req_Tx; 
      R     #A_Quit_Bereitstellen; 
      L     102; 
      T     #Schritt_Tx; 

x2:   L     #Schritt_Tx; //--102--- initialisieren
      L     102; 
      ==I   ; 
      SPBN  x3; 
      L     1; 
      T     #Schritt_Tx; 
      R     #Fehler_FB191; 
      R     #Fehler_FB192; 
      R     #WZ_ins_Regal_beendet; 
      R     #WZ_vorbereitet; 
      L     0; 
      T     #Fehler_State; 

      R     #Uebergross; 
      R     #Anf_load_M6; 
      R     #Anf_unload_M6; 
      R     #Anf_change_M6; 
      R     #Anf_unload_load_M6; 
      R     #Anf_T0_Tx; 
      R     #Anf_load_HWZ_M6; 
      R     #Anf_unload_HWZ_M6; 
      R     #A_Anf_load_M6; 
      R     #A_Anf_unload_M6; 
      R     #A_Anf_change_M6; 
      R     #A_Anf_unload_load_M6; 
      R     #A_Anf_HWZ_load_M6; 
      R     #A_ANF_HWZ_unload_M6; 

      L     103; 
      T     #Schritt_Tx; 

x3:   L     #Schritt_Tx; 
      L     103; 
      ==I   ; 
      SPBN  x4; 
      L     "TMSpindleIF".IF[1].TMag; 
      T     #TMag_Save; 
      L     "TMSpindleIF".IF[1].TLoc; 
      T     #TLoc_Save; 
      L     "TMSpindleIF".IF[1].SMag; 
      T     #SMag_Save; 
      L     "TMSpindleIF".IF[1].SLoc; 
      T     #SLoc_Save; 

      L     "TMSpindleIF".IF[1].SLoc; // T0 programmiert
      L     0; 
      ==I   ; 
      SPB   UNLO; //-- Werkzeug entladen aus Spindel
      L     "TMSpindleIF".IF[1].TLoc; // kein Wz in Spindel
      L     0; 
      ==I   ; 
      SPB   LOAD; //--> Werkzeug laden in Spindel
      S     #Anf_change_M6; // Change
      SPA   HWZ; 
UNLO: S     #Anf_unload_M6; // Unload
      SPA   HWZ; 
LOAD: S     #Anf_load_M6; // Load


HWZ:  NOP   0; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     9999; 
      ==I   ; 
      S     #Anf_load_HWZ_M6; // Handwerkzeug  einwechseln
      L     "TMSpindleIF".IF[1].TMag; 
      L     9999; 
      ==I   ; 
      S     #Anf_unload_HWZ_M6; // Handwerkzeug auswechseln
      L     104; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Lesen der Zwischenspeicherplätze

x4:   L     104; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  x6; 
      UN    "Mx_Werkzeugdaten_lesen"; 
      SPBN  x6; 
      S     #Req_FB192; 
      L     105; 
      T     #Schritt_Tx; 
      SPA   x5; 

x6:   L     105; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  N199; 


      O     #NDR_FB192; 
      O     #Error_FB192; 
      R     #Req_FB192; 
      SPBN  N199; 
      U     #Error_FB192; 
      SPBN  next; 
      S     #Fehler_FB192; 
      L     #State_FB192; 
      T     #Fehler_State; //Fehlerinfo siehe FB 192 
      L     19; 
      T     #Schritt_Tx; 
      SPA   N19; 
next: L     199; 
      T     #Schritt_Tx; //wieder ausblenden
      SPA   LPS; 
NETWORK
TITLE =Lesen der Daten der beteiligten Werkzeuge

N199: L     199; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  x7; 
      U(    ; 
      L     "TMSpindleIF".IF[1].TLoc; // kein Wz in Spindel
      L     0; 
      ==I   ; 
      )     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SLoc; // T0 programmiert
      L     0; 
      ==I   ; 
      )     ; 
      SPB   nex; 

      UN    "Mx_Werkzeugdaten_lesen"; 
      UN    #Req_FB192; 
      SPBN  x7; 
      L     "TMSpindleIF".IF[1].SMag; 
      T     #SMag_NewTool; 
      L     "TMSpindleIF".IF[1].SLoc; 
      T     #SLoc_NewTool; 
      R     #NDR_FB92; 
      S     #Req_FB92; 
      L     200; 
      T     #Schritt_Tx; 
      SPA   x5; 

x7:   L     200; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  N201; 


      O     #NDR_FB92; 
      O     #Error_FB92; 
      R     #Req_FB92; 
      SPBN  N201; 
      U     #Error_FB92; 
      SPBN  nex; 
      S     #Fehler_FB92; 
      U     #Fehler_FB92; 
      =     "DB_FEHLERMELDUNG".Warnung._701931_Fehler_Leerplatz; 
      L     #State_FB92; 
      T     #Fehler_State; //Fehlerinfo siehe FB 192 
      L     19; 
      T     #Schritt_Tx; 
      SPA   N19; 
nex:  L     201; 
      T     #Schritt_Tx; 

NETWORK
TITLE =WzBruch-erkennen
//27.06.01 AB 
//Netzwerk eingefügt
//stat Variablen ..._FB197 eingbaut
//
N201: L     201; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  N2y; 
      R     #Req_FB197; //08.03.05 FUH: Änderung weil Request sporadisch hängenblieb

      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      ==I   ; 
// 01.07.01 SCH: bei T0 kein Lesen der Magazindaten 
      O(    ; 
      L     "TMSpindleIF".IF[1].SLoc; 
      L     0; 
      ==I   ; 
      )     ; 
// 01.07.01 SCH: bei Handwechsel auch nicht 
      O(    ; 
      L     "TMSpindleIF".IF[1].SMag; 
      L     9999; 
      ==I   ; 
      )     ; 
      SPBN  N2z; 
      L     2; 
      T     #Schritt_Tx; 
      SET   ; 
      R     #WzVgw_WzBruch_FB197; 
      SPA   N2; 

N2z:  S     #Req_FB197; 
      L     202; 
      T     #Schritt_Tx; 

N2y:  NOP   0; 

      CALL "FB_TM_WZBRUCH_R" , "DI_TM_WZBRUCH_R" (
           E_TNR_READ               := "TMSpindleIF".IF[1].T_no,
           E_READ                   := #Req_FB197,
           EA_WZBRUCH               := #WzVgw_WzBruch_FB197,
           EA_Error_Read            := #Error_FB197,
           EA_DONE_Read             := #Done_FB197);

      U     #Error_FB197; 
      S     "DB_FEHLERMELDUNG".Warnung._701902_WZB_LESEFEHLER; 
      R     #Error_FB197; 

      O     #Done_FB197; 
      O     #Error_FB197; 
      U(    ; 
      L     202; 
      L     #Schritt_Tx; 
      ==I   ; 
      )     ; 
      SPBN  N2; 
      R     #Req_FB197; 
      L     2; 
      T     #Schritt_Tx; 

NETWORK
TITLE =Auswerten T0

N2:   L     2; 
      L     #Schritt_Tx; 
      ==I   ; 
      SPBN  N205; 
      L     "TMSpindleIF".IF[1].SLoc; // T0 programmiert
      L     0; 
      ==I   ; 
      SPB   N2T0; //-- Werkzeug entladen aus Spindel
      L     3; 
      T     #Schritt_Tx; 
      SPA   N3; 

N2T0: UN    "DI_TM_MAGDAT".T0_Pl2; //Wz ist in Greifer 1 
      L     2; 
      T     #loc_zw; 
      SPB   lpsx; 

      UN    "DI_TM_MAGDAT".T0_Pl3; //Wz ist in Greifer 2 
      L     3; 
      T     #loc_zw; 
      SPB   lpsx; //Sprung in die Schrittkette zum Greifer-WZ ablegen
      SPA   unsp; 

//Greiferwerkzeug ablegen --> Leerplatzsuche 
lpsx: NOP   0; 
      S     #Start_FB191; 
      L     9998; 
      T     #MagNr_ZW_LPS; 
      L     #loc_zw; 
      T     #LocNr_ZW_LPS; 
      L     1; 
      T     #Mag_Nr_LPS; 

      L     205; 
      T     #Schritt_Tx; 
      SPA   LPS; 


N205: L     #Schritt_Tx; 
      L     205; 
      ==I   ; 
      SPBN  N206; 

      O     #Done_FB191; 
      O     #Error_FB191; 
      R     #Start_FB191; 
      SPBN  N206; 
      U     #Error_FB191; 
      SPBN  n5a; 
      S     #Fehler_FB191; 
      U     #Fehler_FB191; 
      =     "DB_FEHLERMELDUNG".Warnung._701931_Fehler_Leerplatz; 


      L     #State_FB191; 
      T     #Fehler_State; 
      L     19; 
      T     #Schritt_Tx; 
      SPA   N19; 
n5a:  L     206; 
      T     #Schritt_Tx; 

N206: L     #Schritt_Tx; 
      L     206; 
      ==I   ; 
      SPBN  N211; 

      L     #TLoc_Save; //Position für Spindelwerkzeug
      T     #TLoc_Save_S1; //zwischenspeichern

      L     #LocNr_Empty; 
      T     #TLoc_Save; 
      L     1; 
      T     #TMag_Save; 

      R     #WZ_ins_Regal_beendet; 
      S     #Req_Regal_Tx; 
      S     "MX_WZB_NeuWahl"; //Eventuelle WZ-Bruchdaten ablöschen
      S     #WZ_ablegen_aus_ZwSp; 
      L     20; 
      T     #Einsprung_Regal_Tx; // ablegen und Leerplatz suchen
      L     211; 
      T     #Schritt_Tx; 
      SPA   LPS; 


//---- Entladen Spindel.Wz bei T0 (Gr1,Gr2,Bstpl ist leer) --------------------

unsp: U     #Anf_unload_HWZ_M6; 
      SPB   hwzu; 
      S     #Anf_unload_M6; // Anforderung unload
      S     #Anf_pos_Tx; 
      L     "TMSpindleIF".IF[1].TMag; // nach Mag-Nr. altes Wz
      T     #Mag_unload_M6; 
      T     #MagNr_pos_Tx; 
      L     "TMSpindleIF".IF[1].TLoc; // nach Platz-Nr. altes Wz
      T     #Loc_unload_M6; 
      T     #LocNr_pos_Tx; 
      L     212; // Fertig
      T     #Schritt_Tx; 
      SPA   N212; 

//---- Handwerkzeug auswechseln bei T0------------------------------

hwzu: L     "TMSpindleIF".IF[1].TMag; // nach Mag-Nr. altes Wz
      T     #Mag_unload_M6; 
      L     "TMSpindleIF".IF[1].TLoc; // nach Platz-Nr. altes Wz
      T     #Loc_unload_M6; 
      T     #LocNr_pos_Tx; 
      S     #Anf_unload_M6; // Anforderung unload
      S     #A_Anf_unload_M6; 
      S     #A_ANF_HWZ_unload_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Quit_Bereitstellen; 
      S     "M_TPrepare_Quit"; 
      L     0; // Fertig
      T     #Schritt_Tx; 
      SPA   LPS; 

NETWORK
TITLE =Warten bis Greiferwerkzeug abgelegt ist bei T0

N211: L     #Schritt_Tx; 
      L     211; 
      ==I   ; 
      SPBN  N212; 
      U     #WZ_ins_Regal_beendet; 
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  LPS; 
      R     #WZ_ablegen_aus_ZwSp; 

      U     #Anf_unload_HWZ_M6; 
      SPB   HWun; 

      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_unload_M6; 

      L     #TLoc_Save_S1; 
      T     #TLoc_Save; 

      L     212; 
      T     #Schritt_Tx; 
      SPA   LPS; 

//---- Handwerkzeug auswechseln bei T0------------------------------
HWun: L     "TMSpindleIF".IF[1].TMag; // nach Mag-Nr. altes Wz
      T     #Mag_unload_M6; 
      L     "TMSpindleIF".IF[1].TLoc; // nach Platz-Nr. altes Wz
      T     #Loc_unload_M6; 
      T     #LocNr_pos_Tx; 
      S     #Anf_unload_M6; // Anforderung unload
      S     #A_Anf_unload_M6; 
      S     #A_ANF_HWZ_unload_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Quit_Bereitstellen; 
      S     "M_TPrepare_Quit"; 
      L     0; // Fertig
      T     #Schritt_Tx; 
      SPA   LPS; 

NETWORK
TITLE =Makro starten und Warten auf Request ablegen von Makro bei T0

N212: L     #Schritt_Tx; 
      L     212; 
      ==I   ; 
      SPBN  N213; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_unload_M6; 
      S     #A_Quit_Bereitstellen; 
      S     "M_TPrepare_Quit"; 
      R     #WZ_ins_Regal_beendet; 

      U     #E_Req_Ablegen_ZwSp; //Greiferwerkzeug entladen 
      SPBN  N213; 
      R     #A_Anf_unload_M6; 
      S     #Req_Regal_Tx; 
      L     20; 
      T     #Einsprung_Regal_Tx; // ablegen und Leerplatz suchen
      L     213; 
      T     #Schritt_Tx; 
NETWORK
TITLE =T0 beendet

N213: L     #Schritt_Tx; 
      L     213; 
      ==I   ; 
      SPBN  N3; 
      U     #WZ_ins_Regal_beendet; 
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  LPS; 
      L     0; 
      T     #Schritt_Tx; 
      SPA   LPS; 
NETWORK
TITLE =Abfrage WZ in Zwischenspeicher 

N3:   L     #Schritt_Tx; 
      L     3; 
      ==I   ; 
      SPBN  N4; 
      ON    "DI_TM_MAGDAT".T0_Pl2; // Wz in Greifer1
      ON    "DI_TM_MAGDAT".T0_Pl3; // Wz in Greifer 2
      SPB   N3_1; 
      L     #TLoc_Save; 
      T     #TLoc_Save_S1; 

      R     #ZwSp2_liegt_neuesWz; // Wz in Greifer 1
      R     #ZwSp3_liegt_neuesWz; // Wz in Greifer 2
      S     #WZ_GRF_leer; //WZ-Greifer ist leer
      L     411; // kein Wz in Greifer1, Greifer2 und Bereitstellungsplatz
      T     #Schritt_Tx; 
      SPA   N411; 
N3_1: L     4; // Wz in Gr1,Gr2,Bstpl gefunden
      T     #Schritt_Tx; 

NETWORK
TITLE = Wz im Greifer 1, Greifer 2 oder Bereitstellungsplatz  

N4:   L     #Schritt_Tx; // Abfrage Schrittnummer
      L     4; 
      ==I   ; 
      SPBN  N400; 

      UN    "DI_TM_MAGDAT".T0_Pl2; // Greifer 1 hat ein Werkzeug
      L     2; 
      SPB   N4_1; 
      UN    "DI_TM_MAGDAT".T0_Pl3; // Greifer 2 hat ein Werkzeug
      L     3; 
      SPB   N4_1; // Bereitstellungsplatz hat ein Werkzeug
      L     4; 
N4_1: T     #loc_zw; 

      UN    "DI_TM_MAGDAT".T0_Pl2; // Greifer 1 hat ein Werkzeug
      U(    ; 
      L     "TMSpindleIF".IF[1].T_no; //T-Nr. neues Wz
      L     "DI_TM_MAGDAT".TNr_2; //T-Nr Greifer 1 
      ==I   ; // Wz in Gr1 == neues Wz
      )     ; 
      O     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SMag; // T-Befehl hat neues Wz in Gr.1 gefunden
      L     9998; 
      ==I   ; 
      )     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SLoc; 
      L     2; 
      ==I   ; 
      )     ; 
      =     #ZwSp2_liegt_neuesWz; 

      UN    "DI_TM_MAGDAT".T0_Pl3; // Greifer 2 hat ein Werkzeug
      U(    ; 
      L     "TMSpindleIF".IF[1].T_no; //T-Nr. neues Wz
      L     "DI_TM_MAGDAT".TNr_3; //T-Nr Greifer 2 
      ==I   ; // Wz in Gr1 == neues Wz
      )     ; 
      O     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SMag; // T-Befehl hat neues Wz in Gr.2 gefunden
      L     9998; 
      ==I   ; 
      )     ; 
      U(    ; 
      L     "TMSpindleIF".IF[1].SLoc; 
      L     3; 
      ==I   ; 
      )     ; 
      =     #ZwSp3_liegt_neuesWz; 


      O     #ZwSp2_liegt_neuesWz; // Wz in Greifer 1
      O     #ZwSp3_liegt_neuesWz; // Wz in Greifer 2
      SPBN  N4zy; 
      S     #A_Quit_Bereitstellen; //Vorbereiten quittieren
      S     "M_TPrepare_Quit"; 

//Wenn Einwechseln angewählt ist, dann hier beenden
      U     #Anf_load_M6; 
      SPBN  ncha; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_load_M6; 
      L     0; 
      T     #Schritt_Tx; 
      SPA   MEND; 

//Bei Vollwechsel
ncha: U     #Anf_change_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_change_M6; 

      U     #Anf_unload_HWZ_M6; 
      S     #A_ANF_HWZ_unload_M6; 

//Neues Werkzeug liegt schon im Zwischenspeicher
      L     504; 
      T     #Schritt_Tx; // neues Wz liegt in zwischenspeicher
      SPA   N504; 

//Werkzeug im Zwischenspeicher erst ablegen
N4zy: L     400; // 400  Leerplatzsuche
      T     #Schritt_Tx; 
      SPA   N400; 
NETWORK
TITLE =Greiferwerkzeug im Regal ablegen 
//Greiferwerkzeug ablegen --> Leerplatzsuche (vorläufig beim Omron-Regal wegen 
//Mag-Liste
N400: L     #Schritt_Tx; // Abfrage Schrittnummer
      L     400; 
      ==I   ; 
      SPBN  N401; 
      S     #Start_FB191; 
      L     9998; 
      T     #MagNr_ZW_LPS; 
      L     #loc_zw; 
      T     #LocNr_ZW_LPS; 
      L     1; 
      T     #Mag_Nr_LPS; 

      L     401; 
      T     #Schritt_Tx; 
      SPA   LPS; 


N401: L     #Schritt_Tx; 
      L     401; 
      ==I   ; 
      SPBN  N402; 

      O     #Done_FB191; 
      O     #Error_FB191; 
      R     #Start_FB191; 
      SPBN  N402; 
      U     #Error_FB191; 
      SPBN  N4_a; 
      S     #Fehler_FB191; 
      L     #State_FB191; 
      T     #Fehler_State; 
      L     19; 
      T     #Schritt_Tx; 
      SPA   N19; 
N4_a: L     402; 
      T     #Schritt_Tx; 

//Leerplatz gefunden --> Werkzeug ablegen
N402: L     #Schritt_Tx; 
      L     402; 
      ==I   ; 
      SPBN  N411; 

      L     #TLoc_Save; //Position für Spindelwerkzeug
      T     #TLoc_Save_S1; //zwischenspeichern

      L     #LocNr_Empty; 
      T     #TLoc_Save; 
      L     1; 
      T     #TMag_Save; 

      R     #WZ_GRF_leer; 
      R     #WZ_ins_Regal_beendet; 
      S     #Req_Regal_Tx; 
      S     #WZ_ablegen_aus_ZwSp; 

      UN    "DB_PLC_MD_DB20".UDHex._20_Bit1_WZ_ni_ablegen; 
      S     "MX_WZB_NeuWahl"; //Eventuelle WZ-Bruchdaten ablöschen
      L     20; 
      T     #Einsprung_Regal_Tx; 
      L     411; 
      T     #Schritt_Tx; 
      SPA   LPS; 



NETWORK
TITLE =Werkzeug wurde ins Regal abgelegt --> Abfrage Voll. od Aus-Ein

N411: L     #Schritt_Tx; 
      L     411; 
      ==I   ; 
      SPBN  N412; 

      U     #WZ_GRF_leer; //WZ-Greifer ist leer
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  N412; 
      R     #WZ_ablegen_aus_ZwSp; 
      S     "M_TPrepare_Quit"; 

      L     #TLoc_Save_S1; 
      T     #TLoc_Save; 

//Handwerkzeug laden bei leerer Spindel
      U     #Anf_load_HWZ_M6; 
      UN    #Anf_change_M6; 
      SPB   HWlo; 

//Handwerkzeug laden aber erst Spindel auswechseln
      U     #Anf_load_HWZ_M6; 
      U     #Anf_change_M6; 
      SPB   HWlc; 

//Nur Aus- Einwechseln möglich
      U     #Anf_change_M6; 
      U(    ; 
      U(    ; 
      U     "M_SpWZ_WFK"; 
      O     "M_NewTool_WFK"; 
      )     ; 
      O(    ; 
      U     "M_SpTool_Grf2"; 
      U     "M_NewTool_Grf2"; 
      )     ; 
      )     ; 
      SPBN  n13a; 

//Makro starten zum Aus- Einwechseln
      SET   ; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_unload_load_M6; // Unload-->Load
      S     #A_Quit_Bereitstellen; 

      L     412; 
      T     #Schritt_Tx; 
      SPA   LPS; 

n13a: L     500; 
      T     #Schritt_Tx; 
      SPA   LPS; 
//-- Handwerkzeug laden in leere Spindel ----------- -------------------

HWlo: S     #A_Quit_Bereitstellen; 
      L     99; // nach Mag-Nr.neuese Wz
      T     #Mag_load_M6; // Mag laden
      L     "TMSpindleIF".IF[1].SLoc; // nach Platz-Nr. neues Wz
      T     #Loc_load_M6; 
      L     0; 
      T     #Mag_unload_M6; 
      T     #Loc_unload_M6; 
      S     #Anf_load_M6; 
      S     #A_Anf_load_M6; 
      S     #A_Anf_HWZ_load_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 

      L     0; 
      T     #Schritt_Tx; 
      SPA   LPS; 

//-- Handwerkzeug laden und Handwerkzeug entladen ----------------------
HWlc: U     #Anf_unload_HWZ_M6; 
      U     #Anf_load_HWZ_M6; 
      SPBN  HWld; 

      S     #A_Anf_HWZ_load_M6; 
      S     #A_ANF_HWZ_unload_M6; 
      S     #A_Anf_change_M6; 
      L     99; // nach Mag-Nr.neuese Wz
      T     #Mag_load_M6; // Mag laden
      T     #Mag_unload_M6; // Mag laden

      L     "TMSpindleIF".IF[1].SLoc; // nach Platz-Nr. neues Wz
      T     #Loc_load_M6; 
      L     "TMSpindleIF".IF[1].TLoc; // nach Platz-Nr. neues Wz
      T     #Loc_unload_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Quit_Bereitstellen; 
      L     0; 
      T     #Schritt_Tx; 
      SPA   LPS; 

//-- Handwerkzeug laden aber erst Spindel entladen ----------------------
HWld: L     99; // nach Mag-Nr.neuese Wz
      T     #Mag_load_M6; // Mag laden
      L     "TMSpindleIF".IF[1].SLoc; // nach Platz-Nr. neues Wz
      T     #Loc_load_M6; 
      L     0; 
      T     #Mag_unload_M6; 
      T     #Loc_unload_M6; 
      S     #A_Anf_change_M6; 
      S     #A_Anf_HWZ_load_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Quit_Bereitstellen; 
      L     412; 
      T     #Schritt_Tx; 
      SPA   LPS; 

NETWORK
TITLE =Aus- Einwechseln
//Warten bis Befehl vom Makro zum ablegen
N412: L     #Schritt_Tx; 
      L     412; 
      ==I   ; 
      SPBN  N413; 
      U     #E_Req_Ablegen_ZwSp; //Greiferwerkzeug entladen 
      SPBN  N413; 
      R     #A_Quit_Bereitstellen; 
      S     #Req_Regal_Tx; 
      R     #WZ_ins_Regal_beendet; 
      L     20; 
      T     #Einsprung_Regal_Tx; 
      L     413; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Aus- Einwechseln
//Warten bis abgelegt,dann neues WZ in GRF holen
N413: L     #Schritt_Tx; 
      L     413; 
      ==I   ; 
      SPBN  N414; 
      U     #WZ_ins_Regal_beendet; 
      SPBN  N414; 

      U     #A_Anf_HWZ_load_M6; 
      SPB   HWla; 

//Neues Werkzeug vorbereiten
      R     #WZ_vorbereitet; 
      S     #Req_Regal_Tx; 

      L     1; 
      T     #Einsprung_Regal_Tx; 
      L     414; 
      T     #Schritt_Tx; 
      SPA   LPS; 

HWla: L     0; 
      T     #Schritt_Tx; 
      SPA   LPS; 
NETWORK
TITLE =Aus- Einwechseln
//Neues Werkzeug in Zwischenspeicher angekommen --> WZ vorbereitet
N414: L     #Schritt_Tx; 
      L     414; 
      ==I   ; 
      SPBN  N500; 
      U     #WZ_vorbereitet; 
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  LPS; 
      R     #Req_Regal_Tx; 
      S     #A_Quit_Bereitstellen; //Vorbereiten quittieren
      L     0; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Vollwechsel od. Einwechsel 
//Abfrage ob in Spindel ein Werkzeug ist
N500: L     #Schritt_Tx; 
      L     500; 
      ==I   ; 
      SPBN  N501; 

//Nur einwechseln
      U     #Anf_load_M6; //Einwechseln angewählt
      SPBN  n17a; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      S     #A_Anf_load_M6; 
      L     600; 
      T     #Schritt_Tx; 
      SPA   LPS; 

//Regal-WZ einwechseln und HWZ auswechseln
n17a: U     #Anf_unload_HWZ_M6; 
      SPBN  n17b; 
      L     "TMSpindleIF".IF[1].TMag; // nach Mag-Nr. altes Wz
      T     #Mag_unload_M6; 
      L     "TMSpindleIF".IF[1].TLoc; // nach Platz-Nr. altes Wz
      T     #Loc_unload_M6; 
      T     #LocNr_pos_Tx; 
      S     #Anf_change_M6; // Anforderung unload
      S     #A_Anf_change_M6; 
      S     #A_ANF_HWZ_unload_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      L     501; 
      T     #Schritt_Tx; 
      SPA   N501; 

//Regal-WZ Vollwechsel
n17b: S     #A_Anf_change_M6; 
      R     "M_WZW_VORG_AUSWERTUNG"; 
      L     501; 
      T     #Schritt_Tx; 

NETWORK
TITLE =Vollwechsel: Abfrage Werkzeugtyp (neues Werkzeug)
//Wenn neues Werkzeug vom Typ 4 oder 5 ist, dann Greifer 2 auf Stellung Magazin 
//drehen
N501: L     #Schritt_Tx; 
      L     501; 
      ==I   ; 
      SPBN  N502; 

//Abfrage ob neues WZ vom Typ4 oder Typ5
      U     "M_NewTool_Grf2"; 
      SPBN  n18a; 
      S     "M_WZW_Gre1_Spi_req"; 

      L     502; 
      T     #Schritt_Tx; 
      SPA   LPS; 

n18a: S     #Req_Regal_Tx; 
      R     #WZ_vorbereitet; 
      L     1; 
      T     #Einsprung_Regal_Tx; 

      L     503; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Vollwechsel
//Warten bis Greifer 2 auf Stellung Magazin ist
N502: L     #Schritt_Tx; 
      L     502; 
      ==I   ; 
      SPBN  N503; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      SPBN  N503; 

      S     #Req_Regal_Tx; 
      R     #WZ_vorbereitet; 
      L     1; 
      T     #Einsprung_Regal_Tx; 

      L     503; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Vollwechsel
//Warten bis neues Werkzeug im WZ-Greifer angekommen ist
N503: L     #Schritt_Tx; 
      L     503; 
      ==I   ; 
      SPBN  N504; 
      U     #WZ_vorbereitet; 
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  N504; 
      S     #A_Quit_Bereitstellen; //Vorbereiten quittieren
      L     504; 
      T     #Schritt_Tx; 

NETWORK
TITLE =Vollwechsel
//Warten bis vom Makro Befehl zum Werkzeug aus Greifer ablegen kommt
N504: L     #Schritt_Tx; 
      L     504; 
      ==I   ; 
      SPBN  N505; 
      U     #E_Req_Ablegen_ZwSp; //Greiferwerkzeug entladen 
      SPBN  N505; 
      S     #Req_Regal_Tx; 
      R     #WZ_ins_Regal_beendet; 
      L     20; 
      T     #Einsprung_Regal_Tx; 
      L     505; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Vollwechsel
//Warten bis Greifer leer ist --> dann Freigabe 
N505: L     #Schritt_Tx; 
      L     505; 
      ==I   ; 
      SPBN  N600; 
      R     #A_Anf_change_M6; 

      U     #WZ_ins_Regal_beendet; 
      SPBN  N600; 
      L     0; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Einwechseln
//Abfrage ob neues Werkzeug vom Typ 4 oder 5 ist --> Greifer 2 auf Position 
//Magazin
N600: L     #Schritt_Tx; 
      L     600; 
      ==I   ; 
      SPBN  N601; 

//Abfrage ob neues WZ vom Typ4 oder Typ5
      U     "M_NewTool_Grf2"; 
      SPBN  n23a; 
      S     "M_WZW_Gre1_Spi_req"; 
      L     601; 
      T     #Schritt_Tx; 
      SPA   LPS; 

n23a: S     #Req_Regal_Tx; 
      R     #WZ_vorbereitet; 
      L     1; 
      T     #Einsprung_Regal_Tx; 
      L     602; 
      T     #Schritt_Tx; 
NETWORK
TITLE =Einwechseln
//Warten bis Greifer 2 auf Magazinposition
N601: L     #Schritt_Tx; 
      L     601; 
      ==I   ; 
      SPBN  N602; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      SPBN  N602; 

      S     #Req_Regal_Tx; 
      R     #WZ_vorbereitet; 
      L     1; 
      T     #Einsprung_Regal_Tx; 

      L     602; 
      T     #Schritt_Tx; 
      SPA   LPS; 
NETWORK
TITLE =Einwechseln
//Warten bis Werkzeug vorbereitet ist
N602: L     #Schritt_Tx; 
      L     602; 
      ==I   ; 
      SPBN  LPS; 
      U     #WZ_vorbereitet; 
      U(    ; 
      L     #Schritt; 
      L     0; 
      ==I   ; 
      )     ; 
      SPBN  LPS; 
      S     #A_Quit_Bereitstellen; //Vorbereiten quittieren
      L     0; 
      T     #Schritt_Tx; 
NETWORK
TITLE =

N19:  L     #Schritt_Tx; 
      L     19; 
      ==I   ; 
      SPBN  LPS; 

NETWORK
TITLE =Aufruf FB191

LPS:  CALL "FB_TM_LEERPLATZ" , "DI_TM_LEERPLATZ" (
           Start                    := #Start_FB191,// Start Leerplatzsuche
           MagNr_ZW                 := #MagNr_ZW_LPS,// Mag.des Zwischenspeichers
           LocNr_ZW                 := #LocNr_ZW_LPS,//Spindel
           MagNr                    := #Mag_Nr_LPS,// Magzin-Nr. in dem gesucht werden soll
           Activ                    := #Aktiv_FB191,
           Done                     := #Done_FB191,
           Error                    := #Error_FB191,
           State                    := #State_FB191,
           MagNr_Empty              := #MagNr_Empty,
           LocNr_Empty              := #LocNr_Empty);

NETWORK
TITLE =CALL "FB_TM_MAGAZINDATEN"

x5:   CALL "FB_TM_MAGAZINDATEN" , "DI_TM_MAGDAT" (
           Req                      := #Req_FB192,//Startanforderung
           MagNr                    := 9998,// Zwischenspeicher  
           Platz                    := 3,// Anzahl der Zwischenspeicher
           Mode                     := 1,// 1:Daten Spindel und Greifer vergleichen
           Velo_1                   := "DB_PLC_MD_DB20".UDReal._25_VM_WW_VELO_1,
           Velo_2                   := "DB_PLC_MD_DB20".UDReal._26_VM_WW_VELO_2,
           Velo_3                   := "DB_PLC_MD_DB20".UDReal._27_VM_WW_VELO_3,
           Velo_4                   := "DB_PLC_MD_DB20".UDReal._28_VM_WW_VELO_4,
           Velo_5                   := "DB_PLC_MD_DB20".UDReal._29_VM_WW_VELO_5,
           NDR                      := #NDR_FB192,// Fertigmeldung
           WZ_equal                 := #Wz_equal_FB192,
           Error                    := #Error_FB192,
           Warning                  := #Warning_FB192,
           State                    := #State_FB192,
           GrWz_Velo                := #dummy);


NETWORK
TITLE =CALL "FB_TM_WZTYP_RD"

      CALL "FB_TM_WZTYP_RD" , "DI_TM_WZTYP_RD" (
           Req                      := #Req_FB92,
           B_Platz                  := #E_Nr_Bereitst_Platz,
           MagNr                    := #SMag_NewTool,
           Platz                    := #SLoc_NewTool,
           NDR                      := #NDR_FB92,
           Error                    := #Error_FB92,
           Warning                  := #Warning_FB92,
           State                    := #State_FB92,
           SpWz_Typ                 := #T_SpWz_Typ,
           NewTool_Typ              := #T_NewTool_Typ,
           SpWz_langsam             := #T_SpWz_langsam,
           NewTool_langsam          := #T_NewTool_langsam,
           SpWz_schnell             := #T_SpWz_schnell,
           NewTool_schnell          := #T_NewTool_schnell);

NETWORK
TITLE =CALL "FB_HANDSHAKE_WZREGAL"
//Taktmerker für Telegrammwiederholung
      U     "M_Takt_02s"; 
      FP    "HM_PI_Takt_02s"; 
      =     "M_FP_Takt_02s"; 

      CALL "FB_HANDSHAKE_WZREGAL" , "DI_HANDSHAKE_WZREGAL" (
           i_xEnable                := TRUE,
           i_xInit                  := "M_5_ter_OB1_Zyklus",
           i_iWMR_CNC_SENDEN        := "DB_SCHNITTST_OMRON".IW_WMR_CNC_SENDEN,
           i_iWMR_CNC_EMPFANGEN     := "DB_SCHNITTST_OMRON".IW_WMR_CNC_EMPFANGEN,
           i_iWMR_CNC_MAINCOMMAND   := "DB_SCHNITTST_OMRON".IW_WMR_CNC_MAINCOMMAND,
           i_iWMR_CNC_SUBCOMMAND    := "DB_SCHNITTST_OMRON".IW_WMR_CNC_SUBCOMMAND,
           i_iWMR_CNC_1_DATA        := "DB_SCHNITTST_OMRON".IW_WMR_CNC_1_DATA,
           i_iWMR_CNC_2_DATA        := "DB_SCHNITTST_OMRON".IW_WMR_CNC_2_DATA,
           i_iMax_Case_Hauptkomm    := 29,
           i_iAuftrag_Unterkomm     := 1,
           i_iPos_Quitt_Unterkomm   := 2,
           i_iNeg_Quitt_Unterkomm   := 3,
           i_iMeldung_Unterkomm     := 4,
           i_ikein_WZ_Quitt_Unterko := 5,
           i_isend_zaehler_maximum  := 999,
           i_iempf_best_wiederhol   := 3,
           o_iWMR_CNC_SENDEN        := "DB_SCHNITTST_OMRON".OW_WMR_CNC_SENDEN,
           o_iWMR_CNC_EMPFANGEN     := "DB_SCHNITTST_OMRON".OW_WMR_CNC_EMPFANGEN,
           o_iWMR_CNC_MAINCOMMAND   := "DB_SCHNITTST_OMRON".OW_WMR_CNC_MAINCOMMAND,
           o_iWMR_CNC_SUBCOMMAND    := "DB_SCHNITTST_OMRON".OW_WMR_CNC_SUBCOMMAND,
           o_iWMR_CNC_1_DATA        := "DB_SCHNITTST_OMRON".OW_WMR_CNC_1_DATA,
           o_iWMR_CNC_2_DATA        := "DB_SCHNITTST_OMRON".OW_WMR_CNC_2_DATA);


NETWORK
TITLE =Werkzeugtypen
//Neues Werkzeug für Greifer 2
      U(    ; 
      L     #T_NewTool_Typ; 
      L     4; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     5; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     6; 
      ==I   ; 
      U     "DB_PLC_MD_DB20".UDHex._16_BIT4_WZTyp6_Greif2; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     7; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     99; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     9; 
      ==I   ; 
      )     ; 
      =     "M_NewTool_Grf2"; 

//Neues Werkzeug Winkelfräskopf
      U(    ; 
      L     #T_NewTool_Typ; 
      L     99; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_NewTool_Typ; 
      L     9; 
      ==I   ; 
      )     ; 
      =     "M_NewTool_WFK"; 

//Spindelwerkzeug für Greifer 2
      U(    ; 
      L     #T_SpWz_Typ; 
      L     4; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     5; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     6; 
      ==I   ; 
      U     "DB_PLC_MD_DB20".UDHex._16_BIT4_WZTyp6_Greif2; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     7; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     99; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     9; 
      ==I   ; 
      )     ; 
      =     "M_SpTool_Grf2"; 

//Spindelwerkzeug Winkelfräskopf
      U(    ; 
      L     #T_SpWz_Typ; 
      L     99; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     #T_SpWz_Typ; 
      L     9; 
      ==I   ; 
      )     ; 
      =     "M_SpWZ_WFK"; 

//Verzögerung Greifer geklemmt
      U     "DB_NC_PLC".WZW_Grf2_verriegelt; 
      L     S5T#1S; 
      SE    "Te_Grf2_Verriegelung"; 

      U     "Te_Grf2_Verriegelung"; 
      =     "M_Grf2_verz_verriegelt"; 
NETWORK
TITLE =Aktionen bei autom.Grundstlg.fahren
//---(2)--- Behandlung Kommando[9] ----------------------------------
      U     "m_wwgf_RegGf"; 
      FP    "DB_WWZ".gd0.fk0; 
      SPBN  m002; 
      L     B#16#0; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[9]; 
      S     "DB_COMM_WZREGAL".Kommando[9].Request; 
      R     "DB_COMM_WZREGAL".Kommando[9].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[9].Neg_Quitt; 
m002: U     "DB_COMM_WZREGAL".Kommando[9].Neg_Quitt; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
//---(2)-------------------------------------------------------------

      UN    "m_wwgf_SkStrt"; 
      SPB   m001; 
//---(1)--- Frg.Regalbewegung bei autom.Wzw.Grundstlg.fahren --------
      O     "m_wwgf_RGrRqVp"; 
      O     "m_wwgf_RGrRqWp"; 
      O     "m_wwgf_RegGf"; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 
//---(1)-------------------------------------------------------------
m001: NOP   0; 
NETWORK
TITLE =WZM: Regal nicht bereit für Auftrag

      L     #Schritt; 
      L     0; 
      ==I   ; 
      SPBN  R1; 

      U     "M_WZW_Grdst"; 
      U     "DB_SIEM_KANAL_1".E_ChanReset; 
      UN    "m_wwgf_SkStrt"; //30.11.2006, slh
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//Abfrage ob Regalbereitschaft für Transport vorhanden
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Regal_bereit; 
      U(    ; 
      O     "M_Automatik_Betrieb"; //"DB_SIEM_BAG".E_AUTO
      O     "MX_MDA"; //"DB_SIEM_BAG".E_MDA
      )     ; 
      =     "DB_FEHLERMELDUNG".MELDUNG2._701327_Regal_ni_bereit; 
      SPB   MEND; 

//Abfrage ob eine Regalstörung anliegt
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Keine_Stoerung_Regal; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701831_Stoerung_Regal; 
      SPB   MEND; 

      U     #Req_Regal_Tx; 
      SPBN  MEND; 
      R     #Req_Regal_Tx; 


      L     #Einsprung_Regal_Tx; 
      T     #Schritt; 
      L     0; 
      T     #Einsprung_Regal_Tx; 
      SPA   MEND; 
NETWORK
TITLE =Anfrage an Regal ob Werkzeug vorhanden

R1:   L     #Schritt; 
      L     1; 
      ==I   ; 
      SPBN  R2; 

//Eingefügt wegen Fall MTU 2maliges Vorbereiten gleiches WZ 05.04.05 FUH
      U     #A_Quit_Bereitstellen; 
      SPBN  R1a; 
      L     0; 
      T     #Schritt; 
      SPA   MEND; 
//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
R1a:  U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPBN  R1b; 
      L     "TMSpindleIF".IF[1].T_no; 
      T     #Kommando_WZ; 
      S     "M_WZW_Vorber_laeuft"; 

      L     2; 
      T     #Schritt; 
      SPA   MEND; 

R1b:  L     "TMSpindleIF".IF[1].T_no; 
      T     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[1]; 
      S     "M_WZW_Vorber_laeuft"; 
//Auftrag Anfrage Werkzeug vorhanden?
      S     "DB_COMM_WZREGAL".Kommando[1].Request; 
      R     "DB_COMM_WZREGAL".Kommando[1].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[1].Neg_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[1].WZ_nicht_vorhanden_Quitt; 

      R     #WZ_vorbereitet; 

      L     2; 
      T     #Schritt; 
      SPA   MEND; 
NETWORK
TITLE =Kommando an Regal Werkzeug aus Regal an Werkzeugwechselpunkt

R2:   L     #Schritt; 
      L     2; 
      ==I   ; 
      SPBN  R3; 
//Wenn neues Werkzeug vom Typ 4 oder 5, dann Greifer 2 Richtung Magazin
      U     "M_NewTool_Grf2"; 
      SPBN  n36a; 
      U     "M_WZW_Hub_GrdSt"; 
      S     "M_WZW_Gre1_Spi_req"; 

//Bei Winkelfräskopf Greifer entriegeln
      U     "M_NewTool_WFK"; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  n36b; 
      S     "M_Grf2_entr_req"; 

      SPA   n36b; 
//Wenn altes Werkzeug vom Typ 4 oder 5, dann Greifer 1 Richtung Magazin
n36a: U     "M_SpTool_Grf2"; 
      U     #A_Anf_change_M6; //xxxxxxx
      U     "M_WZW_Hub_GrdSt"; 
      S     "M_WZW_Gre1_Mag_req"; 

//Abfrage Werkzeug vorhanden beendet
//Negative Quittung
n36b: U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n36g; 

      U     "DB_COMM_WZREGAL".Kommando[1].Neg_Quitt; 
      SPBN  n36c; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

//Werkzeug im Regal nicht vorhanden
n36c: U     "DB_COMM_WZREGAL".Kommando[1].WZ_nicht_vorhanden_Quitt; 
      SPBN  n36d; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701828_WZ_nicht_vorhand; 
      R     "M_WZW_Vorber_laeuft"; 
      L     0; 
      T     #Schritt; 
      SPA   MEND; 

//Werkzeug ist in Regal vorhanden
n36d: U     "DB_COMM_WZREGAL".Kommando[1].Pos_Quitt; 
      SPBN  R3; 
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//Abfrage ob Übergabeplatz (Regalgreifer) belegt sein muss
n36g: U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      SPB   bel; 
//Werkzeug aus Regal holen und auf Werkzeugwechselpunkt (ohne WZ)
      S     "DB_COMM_WZREGAL".Kommando[6].Request; 
      R     "DB_COMM_WZREGAL".Kommando[6].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[6].Neg_Quitt; 
      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[6]; 
      SPA   n36e; 

//Werkzeug aus Regal holen und auf Werkzeugwechselpunkt (mit WZ)
bel:  S     "DB_COMM_WZREGAL".Kommando[5].Request; 
      R     "DB_COMM_WZREGAL".Kommando[5].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[5].Neg_Quitt; 
      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[5]; 

n36e: L     3; 
      T     #Schritt; 

      SET   ; 
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

      U     #A_Anf_change_M6; 
      U(    ; 
      L     "DB_NC_PLC".Wz.Typ; 
      L     9.000000e+002; 
      <>R   ; 
      )     ; 
      UN    #A_Anf_HWZ_load_M6; 
      UN    #A_ANF_HWZ_unload_M6; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.Vollwechsel_steht_an; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.Reserve_1_1; 

      SPA   R3; 

NETWORK
TITLE =WZW: Befehl Hub zum Magazin

R3:   L     #Schritt; 
      L     3; 
      ==I   ; 
      SPBN  R4; 

//Werkzeug an Werkzeugwechselpunkt

//Bei WZ-Typ 4 oder 5 warten bis Greifer 2 Richtung Magazin
      U     "M_NewTool_Grf2"; 
      SPBN  n37b; 

      U     "I_WW_1GRF_SPI"; 
      SPBN  MEND; 

      U     "M_NewTool_WFK"; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  n37b; 
      U     "DB_NC_PLC".WZW_Grf2_entriegelt; //"I_WW_GRF_ENTRIEGELT"
      SPBN  MEND; 
      SPA   n37b; 

//Bei WZ-Typ 4 oder 5 warten bis Greifer 2 Richtung Magazin
      U     "M_SpTool_Grf2"; 
      SPBN  n37b; 

      U     "I_WW_1GRF_MAG"; 
      SPBN  MEND; 

n37b: U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n37f; 

//Negative Quittung
      U(    ; 
      U     "DB_COMM_WZREGAL".Kommando[5].Neg_Quitt; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      )     ; 
      O(    ; 
      U     "DB_COMM_WZREGAL".Kommando[6].Neg_Quitt; 
      UN    "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      )     ; 
      SPBN  n37c; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

//Positive Quittung
n37c: U(    ; 
      U     "DB_COMM_WZREGAL".Kommando[5].Pos_Quitt; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      )     ; 
      O(    ; 
      U     "DB_COMM_WZREGAL".Kommando[6].Pos_Quitt; 
      UN    "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      )     ; 
n37f: U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      SPBN  R4; 

//Regalbewegung sperren
      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//Überwachung ob Werkzeug im Greifer physikalisch vorhanden
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      SPBN  n37e; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700702_WZ_UGP_nicht_1S; 
      SPA   MEND; 

//Hub ins Magazin
n37e: S     "M_WZW_Hub_Mag_req"; 

      L     4; 
      T     #Schritt; 
NETWORK
TITLE =Kommando an Regal Greifer-Spanner öffnen und auf Vorposition

R4:   L     #Schritt; 
      L     4; 
      ==I   ; 
      SPBN  R5; 

//Hub in Magazin
      U     "M_WZW_Hub_Magazin"; 
      SPBN  R5; 

//Bei Winkelkopf Greifer verriegeln und warten bis verriegelt ist
      U     "M_NewTool_WFK"; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  R4a; 
      S     "M_Grf2_verr_req"; 

      U     "M_Grf2_verz_verriegelt"; 
      SPBN  MEND; 

R4a:  U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   R4b; 
      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[7]; 

//Regal-Greifer öffnen und auf Vorposition
      S     "DB_COMM_WZREGAL".Kommando[7].Request; 
      R     "DB_COMM_WZREGAL".Kommando[7].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[7].Neg_Quitt; 

//Regalbewegung freigeben
R4b:  SET   ; 
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

      L     5; 
      T     #Schritt; 

NETWORK
TITLE =WZW: Hub in Grundstellung fahren

R5:   L     #Schritt; 
      L     5; 
      ==I   ; 
      SPBN  R6; 

      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_offen; 
      SPBN  R6; 

//Umspeichern
      U     "M_WZW_Gre1_Pos_Mag"; 
      S     "M_Umsp_Mag-Gr1"; 

      U     "M_WZW_Gre1_Pos_Spi"; 
      S     "M_Umsp_Mag-Gr2"; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPBN  R5a; 

      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Vorposition; 
      SPB   R5b; 
      SPA   n39b; 

//Negative Auftragsquittierung
R5a:  U     "DB_COMM_WZREGAL".Kommando[7].Neg_Quitt; 
      SPBN  n39a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

//Regal-Greifer auf Vorposition
n39a: U     "DB_COMM_WZREGAL".Kommando[7].Pos_Quitt; 
      SPBN  R6; 


//Regalbewegung sperren
R5b:  SET   ; 
      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//Hub in Grundstellung fahren
      S     "M_WZW_Hub_GrdSt_req"; 

//Umspeichern
      UN    "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; //Option Siemensregal
      SPBN  n39b; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      S     "M_Umsp_Mag-Gr1"; 

      U     "M_WZW_Gre1_Pos_Spi"; 
      S     "M_Umsp_Mag-Gr2"; 

//Warten bis Hub in Grundstellung
n39b: U     "M_WZW_Hub_GrdSt"; 
      SPBN  MEND; 
//Werkzeugbruchanforderung
      S     "M_WZB_Anforderung"; 
      R     "M_WZB_Messung"; 
      R     "M_WZB_Ready"; 
      S     "M_Req_write_Bruchdaten"; 

//Kegelreinigung aktivieren
      S     "M_Req_WZ_Reinigen"; 
      R     "M_Ready_WZ_Reinigen"; 

//Regalbewegung freigeben
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   R5c; 
      L     0; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[3]; 
      S     "DB_COMM_WZREGAL".Kommando[3].Request; 
      R     "DB_COMM_WZREGAL".Kommando[3].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[3].Neg_Quitt; 
R5c:  NOP   0; 
//      SPA   E042

//Beschreiben der Werkzeugbruchvariablen
//      U     "DB_DM_M_FUNKTION".MX_M[36] //M-Funktion für WZB-Warnung ausgeben aktiviert
//      U(    
//      L     "DI_TM_WZBRUCH_R".TC_TPC1   //und WZBruch aktiviert
//      L     1.000000e+000
//      >=R   
//      )     
//      SPB   E041

//      U     "DB_DM_M_FUNKTION".MX_M[37] //M-Funktion für WZB-Warnung ausgeben aktiviert
//      U(    
//      L     "DI_TM_WZBRUCH_R".TC_TPC1   //und WZBruch aktiviert
//      L     1.000000e+000
//      >=R   
//      )     
//      SPB   E043

//      L     "DI_TM_WZBRUCH_R".TC_TPC1
//      RND   
//      T     "DB_REMANENT".WZB_GREIFER
//      SPA   E042

// M36, OEM=2
//E041: SET   
//      R     "DB_DM_M_FUNKTION".MX_M[36]

//      L     2                           //Für dieses WZ nur Warnung ausgeben
//      T     "DB_REMANENT".WZB_GREIFER

//      SET   
//      R     "MX_WZB_Ov_0"
//      SPA   E042

// M37, OEM=3
//E043: SET   
//      R     "DB_DM_M_FUNKTION".MX_M[37]

//      L     3                           //Für dieses WZ Vorschub und Eilgang sperren
//      T     "DB_REMANENT".WZB_GREIFER

//E042: NOP   0

      L     6; 
      T     #Schritt; 
NETWORK
TITLE =Alles in Grundstellung --> Vorbereiten quittieren

R6:   L     #Schritt; 
      L     6; 
      ==I   ; 
      SPBN  R20; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   R6a; 

      U     "DB_COMM_WZREGAL".Kommando[3].Neg_Quitt; 
      SPBN  n40a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

R6a:  U     "DB_COMM_WZREGAL".Kommando[5].Neg_Quitt; 
      O     "DB_COMM_WZREGAL".Kommando[6].Neg_Quitt; 
      SPBN  n40a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 


n40a: U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZB_Ready"; 
      U     "M_Ready_WZ_Reinigen"; 
      U(    ; 
      O(    ; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      U     "M_NewTool_WFK"; 
      U     "DB_NC_PLC".WZW_Grf2_verriegelt; 
      )     ; 
      O(    ; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      UN    "M_NewTool_WFK"; 
      )     ; 
      ON    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      )     ; 
      SPBN  MEND; 

      R     "MX_WZB_NeuWahl"; 
      S     #WZ_vorbereitet; 
//      S     "M_WZV_Bereitst_Fertig"
      R     "M_WZW_Vorber_laeuft"; 
      L     0; 
      T     #Schritt; 
      SPA   MEND; 
NETWORK
TITLE =Werkzeug vom WZ-Greifer ablegen

R20:  L     #Schritt; 
      L     20; 
      ==I   ; 
      SPBN  R202; 
      S     "M_WZW_Ausw"; 

// Wenn bei WZB ein WZ im Greifer ist Vorschub-Override Sperren
      U     "DI_WZ_BRUCH".SX_GRF_ANF; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      >I    ; 
      )     ; 
      SPBN  E142; 

      L     "DB_REMANENT".WZB_GREIFER; 
      L     2; 
      <>I   ; 
      U     "DI_WZ_BRUCH".SX_GRF_ANF; 
      S     "MX_WZB_Ov_0"; 

// Eilgang Sperre, OEM=3
      L     "DB_REMANENT".WZB_GREIFER; 
      L     3; 
      ==I   ; 
      U     "DI_WZ_BRUCH".SX_GRF_ANF; 
      S     "MX_WZB_G0_Sperre"; 

E142: L     202; 
      T     #Schritt; 
      SPA   R202; 

//***** Wird nicht ausgeführt, da permanent abgefragt wird ********
//E142: NOP   0

      U     #Req_FB192; 
      O     #Req_FB92; 
      O     "Mx_Werkzeugdaten_lesen"; 
      SPB   MEND; 
      S     "Mx_Werkzeugdaten_lesen"; //Request Greiferdaten lesen
      R     "Mx_WZdaten_lesen_ready"; 
      L     201; 
      T     #Schritt; 
      SPA   MEND; 

      L     #Schritt; 
      L     201; 
      ==I   ; 
      SPBN  R202; 
      U     "Mx_WZdaten_lesen_ready"; 
      UN    "Mx_Wzdaten_lesen_error"; 
      R     "Mx_Werkzeugdaten_lesen"; 
      SPBN  MEND; 
      L     202; 
      T     #Schritt; 
      SPA   MEND; 
//******************************************************************

R202: L     #Schritt; 
      L     202; 
      ==I   ; 
      SPBN  R21; 

//WZ-Bruch Anforderung 2.Messung
      U     "DI_WZ_BRUCH".SX_GRF_ANF; 
      U(    ; 
      L     "DB_PLC_MD_DB20".UDInt._010_ANWAHL_WERZEUGBRUCH; 
      L     0; 
      >I    ; 
      )     ; 
      SPBN  n6c; 
      U     "I_WZ_SPA_gespannt"; 
      UN    "I_WZ_SPA_geloest"; 
      SPBN  R21; 
      S     "M_WZB_Anforderung"; 
      S     "M_WZB_Messung"; 
      R     "M_WZB_Ready"; 


n6c:  UN    "DI_WZ_BRUCH".SX_GRF_ANF; 
      S     "M_WZB_Ready"; 

//Abfrage ob Platz zum ablegen vorhanden
      U(    ; 
      U     "M_WZGr1_belegt"; 
      U     "DB_DM_M_FUNKTION".MX_M[283]; 
      )     ; 
      O(    ; 
      U     "M_WZGr1_belegt"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      U     #WZ_ablegen_aus_ZwSp; 
      )     ; 
      SPBN  n6a; 
      L     "DB_GREIFER_DATEN".TNR_Gr1; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[8]; 
      T     #Kommando_WZ; 
      SPA   n6b; 

n6a:  U(    ; 
      U     "M_WZGr2_belegt"; 
      U     "DB_DM_M_FUNKTION".MX_M[284]; 
      )     ; 
      O(    ; 
      U     "M_WZGr2_belegt"; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      U     #WZ_ablegen_aus_ZwSp; 
      )     ; 
      SPBN  R21; 
      L     "DB_GREIFER_DATEN".TNR_Gr2; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[8]; 
      T     #Kommando_WZ; 

n6b:  U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPBN  n6d; 
      L     21; 
      T     #Schritt; 
      SPA   R21; 

n6d:  S     "DB_COMM_WZREGAL".Kommando[8].Request; 
      R     "DB_COMM_WZREGAL".Kommando[8].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[8].Neg_Quitt; 
      R     #WZ_ins_Regal_beendet; 
      R     #WZ_GRF_leer; 

      L     21; 
      T     #Schritt; 


NETWORK
TITLE =Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe

R21:  L     #Schritt; 
      L     21; 
      ==I   ; 
      SPBN  R22; 
      R     "DB_DM_M_FUNKTION".MX_M[283]; 
      R     "DB_DM_M_FUNKTION".MX_M[284]; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n42k; 
//Auftrag Leerplatzsuche beendet
//Kein Platz zum Ablegen vorhanden
      U     "DB_COMM_WZREGAL".Kommando[8].WZ_nicht_vorhanden_Quitt; 
      SPBN  n42a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701826_Kein_Pl_im_Regal; 
      SPA   MEND; 

//Negative Auftragsquittung
n42a: U     "DB_COMM_WZREGAL".Kommando[8].Neg_Quitt; 
      SPBN  n42b; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

//Positive Auftragsquittung
n42b: U     "DB_COMM_WZREGAL".Kommando[8].Pos_Quitt; 

//WZ-Greifer in Grundstellung
n42k: U     "M_WZW_Hub_GrdSt"; 
      U     "M_WZB_Ready"; 
      SPBN  R22; 
      R     "MX_WZB_NeuWahl"; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; //Option Siemensregal
      SPBN  n42c; 
      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[4]; 
      S     "DB_COMM_WZREGAL".Kommando[4].Request; 
      R     "DB_COMM_WZREGAL".Kommando[4].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[4].Neg_Quitt; 

// Freigabebit für Bewegung im Magazinbereich
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 
      SPA   n42d; 

//Auftrag Regal-Greifer zur Vorposition
n42c: L     0; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[4]; 
      S     "DB_COMM_WZREGAL".Kommando[4].Request; 
      R     "DB_COMM_WZREGAL".Kommando[4].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[4].Neg_Quitt; 

// Freigabebit für Bewegung im Magazinbereich
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

      L     0; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[4]; 

n42d: L     22; 
      T     #Schritt; 


NETWORK
TITLE =WZM: Werkzeug im Lader    

R22:  L     #Schritt; 
      L     22; 
      ==I   ; 
      SPBN  R23; 

//Neuer Ablauf bei Siemensregal
      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n8a; 

//Auftrag Regal-Greifer zur Vorposition beendet
      U     "DB_COMM_WZREGAL".Kommando[4].Neg_Quitt; 
      SPBN  n43a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

n43a: U     "DB_COMM_WZREGAL".Kommando[4].Pos_Quitt; 
      SPBN  R23; 

//Abfrage ob ein Werkzeug im Regal-Greifer --> wenn ja, dann Fehler
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      SPBN  n8a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701807_WZ_in_Lader; 
      SPA   MEND; 

//Regal-Greifer in Vorposition und Übergabebereich
n8a:  U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Vorposition; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Uebergabeber; 
      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      SPBN  n8b; 
      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//WZ-Greifer ins Magazin fahren und Regalbewegung sperren
      UN    "DB_NC_PLC".WZW_NC_Aktiv; 
      SPBN  MEND; 
      S     "M_WZW_Hub_Mag_req"; 
      R     "DB_FEHLERMELDUNG".VS_Halt_Async4._701829_RegGr_ni_in_Pos; 
      L     23; 
      T     #Schritt; 
      SPA   R23; 

n8b:  UN    "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701829_RegGr_ni_in_Pos; 
      SPA   MEND; 


NETWORK
TITLE =Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe

R23:  L     #Schritt; 
      L     23; 
      ==I   ; 
      SPBN  R24; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n46a; 

      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[2]; 

//WZ-Greifer im Magazin
      U     "M_WZW_Hub_Magazin"; 
      SPBN  R24; 

//Auftrag an Regal Werkzeug aus WZ-Greifer holen
      S     "DB_COMM_WZREGAL".Kommando[2].Request; 
      R     "DB_COMM_WZREGAL".Kommando[2].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[2].Neg_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[2].Fehler; 

//Regalbewegung wieder freigeben
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 


      L     24; 
      T     #Schritt; 
      SPA   R24; 

n46a: U     "M_WZW_Hub_Magazin"; 
      SPBN  R24; 
//Regalbewegung wieder freigeben
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

      L     24; 
      T     #Schritt; 

NETWORK
TITLE =Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe

R24:  L     #Schritt; 
      L     24; 
      ==I   ; 
      SPBN  R25; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPBN  r24b; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      O     ; 
      UN    "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_zu_ohne_WZ; 
      SPBN  MEND; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      S     "M_Umsp_Gr2-Mag"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      S     "M_Umsp_Gr1-Mag"; 
      SPA   r24d; 

r24b: U     "DB_COMM_WZREGAL".Kommando[2].Neg_Quitt; 
      SPBN  n10a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

//Auftrag Werkzeug aus WZ-Greifer holen beendet
n10a: U     "DB_COMM_WZREGAL".Kommando[2].Pos_Quitt; 
      SPBN  R25; 
//---(1)--- neu, slh, 7.12.2006 --------------------------------------
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      O     ; 
      UN    "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_zu_ohne_WZ; 
      SPBN  MEND; 
      U     "M_WZW_Gre1_Pos_Spi"; 
      S     "M_Umsp_Gr2-Mag"; 
      U     "M_WZW_Gre1_Pos_Mag"; 
      S     "M_Umsp_Gr1-Mag"; 
//---(1)--------------------------------------------------------------
r24d: U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Uebergabeber; 
      U(    ; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      ON    "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      )     ; 
      U     "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.Greifer_in_Wechselpos; 
      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 
      R     "M_WZW_Hub_Mag_req"; 

//Regalbewegung sperren
      R     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 

//Bei Winkelfräskopf Greifer entriegeln und warten bis entriegelt ist
      U     "M_SpWZ_WFK"; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  R24c; 
      S     "M_Grf2_entr_req"; 
      U     "I_WW_GRF_ENTRIEGELT"; 
      SPBN  MEND; 

//WZ-Greifer wieder in Grundstellung fahren
R24c: S     "M_WZW_Hub_GrdSt_req"; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   n45c; 
//Warten auf WZ-Greifer in Grundstellung
      U     "M_WZW_Hub_GrdSt"; 
      SPBN  MEND; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      S     "M_Grf2_verr_req"; 

//---(2)---auskommentiert, slh, 7.12.2006 --------------------------
//Werkzeugdaten umspeichern
//      U     "M_WZW_Gre1_Pos_Spi" 
//      SPBN  n45a                 
//      S     "M_Umsp_Gr2-Mag"     
//      SPB   n45c                 
//n45a: U     "M_WZW_Gre1_Pos_Mag" 
//      SPBN  MEND                 
//      S     "M_Umsp_Gr1-Mag"  
//---(2)------------------------------------------------------------

n45c: L     25; 
      T     #Schritt; 
      SPA   MEND; 
NETWORK
TITLE =WZW Übergabeplatz nicht 1-Signal  

R25:  L     #Schritt; 
      L     25; 
      ==I   ; 
      SPBN  R26; 

//Werkzeuggreifer in Grundstellung
      U     "M_WZW_Hub_GrdSt"; 
      SPBN  R26; 
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      S     "M_Grf2_verr_req"; 

      UN    "DB_SCHNITTST_OMRON".IW_WMR_CNC_0.WZ_in_Greifer; 
      U     "DB_PLC_MD_DB20".UDHex._08_BIT0_UGP_BELEGT; 
      SPBN  n11a; 
      S     "DB_FEHLERMELDUNG".Spi_VS_Halt_Haupt._700702_WZ_UGP_nicht_1S; 
      SPA   MEND; 

//Auftrag an Regal Werkzeug vom Regal-Greifer ins Regal ablegen
n11a: U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   r25a; 
      SET   ; 
      S     "DB_COMM_WZREGAL".Kommando[3].Request; 
      R     "DB_COMM_WZREGAL".Kommando[3].Pos_Quitt; 
      R     "DB_COMM_WZREGAL".Kommando[3].Neg_Quitt; 


//Regalbewegung wieder freigeben
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 
      S     #WZ_GRF_leer; 

      L     #Kommando_WZ; 
      T     "DB_COMM_WZREGAL".WG_Auftrag_WZ_Nr[3]; 

      L     26; 
      T     #Schritt; 
      SPA   R26; 

r25a: SET   ; 
      S     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung; 
      S     #WZ_GRF_leer; 

      L     26; 
      T     #Schritt; 

NETWORK
TITLE =WZM: Negative Quittung bei Auftrag Regal

R26:  L     #Schritt; 
      L     26; 
      ==I   ; 
      SPBN  MEND; 

      U     "DB_PLC_MD_DB20".UDHex._07_BIT7_Siemens_Regal; 
      SPB   r26a; 

      U     "DB_COMM_WZREGAL".Kommando[3].Neg_Quitt; 
      SPBN  n12a; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

n12a: U     "DB_COMM_WZREGAL".Kommando[3].Pos_Quitt; 
      SPBN  MEND; 

//Warten bis Greiferentriegelung wieder deaktiviert ist
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      U     "DB_NC_PLC".WZW_Grf2_verriegelt; 
      ON    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  MEND; 

      S     #WZ_ins_Regal_beendet; 
//      R     "DB_DM_M_FUNKTION".MX_M[288]
      R     "M_WZW_Ausw"; 
      L     0; 
      T     #Schritt; 
      SPA   MEND; 

r26a: U     "DB_COMM_WZREGAL".Kommando[4].Neg_Quitt; 
      SPBN  n12b; 
      S     "DB_FEHLERMELDUNG".VS_Halt_Async4._701827_Neg_Quitt_Auftra; 
      SPA   MEND; 

n12b: U     "DB_COMM_WZREGAL".Kommando[4].Pos_Quitt; 
      SPBN  MEND; 

//Warten bis Greiferentriegelung wieder deaktiviert ist
      U     "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      U     "DB_NC_PLC".WZW_Grf2_verriegelt; 
      ON    "DB_PLC_MD_DB20".UDHex._05_BIT5_Gr2_Entriegel; 
      SPBN  MEND; 

      S     #WZ_ins_Regal_beendet; 
//      R     "DB_DM_M_FUNKTION".MX_M[288]
      R     "M_WZW_Ausw"; 
      L     0; 
      T     #Schritt; 

NETWORK
TITLE =Freigabe Maschine: Bewegung von Regal innerhalb Werkzeugübergabe

MEND: NOP   0; 
      U     "M_Leistung_Steht_an"; 
      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.MA_Leistung_ein; 

//--- Test slh 6.12.2006 ---------------------------------------------
//      U     "m_konstruktion"
//      U     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung
//      U(    
//      ON    "M_FeedHold_from_FC24"
//      O     "m_wwgf_SkStrt"
//      )     
//      =     "DB_SCHNITTST_OMRON".OW_WMR_CNC_0.FRG_Regal_Bewegung
//--------------------------------------------------------------------

//Aufzeichnen der letzten 5 Befehle
      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_SENDEN; 
      L     "MW_OW_WMR_CNC_SENDEN"; 
      ==I   ; 
      SPB   _end; 
      L     "DB_OMRON_KOMMANDO".Kommando8.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando9.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando8.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando9.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando8.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando9.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando8.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando9.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando7.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando8.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando7.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando8.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando7.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando8.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando7.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando8.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando6.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando7.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando6.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando7.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando6.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando7.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando6.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando7.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando5.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando6.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando5.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando6.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando5.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando6.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando5.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando6.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando4.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando5.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando4.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando5.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando4.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando5.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando4.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando5.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando3.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando4.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando3.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando4.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando3.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando4.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando3.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando4.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando2.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando3.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando2.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando3.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando2.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando3.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando2.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando3.Auftragsnummer; 

      L     "DB_OMRON_KOMMANDO".Kommando1.Maincommando; 
      T     "DB_OMRON_KOMMANDO".Kommando2.Maincommando; 
      L     "DB_OMRON_KOMMANDO".Kommando1.Subcommando; 
      T     "DB_OMRON_KOMMANDO".Kommando2.Subcommando; 
      L     "DB_OMRON_KOMMANDO".Kommando1.CNC_DATA1; 
      T     "DB_OMRON_KOMMANDO".Kommando2.CNC_DATA1; 
      L     "DB_OMRON_KOMMANDO".Kommando1.Auftragsnummer; 
      T     "DB_OMRON_KOMMANDO".Kommando2.Auftragsnummer; 

      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_MAINCOMMAND; 
      T     "DB_OMRON_KOMMANDO".Kommando1.Maincommando; 
      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_SUBCOMMAND; 
      T     "DB_OMRON_KOMMANDO".Kommando1.Subcommando; 
      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_1_DATA; 
      T     "DB_OMRON_KOMMANDO".Kommando1.CNC_DATA1; 
      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_SENDEN; 
      T     "DB_OMRON_KOMMANDO".Kommando1.Auftragsnummer; 

      L     "DB_SCHNITTST_OMRON".OW_WMR_CNC_SENDEN; 
      T     "MW_OW_WMR_CNC_SENDEN"; 

_end: NOP   0; 
END_FUNCTION_BLOCK

