FUNCTION_BLOCK "FB_SAFE_ZD_MAIN"
TITLE =
//$Revision: 1.18 $
//$Date: 2008/11/10 13:26:42CET $
//$Author: hgc $
//
//
//Zwangsdynamisierung Baustein für Solutionline DMx55-125x2
//
//Unterteilt in zwei Sicherheitsbereiche:
//1. Bereich 1         (Arbeitsraumachsen / Palettenwechslerachse / Mgazinachsen)
//bestehend aus Achse:    X Y Z B C SPI              PW             MAG1/MAG2 GR  
//
//2. Bereich 2         (Palettenspeicherachsen / Palettenwechslerachse)
//bestehend aus Achse:     DREHST/TRANSP/HUB              PW
AUTHOR : GehAB
VERSION : 0.1


VAR_INPUT
  E_Sec_Imp : BOOL ;	//Sekundentakt 
  E_Maschine_ein : BOOL ;	//Maschine Ein Signale
  E_Tuer_verriegeln : BOOL ;	
END_VAR
VAR
  Ber1 : STRUCT 	
   BT_Start : BOOL ;	
   BT_2_Start : BOOL ;	
   FN_BT_laeuft : BOOL ;	
   IMN_BT_laeuft : BOOL ;	
   FN_BT_2_laeuft : BOOL ;	
   ZD_Start : BOOL ;	
   FP_ZD_Start : BOOL ;	
   ZD_laeuft : BOOL ;	
   BT_Laeuft : BOOL ;	
   BT_2_Laeuft : BOOL ;	
   FP_ZD_ANF_WZW : BOOL ;	
   FP_ZD_ANF_WZW1 : BOOL ;	
   FP_WZW_FREIGABE : BOOL ;	
   IM_WZW_ZD_START : BOOL ;	
   FN_ZD_Laeuft : BOOL ;	
   IM_Start_ZD_Tuere : BOOL ;	
   Merke_Taste_entriegeln : BOOL ;	
   IM_Taste_gemerkt : BOOL ;	
   Bremse_defekt : BOOL ;	//Bremse als defekt festgestellt
   Zeit_sec : DINT ;	//Sekundenzähler
   ZD_Anf_WZW : BOOL ;	//Anforderung ZD beim nächsten WZW (Zeit abgelaufen)
   ZD_Anf_Tuere : BOOL ;	//Anforderung ZD beim Tueröffnen (Zeit abgelaufen)
   HW_start : BOOL ;	//Anforderung HW-testen
   FN_HW_Test : BOOL ;	
   IM_HW_Test_fertig : BOOL ;	
   HW_laeuft : BOOL ;	
   Anf_Tuer_entriegeln : BOOL ;	//Anforderung Tuere entriegeln
   Sperre_Tuer_ZD : BOOL ;	//Sperre Tuer öffen durch ZD
   Zeit_WZW : INT  := 360;	//Vorgabe Stunden bis WZW ZD anfordert
   Zeit_Tuere : INT  := 480;	//Vorgabe Stunden bis Tuere ZD anfordert
  END_STRUCT ;	
  Ber2 : STRUCT 	
   BT_Start : BOOL ;	
   BT_2_Start : BOOL ;	
   FN_BT_laeuft : BOOL ;	
   IMN_BT_laeuft : BOOL ;	
   FN_BT_2_laeuft : BOOL ;	
   ZD_Start : BOOL ;	
   FP_ZD_Start : BOOL ;	
   ZD_laeuft : BOOL ;	
   BT_Laeuft : BOOL ;	
   BT_2_Laeuft : BOOL ;	
   FP_ZD_ANF_PW : BOOL ;	
   FP_ZD_ANF_PW1 : BOOL ;	
   FP_PW_FREIGABE : BOOL ;	
   IM_PW_ZD_START : BOOL ;	
   FN_ZD_Laeuft : BOOL ;	
   IM_Start_ZD_Tuere : BOOL ;	
   Merke_Taste_entriegeln : BOOL ;	
   IM_Taste_gemerkt : BOOL ;	
   Bremse_defekt : BOOL ;	//Bremse als defekt festgestellt
   ZD_Anf_PW : BOOL ;	//Anforderung ZD beim nächsten PW (Zeit abgelaufen)
   ZD_Anf_Tuere : BOOL ;	//Anforderung ZD beim Tueröffnen (Zeit abgelaufen)
   HW_start : BOOL ;	//Anforderung HW-testen
   FN_HW_Test : BOOL ;	
   IM_HW_Test_fertig : BOOL ;	
   HW_laeuft : BOOL ;	
   Anf_Tuer_entriegeln : BOOL ;	//Anforderung Tuere entriegeln
   Sperre_Tuer_ZD : BOOL ;	//Sperre Tuer öffen durch ZD
   Zeit_Tuere : INT  := 480;	//Vorgabe Stunden bis Tuere ZD anfordert
   Zeit_sec : DINT ;	//Sekundenzähler
   Zeit_PW : INT  := 480;	//Vorgabe Minuten bis PW ZD anfordert
  END_STRUCT ;	
  BER1_Schritt : ARRAY  [1 .. 10 ] OF BOOL  := FALSE;	
  BER1_FM_Schritt : ARRAY  [1 .. 10 ] OF BOOL ;	
  BER1_IM_Schritt : ARRAY  [1 .. 10 ] OF BOOL ;	
  BER2_Schritt : ARRAY  [1 .. 10 ] OF BOOL ;	
  BER2_FM_Schritt : ARRAY  [1 .. 10 ] OF BOOL ;	
  BER2_IM_Schritt : ARRAY  [1 .. 10 ] OF BOOL ;	
END_VAR
VAR_TEMP
  T_BER1_Sec_WZW : DINT ;	
  T_BER1_Sec_Tuere : DINT ;	
  T_BER2_Sec_PW : DINT ;	
  T_BER2_Sec_Tuere : DINT ;	
  T_BER1_BT_Err_1_FC18 : BOOL ;	
  T_BER1_BT_Err_2_FC18 : BOOL ;	
  T_BER2_BT_Err_1_FC18 : BOOL ;	
  T_BER2_BT_Err_2_FC18 : BOOL ;	
  T_Taste_Kab_entriegeln : BOOL ;	
  T_Taste_Mag_entriegeln : BOOL ;	
  T_BER1_Impuls_Taste_entr : BOOL ;	
  T_BER1_OPTION_BT_1 : BOOL ;	//Bereich 1 Option Bremsentest
  T_BER1_OPTION_BT_KOPF_AX : BOOL ;	//Bereich 1 Option Bremsentest Kopf-Achse
  T_BER2_OPTION_BT_1 : BOOL ;	//Bereich 2 Option Bremsentest
  T_BER2_OPTION_BT_2 : BOOL ;	//Bereich 2 Option zweiter Bremsentest
  T_BER2_Impuls_Taste_entr : BOOL ;	
  T_FRG_FUER_ZD_VON_MAG_RP : BOOL ;	
  T_ANF_ENTR_DURCH_MAG_RP : BOOL ;	
END_VAR
BEGIN
NETWORK
TITLE =BER1 ZD MASCHINE: Option Bremsentest vertikale Achse
//BEREICH 1 ZWANGSDYNAMISIERUNG MASCHINE (ARBEITSRAUM-WZW-PW-ACHSEN)
      SET   ; 
      =     #T_BER1_OPTION_BT_1; 
NETWORK
TITLE =BER1 ZD MASCHINE: Option Bremsentest Kopfachse

      O(    ; 
      L     2; 
      L     "DB_PLC_MD_DB20".UDInt._007_ANWAHL_FRAESKOPF; 
      ==I   ; 
      )     ; 
      O(    ; 
      L     5; 
      L     "DB_PLC_MD_DB20".UDInt._007_ANWAHL_FRAESKOPF; 
      ==I   ; 
      )     ; 
      =     #T_BER1_OPTION_BT_KOPF_AX; 
NETWORK
TITLE =BER1 ZD MASCHINE: M249 (ZD durch WZW) quittierpflichtig

      SET   ; 
      =     "DB_DM_M_FUNKTION".MX_QuitPflicht[249]; 
NETWORK
TITLE =BER1 ZD MASCHINE: Anforderung ZD steht an durch WZW
//Zwangsdynamisierung bei WZW Zeit abglaufen -> ZD bei WZW anfordern
//("DB_NC_PLC".WZW_AnforderungZD an WZW-Zyklus melden)
//
      U     #Ber1.ZD_Anf_WZW; 
      UN    "M_PW_Aktiv"; // ZD steht an an WZW
      UN    "DB_SAFE_ALLG1".ZD_Z_disable; 
      UN    "DB_ICON"._1.UI_17; 
      =     "M_Anf_ZD_WZW"; 
      =     "DB_NC_PLC".WZW_AnforderungZD; 
NETWORK
TITLE =Reset M Funktion 249 = ZD bei WZW

      U(    ; 
      U     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      U     #Ber1.ZD_Anf_WZW; 
      O     "M_Ruecksetze_Fehler"; 
      ON    #Ber1.ZD_Anf_WZW; 
      O     "DB_ICON"._1.UI_17; 
      )     ; 
      U     "DB_DM_M_FUNKTION".MX_M[249]; 
      R     "DB_DM_M_FUNKTION".MX_M[249]; 
      =     "DB_DM_M_FUNKTION".MX_Quitt[249]; 
NETWORK
TITLE =BER1 ZD MASCHINE: Freigabe für ZD während WZW

      U     "DB_DM_M_FUNKTION".MX_M[249]; 
      U     "M_Anf_ZD_WZW"; 
      U     "M_Hauptachsen_stehen"; 
      U     "M_Zusatzachsen_stehen"; 
      U(    ; 
      L     "MB_SKZ_Abl_Mag1"; 
      L     0; 
      ==I   ; 
      )     ; 
      S     "M_Freigab_ZD_WZW"; 
      U(    ; 
      O     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      O     "M_Ruecksetze_Fehler"; 
      )     ; 
      R     "M_Freigab_ZD_WZW"; 
      NOP   0; 
NETWORK
TITLE =BER1 ZD MASCHINE: ZD bei WZW starten
//Start ZD wenn Achsen in sicherer Position
      U     "M_Freigab_ZD_WZW"; 
      FP    #Ber1.FP_WZW_FREIGABE; 
      =     #Ber1.IM_WZW_ZD_START; 
NETWORK
TITLE =BER1 ZD MASCHINE: Zwangsdynamierung überspringen durch Wizzard

      UN    "DB_SAFE_ZD".GR1_ZD.Tuere_zuhalten; // Tuere zuhalten
      R     "DB_SAFE_ALLG1".ZD_Z_disable; 
NETWORK
TITLE =Freigabe für Zwangsdynamisierung vom Magazin/RP

      U     "DB_FEHLERMELDUNG".SAFE_MELD._701502_ZD_ANF_HAX; 
      UN    "DB_SAFE_ALLG1".ZD_Z_disable; 
      UN    "M_Restweg_aktiv"; 
      U     "M_Kabine_verriegeln"; 
      U     "M_Hauptspindel_steht"; 
      U     "M_Hauptachsen_stehen"; 
      U     "M_Zusatzachsen_stehen"; 
      UN    "M_WZ_Reinigen_Aktiv"; 
      U     "Ta_WZW_Aktiv_beendet"; 
      U     "M_WW_X_imArbeitsraum"; 
      UN    "M_Programm_Aktiv"; 
      O     "DB_SPL".IPLC_ZD_GR1_RUN; 
      =     #T_FRG_FUER_ZD_VON_MAG_RP; 
NETWORK
TITLE =Warnung: Keine Freigabe für Zwangsdynamisierung durch RP MAG

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".WARNUNG5._702804_KEINE_FRG_ZD; 
      U(    ; 
      U     "O_WM_Beladung_entr_auf"; 
      UN    "M_SBH_ANF_MAGAZIN"; 
      U     "I_WM_Beladung_zu"; 
      O     ; 
      UN    "O_PW_TUER_ENTRIEGELN"; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.Palettenspeicher_aktiv; 
      UN    "M_SBH_ANF_RÜSTPLATZ"; 
      U     "I_PW_Tueren_zu"; 
      UN    "m_inbetrieb_logisch_1"; 
      )     ; 
      U     "DB_FEHLERMELDUNG".SAFE_MELD._701502_ZD_ANF_HAX; 
      U     "DB_SAFE_ALLG1".Leistung_steht_an; 
      U     "DB_PLC_MD_DB20".UDHex._04_BIT7_SAFETY; 
      =     #T_ANF_ENTR_DURCH_MAG_RP; 
      U     #T_ANF_ENTR_DURCH_MAG_RP; 
      UN    #T_FRG_FUER_ZD_VON_MAG_RP; 
      S     "DB_FEHLERMELDUNG".WARNUNG5._702804_KEINE_FRG_ZD; 
      NOP   0; 
NETWORK
TITLE =BER1 ZD MASCHINE: Anforderung Tuere entriegeln  

      U(    ; 
      ON    #E_Tuer_verriegeln; 
      O     ; // Anf entriegeln
      U     #T_ANF_ENTR_DURCH_MAG_RP; 
      U     #E_Tuer_verriegeln; 
      U     #T_FRG_FUER_ZD_VON_MAG_RP; 
      )     ; 
      U     #E_Maschine_ein; 
      =     #Ber1.Anf_Tuer_entriegeln; 
NETWORK
TITLE =BER1 ZD MASCHINE: Tuere entriegeln  Flanke positiv

      U     #Ber1.Anf_Tuer_entriegeln; // Anf entriegeln
      FP    #Ber1.FP_ZD_Start; 
      =     #T_BER1_Impuls_Taste_entr; 
NETWORK
TITLE =BER1 ZD MASCHINE: Schrittkette Zwangsdynamisierung
// *** Schritt 1 ZD MASCHINE: Start Zwangsdynamisierung ***  
      O     #Ber1.IM_WZW_ZD_START; // durch M-Fkt. im WZW
      O(    ; 
      U     #T_BER1_Impuls_Taste_entr; // durch Taste Türe entriegeln
      U     #Ber1.ZD_Anf_Tuere; 
      )     ; 
      UN    "DB_SAFE_ALLG1".ZD_Z_disable; // Zwangsdynamisierung überspringen  bei IBS
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt; // Zwangsdynamisierung überspringen  wenn Bremse defekt
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701454_ZD_SError_HAX; // Zwangsdynamisierung überspringen  wenn Bremse defekt
      UN    "DB_SIEM_BAG".E_REF; 
      UN    "DB_ICON"._1.UI_17; // Schwenken aktiv
      UN    #Ber1.Sperre_Tuer_ZD; // Sperre Entriegeln
      =     #Ber1.IM_Start_ZD_Tuere; 
      S     #BER1_Schritt[1]; 

// Reset Tuere zuhalten
      O     "DB_SAFE_ALLG1".ZD_Z_disable; 
      O     #Ber1.IM_Start_ZD_Tuere; 
      O     "O_AL_KABINE_ENTRIEGELN"; 
      R     "DB_SAFE_ALLG1".Wiz_Tuere_zuhalten; 

// = Meldung Bremsentest im geschwenkten Zustand nicht möglich
      U     #T_BER1_Impuls_Taste_entr; // Taste entriegeln
      U     #T_BER1_OPTION_BT_1; 
      U     #Ber1.ZD_Anf_Tuere; 
      U     "DB_ICON"._1.UI_17; // Schwenken aktiv
      S     "DB_FEHLERMELDUNG".SAFE_MELD._701515_BT_CYCLE800; 
      S     "DB_SAFE_ALLG1".Wiz_Tuere_zuhalten; 
      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".SAFE_MELD._701515_BT_CYCLE800; 

// = Meldung Bremsentest in BAG REF nicht möglich
      U     #T_BER1_Impuls_Taste_entr; // Taste entriegeln
      U     #T_BER1_OPTION_BT_1; 
      U     #Ber1.ZD_Anf_Tuere; 
      U     "DB_SIEM_BAG".E_REF; 
      S     "DB_FEHLERMELDUNG".SAFE_MELD._701527_BT_IN_REF_N_MOEG; 
      S     "DB_SAFE_ALLG1".Wiz_Tuere_zuhalten; 
      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".SAFE_MELD._701527_BT_IN_REF_N_MOEG; 

// *** Schritt 2 ZD MASCHINE: HW-Testen  mit Anf Tuer öffnen  bzw. Leerschritt *****************
      U     #Ber1.IM_Start_ZD_Tuere; 
      U     #BER1_Schritt[1]; 
      S     #BER1_Schritt[2]; 
      R     #BER1_Schritt[1]; 
      =     #Ber1.HW_start; 
      S     #Ber1.Sperre_Tuer_ZD; // Sperre Entriegeln

// *** Schritt 3  ZD MASCHINE: Bremsentest vertikale Achse anstossen wenn HW-Test ok *************************
      U     #Ber1.HW_laeuft; 
      FN    #Ber1.FN_HW_Test; 
      U     #BER1_Schritt[2]; 
      R     #BER1_Schritt[2]; 
      S     #BER1_Schritt[3]; 

      U     #BER1_Schritt[3]; 
      FP    #BER1_FM_Schritt[3]; 
      =     #BER1_IM_Schritt[3]; 

      U     #BER1_IM_Schritt[3]; 
      =     #Ber1.BT_Start; 

      U     #BER1_IM_Schritt[3]; 
      L     S5T#3S; 
      SV    "T_SAFECO_ZD_Override100"; // maximal 3 sec überbrücken

// *** Schritt 4 ZD MASCHINE: Bremsentest Kopf-Achse *************************************************
      U     #Ber1.BT_Laeuft; 
      FN    #Ber1.FN_BT_laeuft; 
      =     #Ber1.IMN_BT_laeuft; 

      U     #Ber1.IMN_BT_laeuft; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt; 
      U     #BER1_Schritt[3]; 
      U     #T_BER1_OPTION_BT_KOPF_AX; 
      S     #BER1_Schritt[4]; 
      R     #BER1_Schritt[3]; 

      U     #BER1_Schritt[4]; 
      FP    #BER1_FM_Schritt[4]; 
      =     #BER1_IM_Schritt[4]; 
      =     #Ber1.BT_2_Start; 

      U     #BER1_IM_Schritt[4]; 
      L     S5T#3S; 
      SV    "T_SAFECO_Override_100"; // maximal 3 sec überbrücken

      U     #Ber1.BT_Laeuft; 
      U     "T_SAFECO_ZD_Override100"; 
      O     ; 
      U     #Ber1.BT_2_Laeuft; 
      U     "T_SAFECO_Override_100"; 
      =     "DB_SAFE_ZD".GR1_BT.Override_auf_100; 
      =     "DB_SAFE_ZD".GR1_BT.AX_Sperren_Z_bruecken; 

//*** Schritt 5 ZD MASCHINE: Zwangsdynamisierung anstossen, wenn BT fertig **************************
      U     #Ber1.IMN_BT_laeuft; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt; 
      U     #BER1_Schritt[3]; 
      UN    #T_BER1_OPTION_BT_KOPF_AX; 
      O(    ; 
      UN    #Ber1.BT_2_Laeuft; 
      FP    #Ber1.FN_BT_2_laeuft; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt; 
      U     #BER1_Schritt[4]; 
      )     ; 
      R     #BER1_Schritt[4]; 
      R     #BER1_Schritt[3]; 
      S     #BER1_Schritt[5]; 
      =     #Ber1.ZD_Start; 

// Zwangsdynamisierung Bereich Maschine (Arbeitsraum/WZW/PW)
      CALL "FC_SAFE_ZD_BER1_MA" (
           I_BT_Anfordern           := #Ber1.BT_Start,// Anfordeung Bremsentest
           I_BT_2_Anfordern         := #Ber1.BT_2_Start,// Anforderung Bremsentest B/A - Achse
           I_ZD_Anfordern           := #Ber1.ZD_Start,// Anforderung Test-Stop
           I_HW_Anfordern           := #Ber1.HW_start,// Anforderung HW-Test
           O_BT_Laeuft              := #Ber1.BT_Laeuft,
           O_BT_2_Laeuft            := #Ber1.BT_2_Laeuft,
           O_BT_Error               := "DB_FEHLERMELDUNG".SAFE_WARN._701448_BT_Error_Z,
           O_BT_2_Error             := "DB_FEHLERMELDUNG".SAFE_WARN._701444_BT_Error_5te,
           O_ZD_Laeuft              := #Ber1.ZD_laeuft,
           O_ZD_SError              := "DB_FEHLERMELDUNG".SAFE_WARN._701454_ZD_SError_HAX,
           O_ZD_Error               := "DB_FEHLERMELDUNG".SAFE_WARN._701449_ZD_Error_HAX,
           O_Bremse_defekt          := "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt,
           O_Bremse_2_defekt        := "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt,
           O_BT_Error_FC18          := #T_BER1_BT_Err_1_FC18,//"DB_FehlerMeldung_DB102".SAFE_WARN._701456_BT_Error_FC18
           O_BT_Error_2_FC18        := #T_BER1_BT_Err_2_FC18,
           O_HW_laeuft              := #Ber1.HW_laeuft);

// *** Schritt 6 ZD MASCHINE: Zwangsdynamisierung Fertig ohne Fehler **********************************
      U     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701448_BT_Error_Z; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701444_BT_Error_5te; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701454_ZD_SError_HAX; 
      UN    "DB_FEHLERMELDUNG".SAFE_WARN._701449_ZD_Error_HAX; 
      O     "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt; 
      O     "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt; 
      SPBN  xx1; 
      L     0; 
      T     #Ber1.Zeit_sec; 
xx1:  NOP   0; 

      U     "DB_SAFE_ZD".GR1_ZD.ZD_Fertig; 
      U     #BER1_Schritt[5]; 
      R     #BER1_Schritt[5]; 
      R     #Ber1.Sperre_Tuer_ZD; 
      R     "DB_SAFE_ZD".GR1_BT.AX_Sperren_Z_bruecken; 
NETWORK
TITLE =BER1 ZD MASCHINE: Türe zuhalten (Ausgang Türe entriegeln sperren

      U     #Ber1.Anf_Tuer_entriegeln; // Anf entriegeln
      UN    #Ber1.Sperre_Tuer_ZD; // ZD laeuft
      NOT   ; 
      O     "DB_SAFE_ALLG1".Wiz_Tuere_zuhalten; 
      U     "M_MA_Maschine_Ein"; 
      O     "DB_FEHLERMELDUNG".SAFE_MELD._701517_Bremse_5te_quit; 
      O     "DB_FEHLERMELDUNG".SAFE_MELD._701509_Bremse_Z_quit; 
      =     "DB_SAFE_ZD".GR1_ZD.Tuere_zuhalten; // Tuere zuhalten
NETWORK
TITLE =BER1 ZD MASCHINE: Ax-Notausfehler ausblenden

      U     #Ber1.Sperre_Tuer_ZD; // ZD laeuft
      =     "DB_SAFE_ZD".GR1_ZD.Ax_Notaus_disable; // Ax-Überwachung ausblenden
NETWORK
TITLE =BER1 ZD MASCHINE: Fault handling

      U     "M_Ruecksetze_Fehler"; 
      R     #Ber1.Sperre_Tuer_ZD; 
      R     #BER1_Schritt[1]; 
      R     #BER1_Schritt[2]; 
      R     #BER1_Schritt[3]; 
      R     #BER1_Schritt[4]; 
      R     #BER1_Schritt[5]; 
      R     "DB_SAFE_ZD".GR1_BT.AX_Sperren_Z_bruecken; 
NETWORK
TITLE =BER1 ZD MASCHINE: Fehler Bremsentest bei vertikaler Achse
////--- Tür verriegeln wegen Bremse in Z defekt / quittieren
////--- entriegel erst wieder möglich, wenn in Wizzard quitiert wurde  
      U     "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt; 
      FP    "DB_SAFE_ALLG1".FP_NA_Quit_Bremse_NA_Z; 
      S     "DB_FEHLERMELDUNG".SAFE_MELD._701509_Bremse_Z_quit; // Anforderung Quittieren
      S     "DB_SAFE_ALLG1".Wiz_Bremse_Z_quit; // Taste "repariert" einblenden

      U     "DB_SAFE_ALLG1".Wiz_Bremse_Z_NA_Quitt; // Quittierung vom Servicemann
      R     "DB_SAFE_ALLG1".Wiz_Bremse_Z_NA_Quitt; // Quittierung vom Servicemann
      R     "DB_FEHLERMELDUNG".SAFE_MELD._701509_Bremse_Z_quit; 

NETWORK
TITLE =BER1 ZD MASCHINE: Not-Aus bei defekter Bremse vertikale Achse

      U     "DB_FEHLERMELDUNG".SAFE_MELD._701509_Bremse_Z_quit; // Anforderung Quittieren
      =     "DB_SAFE_ALLG1".NOT_AUS_Bremse_Z; // Not-Aus wegen Bremse Z
NETWORK
TITLE =BER1 ZD MASCHINE: Bremse repariert, quittieren  vertikale Achse

      U     "DB_SAFE_ALLG1".Wiz_Bremse_Z_rep; 
      R     "DB_FEHLERMELDUNG".SAFE_WARN._701452_Bremse_Z_defekt; 
      R     "DB_SAFE_ALLG1".Wiz_Bremse_Z_quit; 
      R     "DB_SAFE_ALLG1".Wiz_Bremse_Z_rep; 
NETWORK
TITLE =BER1 ZD MASCHINE: Fehler Bremsentest bei Kopf-Achse
////--- Tür verriegeln wegen Bremse in Kopf defekt / quittieren
////--- entriegeln erst wieder möglich, wenn in Wizzard quitiert wurde  
//Türverriegelung aufheben für Bremse B/A-Achse 
      U     "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt; 
      FP    "DB_SAFE_ALLG1".FP_NA_Quit_Bremse_NA_ZW; 
      S     "DB_FEHLERMELDUNG".SAFE_MELD._701517_Bremse_5te_quit; 
      S     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_quit; 

      U     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_NA_Quit; // Quittierung vom Servicemann
      R     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_NA_Quit; // Quittierung vom Servicemann
      R     "DB_FEHLERMELDUNG".SAFE_MELD._701517_Bremse_5te_quit; 
NETWORK
TITLE =BER1 ZD MASCHINE: Not-Aus bei defekter Bremse Kopf-Achse

      U     "DB_FEHLERMELDUNG".SAFE_MELD._701517_Bremse_5te_quit; 
      =     "DB_SAFE_ALLG1".NOT_AUS_Bremse_ZW; // Not-Aus wegen Bremse Kopf-Achse
NETWORK
TITLE =BER1 ZD MASCHINE: Bremse repariert, quittieren  Kopf-Achse

      U     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_rep; 
      R     "DB_FEHLERMELDUNG".SAFE_WARN._701445_Bremse_5_defekt; 
      R     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_quit; 
      R     "DB_SAFE_ALLG1".Wiz_Bremse_ZW_rep; 
NETWORK
TITLE =BER1 ZD MASCHINE: Sammelsignal Bremsentest läuft 

      O     #Ber1.BT_Laeuft; 
      O     #Ber1.BT_2_Laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.Test_Bremse_laeuft; 
NETWORK
TITLE =BER1 ZD MASCHINE: HW-Test laeuft

      U     #Ber1.HW_laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.Test_HW_laueft; 
NETWORK
TITLE =BER1 ZD MASCHINE: Voschubsperre und Override freischalten

      U     #Ber1.BT_Laeuft; 
      =     "DB_SAFE_ALLG1".HAX_BT_laeuft; 
NETWORK
TITLE =BER1 ZD MASCHINE: MEL,Bremsentest läuft bei vertikaler Achse

      U     #Ber1.BT_Laeuft; 
      =     "DB_FEHLERMELDUNG".SAFE_MELD._701500_BT_Z_laeuft; 
NETWORK
TITLE =BER1 ZD MASCHINE: MEL,Bremsentest läuft bei Kopf-Achse

      U     #Ber1.BT_2_Laeuft; 
      =     "DB_FEHLERMELDUNG".SAFE_MELD._701516_BT_5te_laeuft; 
NETWORK
TITLE =BER1 ZD MASCHINE: MEL,Zwangsdynamisierung laeuft 

      U     #Ber1.ZD_laeuft; 
      =     "DB_FEHLERMELDUNG".SAFE_MELD._701501_ZD_HAX_laeuft; 
NETWORK
TITLE =BER1 ZD MASCHINE: MEL,ZD beim nächsten Türöffnen angefordert

      U     #Ber1.ZD_Anf_Tuere; 
      =     "DB_FEHLERMELDUNG".SAFE_MELD._701502_ZD_ANF_HAX; 
NETWORK
TITLE =BER1 ZD MASCHINE: Zeiten für Anforderung der Tests

      UN    #E_Sec_Imp; 
      ON    #E_Maschine_ein; 
      SPB   x1; 
      L     #Ber1.Zeit_sec; 
      L     1; 
      +D    ; 
      T     #Ber1.Zeit_sec; 

x1:   L     #Ber1.Zeit_WZW; 
      L     60; 
      *D    ; 
      T     #T_BER1_Sec_WZW; 

      L     #Ber1.Zeit_Tuere; 
      L     60; 
      *D    ; 
      T     #T_BER1_Sec_Tuere; 


      U     "DB_PLC_MD_DB20".UDHex._04_BIT6_SAFETY_IBN; // Optionsbit
      SPBN  xx2; 
      L     0; 
      T     #Ber1.Zeit_sec; 

xx2:  L     #Ber1.Zeit_sec; 
      L     #T_BER1_Sec_WZW; 
      >D    ; 
      U(    ; 
      L     #Ber1.Zeit_WZW; // Bei Vorgabe 0 kein Zwangsdynamisierung beim Werkzeugwechsel
      L     0; 
      >I    ; 
      )     ; 
      =     #Ber1.ZD_Anf_WZW; 

      L     #Ber1.Zeit_sec; 
      L     #T_BER1_Sec_Tuere; 
      >D    ; 
      =     #Ber1.ZD_Anf_Tuere; 

NETWORK
TITLE =*** AB HIER BEGINNT DER BEREICH 2 (ZD PALETTENSPEICHER) ***

      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS4_AKTIV; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS5_AKTIV; 
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      SPB   KRS; 
NETWORK
TITLE =BER2 ZD PS: Option Bremsentest
//BEREICH 2 ZWANGSDYNAMISIERUNG PALETTENSPEICHER (PS-PW-ACHSEN)
//
      U     "m_eins"; 
      =     L     18.0; 
      U     L     18.0; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      =     #T_BER2_OPTION_BT_1; 
      U     L     18.0; 
      BLD   102; 
      R     #T_BER2_OPTION_BT_2; 
NETWORK
TITLE =BER2 ZD PS: Zwangsdynamierung überspringen durch Wizzard

      UN    "DB_SAFE_ZD".GR2_ZD.Tuere_zuhalten; 
      R     "DB_SAFE_ALLG1".PS_ZD_disable; 
NETWORK
TITLE =BER2 ZD PS: Anforderung Tuere entriegeln  

      U     "O_PS_RPL_TUER_VORN_ENTR"; 
      U     "O_PS_RPL_TUER_HINT_ENTR"; 
      U     "I_PS_FRG_AR_PSACHS"; 
      U     "DB_FEHLERMELDUNG".MELDUNG6._702834_PS_ZD_ANF_AX; 
      U     #E_Maschine_ein; 
      =     #Ber2.Anf_Tuer_entriegeln; 
NETWORK
TITLE =BER2 ZD PS: Tuere entriegeln  Flanke positiv

      U     #Ber2.Anf_Tuer_entriegeln; 
      U     "DB_SAFE_ALLG1".Leistung_steht_an; 
      FP    #Ber2.FP_ZD_Start; 
      =     #T_BER2_Impuls_Taste_entr; 
NETWORK
TITLE =BER2 ZD PS: Schrittkette Zwangsdynamisierung
// *** Schritt 1 ZD PS: Start Zwangsdynamisierung ********************************
//*****  
      U     #T_BER2_Impuls_Taste_entr; // durch Taste Türe entriegeln
      U     #Ber2.ZD_Anf_Tuere; 
      UN    "DB_SAFE_ALLG1".PS_ZD_disable; // Zwangsdynamisierung überspringen  bei IBS
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; // Zwangsdynamisierung überspringen  wenn Bremse defekt
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702801_PS_ZD_N_MOEGLICH; // Zwangsdynamisierung überspringen  bei fehlender Startbedingung
      UN    "DB_SIEM_BAG".E_REF; 
      UN    #Ber2.Sperre_Tuer_ZD; // Sperre Entriegeln
      =     #Ber2.IM_Start_ZD_Tuere; 
      S     #BER2_Schritt[1]; 

// Reset Türe zuhalten
      O     "DB_SAFE_ALLG1".PS_ZD_disable; 
      O     #Ber2.IM_Start_ZD_Tuere; 
      R     "DB_SAFE_ALLG1".PS_ZD_Tuere_zuhalten; 

// = Meldung Bremsentest bei ausgefahrener Transportachse nicht möglich
      U     #T_BER2_Impuls_Taste_entr; // Taste entriegeln
      U     #T_BER2_OPTION_BT_1; 
      U     #Ber2.ZD_Anf_Tuere; 
      UN    "MX_Transport_Gst"; 
      U     "m_null"; // gesperrt, BT sollte in jeder Pos möglich sein
      S     "DB_FEHLERMELDUNG".MELDUNG6._702835_PS_BT_N_MOEGL1; 
      S     "DB_SAFE_ALLG1".PS_ZD_Tuere_zuhalten; 

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".MELDUNG6._702835_PS_BT_N_MOEGL1; 

// = Meldung Bremsentest in BAG REF nicht möglich
      U     #T_BER2_Impuls_Taste_entr; // Taste entriegeln
      U     #T_BER2_OPTION_BT_1; 
      U     #Ber2.ZD_Anf_Tuere; 
      U     "DB_SIEM_BAG".E_REF; 
      S     "DB_FEHLERMELDUNG".SAFE_MELD._701527_BT_IN_REF_N_MOEG; 
      S     "DB_SAFE_ALLG1".PS_ZD_Tuere_zuhalten; 

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".SAFE_MELD._701527_BT_IN_REF_N_MOEG; 

// = Meldung Bremsentest bei Vorschub-Halt Kanal nicht möglich
      U     #T_BER2_Impuls_Taste_entr; // Taste entriegeln
      U     #T_BER2_OPTION_BT_1; 
      U     #Ber2.ZD_Anf_Tuere; 
      U     "DB_SIEM_KANAL_1".A_FDdisable; 
      S     "DB_FEHLERMELDUNG".MELDUNG6._702836_PS_BT_N_MOEGL2; 
      S     "DB_SAFE_ALLG1".PS_ZD_Tuere_zuhalten; 

      U     "M_Ruecksetze_Fehler"; 
      R     "DB_FEHLERMELDUNG".MELDUNG6._702836_PS_BT_N_MOEGL2; 

// *** Schritt 2 ZD PS: HW-Testen  mit Anf Tuer öffnen  bzw. Leerschritt *****************
      U     #Ber2.IM_Start_ZD_Tuere; 
      U     #BER2_Schritt[1]; 
      S     #BER2_Schritt[2]; 
      R     #BER2_Schritt[1]; 
      =     #Ber2.HW_start; 
      S     #Ber2.Sperre_Tuer_ZD; // Sperre Entriegeln

// *** Schritt 3  ZD PS: Bremsentest Hub-Achse anstossen wenn HW-Test ok *************************
      U     #Ber2.HW_laeuft; 
      FN    #Ber2.FN_HW_Test; 
      U     #BER2_Schritt[2]; 
      R     #BER2_Schritt[2]; 
      S     #BER2_Schritt[3]; 

      U     #BER2_Schritt[3]; 
      FP    #BER2_FM_Schritt[3]; 
      U     "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      =     #BER2_IM_Schritt[3]; 
      =     #Ber2.BT_Start; 

// *** Schritt 4 ZD PS: Bremsentest Reserve-Achse *************************************************
      U     #Ber2.BT_Laeuft; 
      FN    #Ber2.FN_BT_laeuft; 
      =     #Ber2.IMN_BT_laeuft; 

      U     #Ber2.IMN_BT_laeuft; 
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; 
      U     #BER2_Schritt[3]; 
      U     #T_BER2_OPTION_BT_2; 
      S     #BER2_Schritt[4]; 
      R     #BER2_Schritt[3]; 

      U     #BER2_Schritt[4]; 
      FP    #BER2_FM_Schritt[4]; 
      =     #BER2_IM_Schritt[4]; 
      =     #Ber2.BT_2_Start; 

      U     #Ber2.BT_Laeuft; 
      O     #Ber2.BT_2_Laeuft; 
      =     "DB_SAFE_ZD".GR2_BT.Override_auf_100; 

//*** Schritt 5 ZD PS: Zwangsdynamisierung anstossen, wenn BT fertig **************************
      UN    "DB_CONFIG".ANWAHL_DURCH_USER_DATA.RS10_AKTIV; 
      O(    ; 
      U     #Ber2.IMN_BT_laeuft; 
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; 
      )     ; 
      U     #BER2_Schritt[3]; 
      UN    #T_BER2_OPTION_BT_2; 
      O(    ; 
      UN    #Ber2.BT_2_Laeuft; 
      FP    #Ber2.FN_BT_2_laeuft; 
      UN    "m_eins"; //Hier Fehlermeldung von zweiter Bereichsbremse wenn vorhanden
      U     #BER2_Schritt[4]; 
      )     ; 
      R     #BER2_Schritt[4]; 
      R     #BER2_Schritt[3]; 
      S     #BER2_Schritt[5]; 
      =     #Ber2.ZD_Start; 

// Zwangsdynamisierung Bereich Palettenspeicher (PS/PW)
      CALL "FC_SAFE_ZD_BER2_PS" (
           I_BT_Anfordern           := #Ber2.BT_Start,
           I_ZD_Anfordern           := #Ber2.ZD_Start,
           I_HW_Anfordern           := #Ber2.HW_start,
           O_BT_Laeuft              := #Ber2.BT_Laeuft,
           O_BT_Error               := "DB_FEHLERMELDUNG".WARNUNG5._702800_PS_HUB_BT_FEHLER,
           O_ZD_Laeuft              := #Ber2.ZD_laeuft,
           O_ZD_SError              := "DB_FEHLERMELDUNG".WARNUNG5._702801_PS_ZD_N_MOEGLICH,
           O_ZD_Error               := "DB_FEHLERMELDUNG".WARNUNG5._702802_PS_ZD_FEHLER,
           O_Bremse_defekt          := "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT,
           O_BT_Error_FC18          := #T_BER2_BT_Err_1_FC18,
           O_HW_laeuft              := #Ber2.HW_laeuft);

// *** Schritt 6 ZD PS: Zwangsdynamisierung Fertig ohne Fehler **********************************
      U     "DB_SAFE_ZD".GR2_ZD.ZD_Fertig; 
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702800_PS_HUB_BT_FEHLER; 
      UN    "DB_FEHLERMELDUNG".WARNUNG5._702801_PS_ZD_N_MOEGLICH; 
      O     "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; 
      SPBN  yy1; 
      L     0; 
      T     #Ber2.Zeit_sec; 
yy1:  NOP   0; 

      U     "DB_SAFE_ZD".GR2_ZD.ZD_Fertig; 
      U     #BER2_Schritt[5]; 
      R     #BER2_Schritt[5]; 
      R     #Ber2.Sperre_Tuer_ZD; 
NETWORK
TITLE =BER2 ZD PS: Türe zuhalten (Ausgang Türe entriegeln sperren)
//  U     #Ber2.Anf_Tuer_entriegeln   // Anf entriegeln
//     UN    #Ber2.Sperre_Tuer_ZD        // ZD laeuft
//      NOT   
      O     "DB_SAFE_ALLG1".PS_ZD_Tuere_zuhalten; 
      U     "M_MA_Maschine_Ein"; 
      O     "DB_FEHLERMELDUNG".MELDUNG6._702833_PS_HUB_BR_REP; 
      =     "DB_SAFE_ZD".GR2_ZD.Tuere_zuhalten; // Tuere zuhalten
NETWORK
TITLE =BER2 ZD PS: Ax-Notausfehler ausblenden

      U     #Ber2.Sperre_Tuer_ZD; 
      =     "DB_SAFE_ZD".GR2_ZD.Ax_Notaus_disable; 
NETWORK
TITLE =BER2 ZD PS: Fault handling

      U     "M_Ruecksetze_Fehler"; 
      R     #Ber2.Sperre_Tuer_ZD; 
      R     #BER2_Schritt[1]; 
      R     #BER2_Schritt[2]; 
      R     #BER2_Schritt[3]; 
      R     #BER2_Schritt[4]; 
      R     #BER2_Schritt[5]; 
NETWORK
TITLE =BER2 ZD PS: Fehler Bremsentest bei Hub-Achse
////--- Tür verriegeln wegen Bremse in Z defekt / quittieren
////--- entriegel erst wieder möglich, wenn in Wizzard quitiert wurde  
      U     "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; 
      FP    "DB_SAFE_ALLG1".PS_FP_Bremse_defekt; 
      S     "DB_FEHLERMELDUNG".MELDUNG6._702833_PS_HUB_BR_REP; // Anforderung Quittieren
      S     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUBAX_quit; // Taste "repariert" einblenden

      U     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUB_Quitt; // Quittierung vom Servicemann
      R     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUB_Quitt; 
      R     "DB_FEHLERMELDUNG".MELDUNG6._702833_PS_HUB_BR_REP; 
NETWORK
TITLE =BER2 ZD PS: Not-Aus bei defekter Bremse Hub-Achse

      U     "DB_FEHLERMELDUNG".MELDUNG6._702833_PS_HUB_BR_REP; 
      =     "DB_SAFE_ALLG1".PS_NOT_AUS_Bremse_HUBAX; 
NETWORK
TITLE =BER2 ZD PS: Bremse repariert, quittieren  Hub-Achse

      U     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUB_rep; 
      R     "DB_FEHLERMELDUNG".WARNUNG5._702803_PS_HUB_BR_DEFEKT; 
      R     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUBAX_quit; 
      R     "DB_SAFE_ALLG1".PS_WIZ_Bremse_HUB_rep; 
NETWORK
TITLE =BER2 ZD PS: Sammelsignal Bremsentest läuft 

      O     #Ber2.BT_Laeuft; 
      O     #Ber2.BT_2_Laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.BER2_Test_Bremse_laeuft; 
NETWORK
TITLE =BER2 ZD PS: HW-Test laeuft

      U     #Ber2.HW_laeuft; 
      =     "DB_SAFE_ZD".Seco_Test.BER2_Test_HW_laueft; 
NETWORK
TITLE =BER2 ZD PS: Voschubsperre und Override freischalten

      U     #Ber2.BT_Laeuft; 
      =     "DB_SAFE_ALLG1".PS_AX_BT_laeuft; 
NETWORK
TITLE =BER2 ZD PS: MEL,Bremsentest läuft bei Hub-Achse

      U     #Ber2.BT_Laeuft; 
      =     "DB_FEHLERMELDUNG".MELDUNG6._702837_PS_BT_HUB_LAEUFT; 
NETWORK
TITLE =BER2 ZD PS: MEL,Zwangsdynamisierung laeuft 

      U     #Ber2.ZD_laeuft; 
      =     "DB_FEHLERMELDUNG".MELDUNG6._702838_PS_ZD_AX_LAEUFT; 
NETWORK
TITLE =BER2 ZD PS: MEL,ZD beim nächsten Türöffnen angefordert

      U     #Ber2.ZD_Anf_Tuere; 
      =     "DB_FEHLERMELDUNG".MELDUNG6._702834_PS_ZD_ANF_AX; 
NETWORK
TITLE =BER2 ZD PS: Zeiten für Anforderung der Tests

      UN    #E_Sec_Imp; 
      ON    #E_Maschine_ein; 
      SPB   y1; 
      L     #Ber2.Zeit_sec; 
      L     1; 
      +D    ; 
      T     #Ber2.Zeit_sec; 

y1:   L     #Ber2.Zeit_PW; 
      L     60; 
      *D    ; 
      T     #T_BER2_Sec_PW; 

      L     #Ber2.Zeit_Tuere; 
      L     60; 
      *D    ; 
      T     #T_BER2_Sec_Tuere; 


      U     "DB_PLC_MD_DB20".UDHex._04_BIT6_SAFETY_IBN; // Optionsbit
      SPBN  yy2; 
      L     0; 
      T     #Ber2.Zeit_sec; 

yy2:  L     #Ber2.Zeit_sec; 
      L     #T_BER2_Sec_PW; 
      >D    ; 
      U(    ; 
      L     #Ber2.Zeit_PW; // Bei Vorgabe 0 kein Zwangsdynamisierung beim Werkzeugwechsel
      L     0; 
      >I    ; 
      )     ; 
      =     #Ber2.ZD_Anf_PW; 

      L     #Ber2.Zeit_sec; 
      L     #T_BER2_Sec_Tuere; 
      >D    ; 
      =     #Ber2.ZD_Anf_Tuere; 

KRS:  NOP   0; 
END_FUNCTION_BLOCK

