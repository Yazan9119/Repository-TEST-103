DATA_BLOCK "DB_ROB_IF"
TITLE =
//$Revision: 1.11 $
//$Date: 2008/09/26 12:38:27CEST $
//$Author: riedlh $
VERSION : 0.1


  STRUCT 	
   OUT : STRUCT 	//PLC>>ROB: 0000...0099: PLC-Ausgänge von DMG ==an==> Roboter
    gesamt : STRUCT 	//PLC>>ROB: 0000...0003: allgemein
     LZ : BOOL ;	//PLC>>ROB: Lebenszeichen (1Hz)
     Automation_ein : BOOL ;	//PLC>>ROB: Maschine auf Betriebsart "Automation mit Roboter"
     RPL_0_Grad_fixiert : BOOL ;	//PLC>>ROB: Rüstplatz 0-Grad-Position fixiert
     FG_Schutzzaun_oeffnen : BOOL ;	//PLC>>ROB: Freigabe Schutzzaun öffnen
     MPL_RPL_leer : BOOL ;	//PLC>>ROB: Maschinenplatz und Rüstplatz sind leer
     ROB_vorbereiten : BOOL ;	//PLC>>ROB: Roboter für Beladung vorbereiten (M365)
     NOTAUS_ok : BOOL ;	//PLC>>ROB: kein NOTAUS
     Bedienerschutz_ok : BOOL ;	//PLC>>ROB: Bediener-Schutz ok Schutzzaun/PW-Türen
     Anf_Bed_Tuere_oeffnen : BOOL ;	//PLC>>ROB: Anforderung für das Öffnen der Arbeitsraumtüre
     Lade_FG_extEinheit : BOOL ;	//PLC>>ROB: Entlade- und Belade-Freigabe für externe Einheit
     res_1_2 : BOOL ;	//PLC>>ROB: 
     res_1_3 : BOOL ;	//PLC>>ROB: 
     res_1_4 : BOOL ;	//PLC>>ROB: 
     res_1_5 : BOOL ;	//PLC>>ROB: 
     res_1_6 : BOOL ;	//PLC>>ROB: 
     MPL_STATUS_3 : BOOL ;	//PLC>>ROB: Sonder MahleKönig: MPL-Status = 3 (Palette in Arbeit)
     res_2_w : WORD ;	//PLC>>ROB: 
    END_STRUCT ;	
    Stelle : ARRAY  [1 .. 4 ] OF //PLC>>ROB: 0004...0027: Spannstelle 1...4
    STRUCT 	
     FG_Entladen : BOOL ;	//PLC>>ROB: Freigabe zum Entladen
     entspannt_OHNE_Fehler : BOOL ;	//PLC>>ROB: Spannstelle entspannt OHNE Fehler
     entspannt_MIT_Fehler : BOOL ;	//PLC>>ROB: Spannstelle entspannt MIT Fehler
     Teil_niO : BOOL ;	//PLC>>ROB: Teil nicht in Ordnung
     Teil_nicht_bearbeitet : BOOL ;	//PLC>>ROB: Teil nicht bearbeitet
     FG_Beladen : BOOL ;	//PLC>>ROB: Freigabe zum Beladen
     gepannt_OHNE_Fehler : BOOL ;	//PLC>>ROB: Spannstelle gespannt OHNE Fehler
     gepannt_MIT_Fehler : BOOL ;	//PLC>>ROB: Spannstelle gespannt MIT Fehler
     res_5_0 : BOOL ;	//PLC>>ROB: 
     res_5_1 : BOOL ;	//PLC>>ROB: 
     res_5_2 : BOOL ;	//PLC>>ROB: 
     res_5_3 : BOOL ;	//PLC>>ROB: 
     res_5_4 : BOOL ;	//PLC>>ROB: 
     res_5_5 : BOOL ;	//PLC>>ROB: 
     res_5_6 : BOOL ;	//PLC>>ROB: 
     res_5_7 : BOOL ;	//PLC>>ROB: 
     res_6_w : WORD ;	//PLC>>ROB: 
     res_8_w : WORD ;	//PLC>>ROB: 
    END_STRUCT ;	
    RPL : STRUCT 	//PLC>>ROB: 0028...0033: Rüstplatz
     PW_aktiv : BOOL ;	//PLC>>ROB: Freigabe-Palettenwechsler aktiv
     RPL_Tuer_offen : BOOL ;	//PLC>>ROB: Rüstplatz-Türen offen
     RPL_Tuer_zu : BOOL ;	//PLC>>ROB: Rüstplatz-Türen zu
     RPL_Wasser_ein : BOOL ;	//PLC>>ROB: Rüstplatz Wasser ist ein
     RPL_Luft_ein : BOOL ;	//PLC>>ROB: Rüstplatz Luft ist ein
     RPL_PAL_1 : BOOL ;	//PLC>>ROB: Rüstplatz Palette 1 ist am Ruestplatz
     RPL_PAL_2 : BOOL ;	//PLC>>ROB: Rüstplatz Palette 2 ist am Ruestplatz
     RPL_Bauteil_Spuelen : BOOL ;	//PLC>>ROB: Rüstplatz Bauteil spülen
     NPSPS_1_FG_Entladen : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 1 Freigabe zum Entladen
     NPSPS_1_gespannt : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 1 ist gespannt
     NPSPS_1_entspannt : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 1 ist entspannt
     res_29_3 : BOOL ;	//PLC>>ROB: 
     res_29_4 : BOOL ;	//PLC>>ROB: 
     res_29_5 : BOOL ;	//PLC>>ROB: 
     res_29_6 : BOOL ;	//PLC>>ROB: 
     res_29_7 : BOOL ;	//PLC>>ROB: 
     NPSPS_2_FG_Entladen : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 2 Freigabe zum Entladen
     NPSPS_2_gespannt : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 2 ist gespannt
     NPSPS_2_entspannt : BOOL ;	//PLC>>ROB: Nullpunkt-Spannsystem 2 ist entspannt
     res_30_3 : BOOL ;	//PLC>>ROB: 
     res_30_4 : BOOL ;	//PLC>>ROB: 
     res_30_5 : BOOL ;	//PLC>>ROB: 
     res_30_6 : BOOL ;	//PLC>>ROB: 
     res_30_7 : BOOL ;	//PLC>>ROB: 
     res_b_31 : BYTE ;	//PLC>>ROB: 
     res_w_32 : WORD ;	//PLC>>ROB: 
     WS_Daten : ARRAY  [1 .. 4 ] OF //PLC>>ROB:0034...0073: WS-Daten Seite 1...4 [1=0 2=90 3=180 4=270 Grad-Stellung]
     STRUCT 	
      WS_Typ_gespiegelt : DWORD ;	//PLC>>ROB: 9-stellige Programm-Nr (gespiegelte bei PW-Freigabe)
      WS_Typ : DWORD ;	//PLC>>ROB: 9-stellige Programm-Nr (nach PW-Ablauf)
      Messtaster_Check_NOK : BOOL ;	//PLC>>ROB: Überprüfung der Seite mit Messtaster ergab Fehler (Produktions-Test)
      WZBruch_Bearbeitung : BOOL ;	//PLC>>ROB: WZ-Bruch: DUAL-Port-RAM[117.1=1] meldet für diese Seite
      Messtaster_Pos_NOK : BOOL ;	//PLC>>ROB: Überprüfung der Seite mit Messtaster ergab "Position nicht OK"
      res_12 : BOOL ;	//PLC>>ROB: 
      res_13 : BOOL ;	//PLC>>ROB: 
      res_14 : BOOL ;	//PLC>>ROB: 
      res_15 : BOOL ;	//PLC>>ROB: 
      res_16 : BOOL ;	//PLC>>ROB: 
      res_Byte : BYTE ;	//PLC>>ROB: 
     END_STRUCT ;	
     Achse : STRUCT 	//PLC>>ROB: 0074...0079: Rüstplatz-Achse
      AX_ISTposition : INT ;	//PLC>>ROB: Rüstplatz-Achse IST-Position 
      FRG_Drehbewegung_RP : BOOL ;	//PLC>>ROB: Freigabe Rüstplatz-Positionierung
      MEL_Position_erreicht_RP : BOOL ;	//PLC>>ROB: Meldung Rüstplatzposition erreicht
      res_46_2 : BOOL ;	//PLC>>ROB: 
      res_46_3 : BOOL ;	//PLC>>ROB: 
      res_46_4 : BOOL ;	//PLC>>ROB: 
      res_46_5 : BOOL ;	//PLC>>ROB: 
      res_46_6 : BOOL ;	//PLC>>ROB: 
      res_46_7 : BOOL ;	//PLC>>ROB: 
      res_47_b : BYTE ;	//PLC>>ROB: 
      res_48_w : WORD ;	//PLC>>ROB: 
     END_STRUCT ;	
    END_STRUCT ;	
   END_STRUCT ;	
   OUT_Reserve : ARRAY  [80 .. 99 ] OF //PLC>>ROB: 0080...0099: Reserve
   BYTE ;	
   IN : STRUCT 	//ROB>>PLC: 0100...0199: PLC-Eingänge von Roboter ==an==> DMG
    gesamt : STRUCT 	//ROB>>PLC: 0100...0103: allgemein
     LZ : BOOL ;	//ROB>>PLC: Lebenszeichen (1Hz)
     ROB_BTB : BOOL ;	//ROB>>PLC: Roboter Betriebsbereit
     ROB_aus_Stoerbereich : BOOL ;	//ROB>>PLC: Roboter ausserhalb Störbereich
     Anf_Schutzzaun_oeffnen : BOOL ;	//ROB>>PLC: Anforderung Schutzzaun oeffnen
     BA_Leerfahren : BOOL ;	//ROB>>PLC: Betriebsart Leerfahren ist angewählt
     res_100_5 : BOOL ;	//ROB>>PLC: 
     NOTAUS_ok : BOOL ;	//ROB>>PLC: kein NOTAUS
     Bedienerschutz_ok : BOOL ;	//ROB>>PLC: Bediener-Schutz ok Schutzzaun
     Frg_Bed_Tuere_oeffnen : BOOL ;	//ROB>>PLC: Freigabe für das Öffnen der Arbeitsraumtüre
     Achsen_Stop_extern : BOOL ;	//ROB>>PLC: externes Gerät hält alle Achsen im Maschinenraum an
     PW_Sperre_extern : BOOL ;	//ROB>>PLC: externes Gerät sperrt PW-Freigabe für Rüstplatz
     res_101_3 : BOOL ;	//ROB>>PLC: 
     res_101_4 : BOOL ;	//ROB>>PLC: 
     res_101_5 : BOOL ;	//ROB>>PLC: 
     res_101_6 : BOOL ;	//ROB>>PLC: 
     res_101_7 : BOOL ;	//ROB>>PLC: 
     res_102_w : WORD ;	//ROB>>PLC: 
    END_STRUCT ;	
    Stelle : ARRAY  [1 .. 4 ] OF //ROB>>PLC: 0104...0127: Spannstelle 1...4
    STRUCT 	
     Meldung_Entladen : BOOL ;	//ROB>>PLC: Meldung Stelle ist entladen
     Bef_Entspannen : BOOL ;	//ROB>>PLC: Befehl Spannstelle entspannen
     frei_104_2 : BOOL ;	//ROB>>PLC: 
     Meldung_SICHER_offen : BOOL ;	//ROB>>PLC: Meldung Spannstelle ist SICHER offen
     frei_104_4 : BOOL ;	//ROB>>PLC: 
     Meldung_Beladen : BOOL ;	//ROB>>PLC: Meldung Spannstelle ist beladen
     Bef_Spannen_OHNE_CTRL : BOOL ;	//ROB>>PLC: Befehl Spannstelle spannen OHNE Kontrolle
     Bef_Spannen_MIT_CTRL : BOOL ;	//ROB>>PLC: Befehl Spannstelle spannen MIT Kontrolle
     res_105_0 : BOOL ;	//ROB>>PLC: 
     res_105_1 : BOOL ;	//ROB>>PLC: 
     res_105_2 : BOOL ;	//ROB>>PLC: 
     res_105_3 : BOOL ;	//ROB>>PLC: 
     res_105_4 : BOOL ;	//ROB>>PLC: 
     res_105_5 : BOOL ;	//ROB>>PLC: 
     res_105_6 : BOOL ;	//ROB>>PLC: 
     res_105_7 : BOOL ;	//ROB>>PLC: 
     res_106_w : WORD ;	//ROB>>PLC: 
     res_108_w : WORD ;	//ROB>>PLC: 
    END_STRUCT ;	
    RPL : STRUCT 	//ROB>>PLC: 0128...0179: Rüstplatz
     Bef_PW_Freigabe : BOOL ;	//ROB>>PLC: Befehl PW-Freigabe
     Bef_RPL_Tuer_oeffnen : BOOL ;	//ROB>>PLC: Befehl Rüstplatz-Tür öffnen
     Bef_RPL_Tuer_schliessen : BOOL ;	//ROB>>PLC: Befehl Rüstplatz-Tür schliessen
     Bef_Vorrichtung_Spuelen : BOOL ;	//ROB>>PLC: Befehl Vorrichtung spülen
     Bef_Vorrichtung_Abblasen : BOOL ;	//ROB>>PLC: Befehl Vorrichtung abblasen
     Bef_Bauteil_Reinigung : BOOL ;	//ROB>>PLC: Anforderung Bauteil reinigen
     res_128_6 : BOOL ;	//ROB>>PLC: 
     res_128_7 : BOOL ;	//ROB>>PLC: 
     Bef_NPSPS_1_loesen : BOOL ;	//ROB>>PLC: Befehl Nullpunkt-Spannsystem 1 lösen
     res_129_1 : BOOL ;	//ROB>>PLC: 
     res_129_2 : BOOL ;	//ROB>>PLC: 
     res_129_3 : BOOL ;	//ROB>>PLC: 
     res_129_4 : BOOL ;	//ROB>>PLC: 
     res_129_5 : BOOL ;	//ROB>>PLC: 
     res_129_6 : BOOL ;	//ROB>>PLC: 
     res_129_7 : BOOL ;	//ROB>>PLC: 
     Bef_NPSPS_2_loesen : BOOL ;	//ROB>>PLC: Befehl Nullpunkt-Spannsystem 2 lösen
     res_130_1 : BOOL ;	//ROB>>PLC: 
     res_130_2 : BOOL ;	//ROB>>PLC: 
     res_130_3 : BOOL ;	//ROB>>PLC: 
     res_130_4 : BOOL ;	//ROB>>PLC: 
     res_130_5 : BOOL ;	//ROB>>PLC: 
     res_130_6 : BOOL ;	//ROB>>PLC: 
     res_130_7 : BOOL ;	//ROB>>PLC: 
     res_131_b : BYTE ;	//ROB>>PLC: 
     res_132_w : WORD ;	//ROB>>PLC: 
     WS_Daten : ARRAY  [1 .. 4 ] OF //ROB>>PLC:0134...0173: WS-Daten Seite 1...4 [1=0 2=90 3=180 4=270 Grad-Stellung]
     STRUCT 	
      WS_Typ_gespiegelt : DWORD ;	//ROB>>PLC: 9-stellige Programm-Nr (gespiegelt nach PW-Ablauf)
      WS_Typ : DWORD ;	//ROB>>PLC: 9-stellige Programm-Nr (bei PW-Freigabe)
      res_38_w : WORD ;	//ROB>>PLC: 
     END_STRUCT ;	
     Achse : STRUCT 	//ROB>>PLC: 0174...0179: Rüstplatz-Achse
      RPL_AX_SOLLposition : INT ;	//ROB>>PLC: Rüstplatz-Achse SOLL-Position 
      BEF_RPL_positionieren : BOOL ;	//ROB>>PLC: Befehl Rüstplatz positionieren
      res_146_1 : BOOL ;	//ROB>>PLC: 
      res_146_2 : BOOL ;	//ROB>>PLC: 
      res_146_3 : BOOL ;	//ROB>>PLC: 
      res_146_4 : BOOL ;	//ROB>>PLC: 
      res_146_5 : BOOL ;	//ROB>>PLC: 
      res_146_6 : BOOL ;	//ROB>>PLC: 
      res_146_7 : BOOL ;	//ROB>>PLC: 
      res_147_b : BYTE ;	//ROB>>PLC: 
      res_148_w : WORD ;	//ROB>>PLC: 
     END_STRUCT ;	
    END_STRUCT ;	
   END_STRUCT ;	
   IN_reserve : ARRAY  [180 .. 199 ] OF //ROB>>PLC: 0180...0199: reserve
   BYTE ;	
   STAT : STRUCT 	//0200...0255: Statischer Bereich
    Stelle : ARRAY  [1 .. 4 ] OF //0200...0239: Spannstelle 1...4
    STRUCT 	
     gespannt : BOOL ;	//Meldung von Spannhydraulik Stelle 1 gespannt
     entspannt : BOOL ;	//Meldung von Spannhydraulik Stelle 1 entspannt
     aktivieren_spannen : BOOL ;	//Spannstelle 1 aktivieren für Spannen
     aktivieren_entspannen : BOOL ;	//Spannstelle 1 aktivieren für Entspannen
     Teil_nicht_in_Ordnung : BOOL ;	//Spannstelle 1 Teil nicht in Ordnung
     res_200_5 : BOOL ;	
     res_200_6 : BOOL ;	
     res_200_7 : BOOL ;	
     res_201_0 : BOOL ;	
     res_201_1 : BOOL ;	
     res_201_2 : BOOL ;	
     res_201_3 : BOOL ;	
     res_201_4 : BOOL ;	
     res_201_5 : BOOL ;	
     res_201_6 : BOOL ;	
     res_201_7 : BOOL ;	
     res_202_w : WORD ;	
     res_204_w : WORD ;	
     res_206_w : WORD ;	
     res_208_w : WORD ;	
    END_STRUCT ;	
    Ruestplatz : STRUCT 	//0240...249: Rüstplatz
     SpSt1_CTRL_aktivieren : BOOL ;	//Rüstplatz Spannstelle 1 Auflagenkontrolle aktivieren
     SpSt2_CTRL_aktivieren : BOOL ;	//Rüstplatz Spannstelle 2 Auflagenkontrolle aktivieren
     SpSt3_CTRL_aktivieren : BOOL ;	//Rüstplatz Spannstelle 3 Auflagenkontrolle aktivieren
     SpSt4_CTRL_aktivieren : BOOL ;	//Rüstplatz Spannstelle 4 Auflagenkontrolle aktivieren
     FP_entspannen_ok : BOOL ;	//Flanke alle aktiven Spannstellen entspannt
     FP_spannen_ok : BOOL ;	//Flanke alle aktiven Spannstellen gespannt
     FP_BEF_RPL_positionieren : BOOL ;	//Flanke Befehl Rüstplatz positionieren
     FP_RPL_hat_positioniert : BOOL ;	//Flanke Rüstplatzachse hat positioniert
     FN_BEF_RPL_positionieren : BOOL ;	//Negative Flanke Befehl Rüstplatz positionieren
     FP_Tuere_oeffnen : BOOL ;	//Positive Flanke Befehl Rüstplatztüre öffnen
     FP_Tuere_schliessen : BOOL ;	//Positive Flanke Befehl Rüstplatztüre schliessen
     res_241_3 : BOOL ;	
     res_241_4 : BOOL ;	
     res_241_5 : BOOL ;	
     res_241_6 : BOOL ;	
     res_241_7 : BOOL ;	
     Sollpos_Realwert : REAL ;	//Umgewandelter Wert für Sollposition
     res_246_w : WORD ;	
     res_248_w : WORD ;	
    END_STRUCT ;	
    Palettenwechsler : STRUCT 	//0250...0251: Palettenwechsler
     FP_PW_Freigabe_von_Rob : BOOL ;	//Flanke Palettenwechslerfreigabe von Roboter
     res_250_1 : BOOL ;	
     res_250_2 : BOOL ;	
     res_250_3 : BOOL ;	
     res_250_4 : BOOL ;	
     res_250_5 : BOOL ;	
     res_250_6 : BOOL ;	
     res_250_7 : BOOL ;	
     res_251_b : BYTE ;	
    END_STRUCT ;	
    Roboter : STRUCT 	//0252...0255: Roboter
     Automation_ein : BOOL ;	//Roboter ist eingeschaltet und Automation aktiv
     res_252_1 : BOOL ;	
     res_252_2 : BOOL ;	
     res_252_3 : BOOL ;	
     res_252_4 : BOOL ;	
     res_252_5 : BOOL ;	
     res_252_6 : BOOL ;	
     res_252_7 : BOOL ;	
     LZ : STRUCT 	//Lebens-Zeichen
      P_Flanke : BOOL ;	//Positive Flanke Lebenszeichen Roboter
      N_Flanke : BOOL ;	//Negative Flanke Lebenszeichen Roboter
      Fehler : BOOL ;	//Lebenszeichen Roboter Nok
     END_STRUCT ;	
    END_STRUCT ;	
   END_STRUCT ;	
  END_STRUCT ;	
BEGIN
   OUT.gesamt.LZ := FALSE; 
   OUT.gesamt.Automation_ein := FALSE; 
   OUT.gesamt.RPL_0_Grad_fixiert := FALSE; 
   OUT.gesamt.FG_Schutzzaun_oeffnen := FALSE; 
   OUT.gesamt.MPL_RPL_leer := FALSE; 
   OUT.gesamt.ROB_vorbereiten := FALSE; 
   OUT.gesamt.NOTAUS_ok := FALSE; 
   OUT.gesamt.Bedienerschutz_ok := FALSE; 
   OUT.gesamt.Anf_Bed_Tuere_oeffnen := FALSE; 
   OUT.gesamt.Lade_FG_extEinheit := FALSE; 
   OUT.gesamt.res_1_2 := FALSE; 
   OUT.gesamt.res_1_3 := FALSE; 
   OUT.gesamt.res_1_4 := FALSE; 
   OUT.gesamt.res_1_5 := FALSE; 
   OUT.gesamt.res_1_6 := FALSE; 
   OUT.gesamt.MPL_STATUS_3 := FALSE; 
   OUT.gesamt.res_2_w := W#16#0; 
   OUT.Stelle[1].FG_Entladen := FALSE; 
   OUT.Stelle[1].entspannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[1].entspannt_MIT_Fehler := FALSE; 
   OUT.Stelle[1].Teil_niO := FALSE; 
   OUT.Stelle[1].Teil_nicht_bearbeitet := FALSE; 
   OUT.Stelle[1].FG_Beladen := FALSE; 
   OUT.Stelle[1].gepannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[1].gepannt_MIT_Fehler := FALSE; 
   OUT.Stelle[1].res_5_0 := FALSE; 
   OUT.Stelle[1].res_5_1 := FALSE; 
   OUT.Stelle[1].res_5_2 := FALSE; 
   OUT.Stelle[1].res_5_3 := FALSE; 
   OUT.Stelle[1].res_5_4 := FALSE; 
   OUT.Stelle[1].res_5_5 := FALSE; 
   OUT.Stelle[1].res_5_6 := FALSE; 
   OUT.Stelle[1].res_5_7 := FALSE; 
   OUT.Stelle[1].res_6_w := W#16#0; 
   OUT.Stelle[1].res_8_w := W#16#0; 
   OUT.Stelle[2].FG_Entladen := FALSE; 
   OUT.Stelle[2].entspannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[2].entspannt_MIT_Fehler := FALSE; 
   OUT.Stelle[2].Teil_niO := FALSE; 
   OUT.Stelle[2].Teil_nicht_bearbeitet := FALSE; 
   OUT.Stelle[2].FG_Beladen := FALSE; 
   OUT.Stelle[2].gepannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[2].gepannt_MIT_Fehler := FALSE; 
   OUT.Stelle[2].res_5_0 := FALSE; 
   OUT.Stelle[2].res_5_1 := FALSE; 
   OUT.Stelle[2].res_5_2 := FALSE; 
   OUT.Stelle[2].res_5_3 := FALSE; 
   OUT.Stelle[2].res_5_4 := FALSE; 
   OUT.Stelle[2].res_5_5 := FALSE; 
   OUT.Stelle[2].res_5_6 := FALSE; 
   OUT.Stelle[2].res_5_7 := FALSE; 
   OUT.Stelle[2].res_6_w := W#16#0; 
   OUT.Stelle[2].res_8_w := W#16#0; 
   OUT.Stelle[3].FG_Entladen := FALSE; 
   OUT.Stelle[3].entspannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[3].entspannt_MIT_Fehler := FALSE; 
   OUT.Stelle[3].Teil_niO := FALSE; 
   OUT.Stelle[3].Teil_nicht_bearbeitet := FALSE; 
   OUT.Stelle[3].FG_Beladen := FALSE; 
   OUT.Stelle[3].gepannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[3].gepannt_MIT_Fehler := FALSE; 
   OUT.Stelle[3].res_5_0 := FALSE; 
   OUT.Stelle[3].res_5_1 := FALSE; 
   OUT.Stelle[3].res_5_2 := FALSE; 
   OUT.Stelle[3].res_5_3 := FALSE; 
   OUT.Stelle[3].res_5_4 := FALSE; 
   OUT.Stelle[3].res_5_5 := FALSE; 
   OUT.Stelle[3].res_5_6 := FALSE; 
   OUT.Stelle[3].res_5_7 := FALSE; 
   OUT.Stelle[3].res_6_w := W#16#0; 
   OUT.Stelle[3].res_8_w := W#16#0; 
   OUT.Stelle[4].FG_Entladen := FALSE; 
   OUT.Stelle[4].entspannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[4].entspannt_MIT_Fehler := FALSE; 
   OUT.Stelle[4].Teil_niO := FALSE; 
   OUT.Stelle[4].Teil_nicht_bearbeitet := FALSE; 
   OUT.Stelle[4].FG_Beladen := FALSE; 
   OUT.Stelle[4].gepannt_OHNE_Fehler := FALSE; 
   OUT.Stelle[4].gepannt_MIT_Fehler := FALSE; 
   OUT.Stelle[4].res_5_0 := FALSE; 
   OUT.Stelle[4].res_5_1 := FALSE; 
   OUT.Stelle[4].res_5_2 := FALSE; 
   OUT.Stelle[4].res_5_3 := FALSE; 
   OUT.Stelle[4].res_5_4 := FALSE; 
   OUT.Stelle[4].res_5_5 := FALSE; 
   OUT.Stelle[4].res_5_6 := FALSE; 
   OUT.Stelle[4].res_5_7 := FALSE; 
   OUT.Stelle[4].res_6_w := W#16#0; 
   OUT.Stelle[4].res_8_w := W#16#0; 
   OUT.RPL.PW_aktiv := FALSE; 
   OUT.RPL.RPL_Tuer_offen := FALSE; 
   OUT.RPL.RPL_Tuer_zu := FALSE; 
   OUT.RPL.RPL_Wasser_ein := FALSE; 
   OUT.RPL.RPL_Luft_ein := FALSE; 
   OUT.RPL.RPL_PAL_1 := FALSE; 
   OUT.RPL.RPL_PAL_2 := FALSE; 
   OUT.RPL.RPL_Bauteil_Spuelen := FALSE; 
   OUT.RPL.NPSPS_1_FG_Entladen := FALSE; 
   OUT.RPL.NPSPS_1_gespannt := FALSE; 
   OUT.RPL.NPSPS_1_entspannt := FALSE; 
   OUT.RPL.res_29_3 := FALSE; 
   OUT.RPL.res_29_4 := FALSE; 
   OUT.RPL.res_29_5 := FALSE; 
   OUT.RPL.res_29_6 := FALSE; 
   OUT.RPL.res_29_7 := FALSE; 
   OUT.RPL.NPSPS_2_FG_Entladen := FALSE; 
   OUT.RPL.NPSPS_2_gespannt := FALSE; 
   OUT.RPL.NPSPS_2_entspannt := FALSE; 
   OUT.RPL.res_30_3 := FALSE; 
   OUT.RPL.res_30_4 := FALSE; 
   OUT.RPL.res_30_5 := FALSE; 
   OUT.RPL.res_30_6 := FALSE; 
   OUT.RPL.res_30_7 := FALSE; 
   OUT.RPL.res_b_31 := B#16#0; 
   OUT.RPL.res_w_32 := W#16#0; 
   OUT.RPL.WS_Daten[1].WS_Typ_gespiegelt := DW#16#0; 
   OUT.RPL.WS_Daten[1].WS_Typ := DW#16#0; 
   OUT.RPL.WS_Daten[1].Messtaster_Check_NOK := FALSE; 
   OUT.RPL.WS_Daten[1].WZBruch_Bearbeitung := FALSE; 
   OUT.RPL.WS_Daten[1].Messtaster_Pos_NOK := FALSE; 
   OUT.RPL.WS_Daten[1].res_12 := FALSE; 
   OUT.RPL.WS_Daten[1].res_13 := FALSE; 
   OUT.RPL.WS_Daten[1].res_14 := FALSE; 
   OUT.RPL.WS_Daten[1].res_15 := FALSE; 
   OUT.RPL.WS_Daten[1].res_16 := FALSE; 
   OUT.RPL.WS_Daten[1].res_Byte := B#16#0; 
   OUT.RPL.WS_Daten[2].WS_Typ_gespiegelt := DW#16#0; 
   OUT.RPL.WS_Daten[2].WS_Typ := DW#16#0; 
   OUT.RPL.WS_Daten[2].Messtaster_Check_NOK := FALSE; 
   OUT.RPL.WS_Daten[2].WZBruch_Bearbeitung := FALSE; 
   OUT.RPL.WS_Daten[2].Messtaster_Pos_NOK := FALSE; 
   OUT.RPL.WS_Daten[2].res_12 := FALSE; 
   OUT.RPL.WS_Daten[2].res_13 := FALSE; 
   OUT.RPL.WS_Daten[2].res_14 := FALSE; 
   OUT.RPL.WS_Daten[2].res_15 := FALSE; 
   OUT.RPL.WS_Daten[2].res_16 := FALSE; 
   OUT.RPL.WS_Daten[2].res_Byte := B#16#0; 
   OUT.RPL.WS_Daten[3].WS_Typ_gespiegelt := DW#16#0; 
   OUT.RPL.WS_Daten[3].WS_Typ := DW#16#0; 
   OUT.RPL.WS_Daten[3].Messtaster_Check_NOK := FALSE; 
   OUT.RPL.WS_Daten[3].WZBruch_Bearbeitung := FALSE; 
   OUT.RPL.WS_Daten[3].Messtaster_Pos_NOK := FALSE; 
   OUT.RPL.WS_Daten[3].res_12 := FALSE; 
   OUT.RPL.WS_Daten[3].res_13 := FALSE; 
   OUT.RPL.WS_Daten[3].res_14 := FALSE; 
   OUT.RPL.WS_Daten[3].res_15 := FALSE; 
   OUT.RPL.WS_Daten[3].res_16 := FALSE; 
   OUT.RPL.WS_Daten[3].res_Byte := B#16#0; 
   OUT.RPL.WS_Daten[4].WS_Typ_gespiegelt := DW#16#0; 
   OUT.RPL.WS_Daten[4].WS_Typ := DW#16#0; 
   OUT.RPL.WS_Daten[4].Messtaster_Check_NOK := FALSE; 
   OUT.RPL.WS_Daten[4].WZBruch_Bearbeitung := FALSE; 
   OUT.RPL.WS_Daten[4].Messtaster_Pos_NOK := FALSE; 
   OUT.RPL.WS_Daten[4].res_12 := FALSE; 
   OUT.RPL.WS_Daten[4].res_13 := FALSE; 
   OUT.RPL.WS_Daten[4].res_14 := FALSE; 
   OUT.RPL.WS_Daten[4].res_15 := FALSE; 
   OUT.RPL.WS_Daten[4].res_16 := FALSE; 
   OUT.RPL.WS_Daten[4].res_Byte := B#16#0; 
   OUT.RPL.Achse.AX_ISTposition := 0; 
   OUT.RPL.Achse.FRG_Drehbewegung_RP := FALSE; 
   OUT.RPL.Achse.MEL_Position_erreicht_RP := FALSE; 
   OUT.RPL.Achse.res_46_2 := FALSE; 
   OUT.RPL.Achse.res_46_3 := FALSE; 
   OUT.RPL.Achse.res_46_4 := FALSE; 
   OUT.RPL.Achse.res_46_5 := FALSE; 
   OUT.RPL.Achse.res_46_6 := FALSE; 
   OUT.RPL.Achse.res_46_7 := FALSE; 
   OUT.RPL.Achse.res_47_b := B#16#0; 
   OUT.RPL.Achse.res_48_w := W#16#0; 
   OUT_Reserve[80] := B#16#0; 
   OUT_Reserve[81] := B#16#0; 
   OUT_Reserve[82] := B#16#0; 
   OUT_Reserve[83] := B#16#0; 
   OUT_Reserve[84] := B#16#0; 
   OUT_Reserve[85] := B#16#0; 
   OUT_Reserve[86] := B#16#0; 
   OUT_Reserve[87] := B#16#0; 
   OUT_Reserve[88] := B#16#0; 
   OUT_Reserve[89] := B#16#0; 
   OUT_Reserve[90] := B#16#0; 
   OUT_Reserve[91] := B#16#0; 
   OUT_Reserve[92] := B#16#0; 
   OUT_Reserve[93] := B#16#0; 
   OUT_Reserve[94] := B#16#0; 
   OUT_Reserve[95] := B#16#0; 
   OUT_Reserve[96] := B#16#0; 
   OUT_Reserve[97] := B#16#0; 
   OUT_Reserve[98] := B#16#0; 
   OUT_Reserve[99] := B#16#0; 
   IN.gesamt.LZ := FALSE; 
   IN.gesamt.ROB_BTB := FALSE; 
   IN.gesamt.ROB_aus_Stoerbereich := FALSE; 
   IN.gesamt.Anf_Schutzzaun_oeffnen := FALSE; 
   IN.gesamt.BA_Leerfahren := FALSE; 
   IN.gesamt.res_100_5 := FALSE; 
   IN.gesamt.NOTAUS_ok := FALSE; 
   IN.gesamt.Bedienerschutz_ok := FALSE; 
   IN.gesamt.Frg_Bed_Tuere_oeffnen := FALSE; 
   IN.gesamt.Achsen_Stop_extern := FALSE; 
   IN.gesamt.PW_Sperre_extern := FALSE; 
   IN.gesamt.res_101_3 := FALSE; 
   IN.gesamt.res_101_4 := FALSE; 
   IN.gesamt.res_101_5 := FALSE; 
   IN.gesamt.res_101_6 := FALSE; 
   IN.gesamt.res_101_7 := FALSE; 
   IN.gesamt.res_102_w := W#16#0; 
   IN.Stelle[1].Meldung_Entladen := FALSE; 
   IN.Stelle[1].Bef_Entspannen := FALSE; 
   IN.Stelle[1].frei_104_2 := FALSE; 
   IN.Stelle[1].Meldung_SICHER_offen := FALSE; 
   IN.Stelle[1].frei_104_4 := FALSE; 
   IN.Stelle[1].Meldung_Beladen := FALSE; 
   IN.Stelle[1].Bef_Spannen_OHNE_CTRL := FALSE; 
   IN.Stelle[1].Bef_Spannen_MIT_CTRL := FALSE; 
   IN.Stelle[1].res_105_0 := FALSE; 
   IN.Stelle[1].res_105_1 := FALSE; 
   IN.Stelle[1].res_105_2 := FALSE; 
   IN.Stelle[1].res_105_3 := FALSE; 
   IN.Stelle[1].res_105_4 := FALSE; 
   IN.Stelle[1].res_105_5 := FALSE; 
   IN.Stelle[1].res_105_6 := FALSE; 
   IN.Stelle[1].res_105_7 := FALSE; 
   IN.Stelle[1].res_106_w := W#16#0; 
   IN.Stelle[1].res_108_w := W#16#0; 
   IN.Stelle[2].Meldung_Entladen := FALSE; 
   IN.Stelle[2].Bef_Entspannen := FALSE; 
   IN.Stelle[2].frei_104_2 := FALSE; 
   IN.Stelle[2].Meldung_SICHER_offen := FALSE; 
   IN.Stelle[2].frei_104_4 := FALSE; 
   IN.Stelle[2].Meldung_Beladen := FALSE; 
   IN.Stelle[2].Bef_Spannen_OHNE_CTRL := FALSE; 
   IN.Stelle[2].Bef_Spannen_MIT_CTRL := FALSE; 
   IN.Stelle[2].res_105_0 := FALSE; 
   IN.Stelle[2].res_105_1 := FALSE; 
   IN.Stelle[2].res_105_2 := FALSE; 
   IN.Stelle[2].res_105_3 := FALSE; 
   IN.Stelle[2].res_105_4 := FALSE; 
   IN.Stelle[2].res_105_5 := FALSE; 
   IN.Stelle[2].res_105_6 := FALSE; 
   IN.Stelle[2].res_105_7 := FALSE; 
   IN.Stelle[2].res_106_w := W#16#0; 
   IN.Stelle[2].res_108_w := W#16#0; 
   IN.Stelle[3].Meldung_Entladen := FALSE; 
   IN.Stelle[3].Bef_Entspannen := FALSE; 
   IN.Stelle[3].frei_104_2 := FALSE; 
   IN.Stelle[3].Meldung_SICHER_offen := FALSE; 
   IN.Stelle[3].frei_104_4 := FALSE; 
   IN.Stelle[3].Meldung_Beladen := FALSE; 
   IN.Stelle[3].Bef_Spannen_OHNE_CTRL := FALSE; 
   IN.Stelle[3].Bef_Spannen_MIT_CTRL := FALSE; 
   IN.Stelle[3].res_105_0 := FALSE; 
   IN.Stelle[3].res_105_1 := FALSE; 
   IN.Stelle[3].res_105_2 := FALSE; 
   IN.Stelle[3].res_105_3 := FALSE; 
   IN.Stelle[3].res_105_4 := FALSE; 
   IN.Stelle[3].res_105_5 := FALSE; 
   IN.Stelle[3].res_105_6 := FALSE; 
   IN.Stelle[3].res_105_7 := FALSE; 
   IN.Stelle[3].res_106_w := W#16#0; 
   IN.Stelle[3].res_108_w := W#16#0; 
   IN.Stelle[4].Meldung_Entladen := FALSE; 
   IN.Stelle[4].Bef_Entspannen := FALSE; 
   IN.Stelle[4].frei_104_2 := FALSE; 
   IN.Stelle[4].Meldung_SICHER_offen := FALSE; 
   IN.Stelle[4].frei_104_4 := FALSE; 
   IN.Stelle[4].Meldung_Beladen := FALSE; 
   IN.Stelle[4].Bef_Spannen_OHNE_CTRL := FALSE; 
   IN.Stelle[4].Bef_Spannen_MIT_CTRL := FALSE; 
   IN.Stelle[4].res_105_0 := FALSE; 
   IN.Stelle[4].res_105_1 := FALSE; 
   IN.Stelle[4].res_105_2 := FALSE; 
   IN.Stelle[4].res_105_3 := FALSE; 
   IN.Stelle[4].res_105_4 := FALSE; 
   IN.Stelle[4].res_105_5 := FALSE; 
   IN.Stelle[4].res_105_6 := FALSE; 
   IN.Stelle[4].res_105_7 := FALSE; 
   IN.Stelle[4].res_106_w := W#16#0; 
   IN.Stelle[4].res_108_w := W#16#0; 
   IN.RPL.Bef_PW_Freigabe := FALSE; 
   IN.RPL.Bef_RPL_Tuer_oeffnen := FALSE; 
   IN.RPL.Bef_RPL_Tuer_schliessen := FALSE; 
   IN.RPL.Bef_Vorrichtung_Spuelen := FALSE; 
   IN.RPL.Bef_Vorrichtung_Abblasen := FALSE; 
   IN.RPL.Bef_Bauteil_Reinigung := FALSE; 
   IN.RPL.res_128_6 := FALSE; 
   IN.RPL.res_128_7 := FALSE; 
   IN.RPL.Bef_NPSPS_1_loesen := FALSE; 
   IN.RPL.res_129_1 := FALSE; 
   IN.RPL.res_129_2 := FALSE; 
   IN.RPL.res_129_3 := FALSE; 
   IN.RPL.res_129_4 := FALSE; 
   IN.RPL.res_129_5 := FALSE; 
   IN.RPL.res_129_6 := FALSE; 
   IN.RPL.res_129_7 := FALSE; 
   IN.RPL.Bef_NPSPS_2_loesen := FALSE; 
   IN.RPL.res_130_1 := FALSE; 
   IN.RPL.res_130_2 := FALSE; 
   IN.RPL.res_130_3 := FALSE; 
   IN.RPL.res_130_4 := FALSE; 
   IN.RPL.res_130_5 := FALSE; 
   IN.RPL.res_130_6 := FALSE; 
   IN.RPL.res_130_7 := FALSE; 
   IN.RPL.res_131_b := B#16#0; 
   IN.RPL.res_132_w := W#16#0; 
   IN.RPL.WS_Daten[1].WS_Typ_gespiegelt := DW#16#0; 
   IN.RPL.WS_Daten[1].WS_Typ := DW#16#0; 
   IN.RPL.WS_Daten[1].res_38_w := W#16#0; 
   IN.RPL.WS_Daten[2].WS_Typ_gespiegelt := DW#16#0; 
   IN.RPL.WS_Daten[2].WS_Typ := DW#16#0; 
   IN.RPL.WS_Daten[2].res_38_w := W#16#0; 
   IN.RPL.WS_Daten[3].WS_Typ_gespiegelt := DW#16#0; 
   IN.RPL.WS_Daten[3].WS_Typ := DW#16#0; 
   IN.RPL.WS_Daten[3].res_38_w := W#16#0; 
   IN.RPL.WS_Daten[4].WS_Typ_gespiegelt := DW#16#0; 
   IN.RPL.WS_Daten[4].WS_Typ := DW#16#0; 
   IN.RPL.WS_Daten[4].res_38_w := W#16#0; 
   IN.RPL.Achse.RPL_AX_SOLLposition := 0; 
   IN.RPL.Achse.BEF_RPL_positionieren := FALSE; 
   IN.RPL.Achse.res_146_1 := FALSE; 
   IN.RPL.Achse.res_146_2 := FALSE; 
   IN.RPL.Achse.res_146_3 := FALSE; 
   IN.RPL.Achse.res_146_4 := FALSE; 
   IN.RPL.Achse.res_146_5 := FALSE; 
   IN.RPL.Achse.res_146_6 := FALSE; 
   IN.RPL.Achse.res_146_7 := FALSE; 
   IN.RPL.Achse.res_147_b := B#16#0; 
   IN.RPL.Achse.res_148_w := W#16#0; 
   IN_reserve[180] := B#16#0; 
   IN_reserve[181] := B#16#0; 
   IN_reserve[182] := B#16#0; 
   IN_reserve[183] := B#16#0; 
   IN_reserve[184] := B#16#0; 
   IN_reserve[185] := B#16#0; 
   IN_reserve[186] := B#16#0; 
   IN_reserve[187] := B#16#0; 
   IN_reserve[188] := B#16#0; 
   IN_reserve[189] := B#16#0; 
   IN_reserve[190] := B#16#0; 
   IN_reserve[191] := B#16#0; 
   IN_reserve[192] := B#16#0; 
   IN_reserve[193] := B#16#0; 
   IN_reserve[194] := B#16#0; 
   IN_reserve[195] := B#16#0; 
   IN_reserve[196] := B#16#0; 
   IN_reserve[197] := B#16#0; 
   IN_reserve[198] := B#16#0; 
   IN_reserve[199] := B#16#0; 
   STAT.Stelle[1].gespannt := FALSE; 
   STAT.Stelle[1].entspannt := FALSE; 
   STAT.Stelle[1].aktivieren_spannen := FALSE; 
   STAT.Stelle[1].aktivieren_entspannen := FALSE; 
   STAT.Stelle[1].Teil_nicht_in_Ordnung := FALSE; 
   STAT.Stelle[1].res_200_5 := FALSE; 
   STAT.Stelle[1].res_200_6 := FALSE; 
   STAT.Stelle[1].res_200_7 := FALSE; 
   STAT.Stelle[1].res_201_0 := FALSE; 
   STAT.Stelle[1].res_201_1 := FALSE; 
   STAT.Stelle[1].res_201_2 := FALSE; 
   STAT.Stelle[1].res_201_3 := FALSE; 
   STAT.Stelle[1].res_201_4 := FALSE; 
   STAT.Stelle[1].res_201_5 := FALSE; 
   STAT.Stelle[1].res_201_6 := FALSE; 
   STAT.Stelle[1].res_201_7 := FALSE; 
   STAT.Stelle[1].res_202_w := W#16#0; 
   STAT.Stelle[1].res_204_w := W#16#0; 
   STAT.Stelle[1].res_206_w := W#16#0; 
   STAT.Stelle[1].res_208_w := W#16#0; 
   STAT.Stelle[2].gespannt := FALSE; 
   STAT.Stelle[2].entspannt := FALSE; 
   STAT.Stelle[2].aktivieren_spannen := FALSE; 
   STAT.Stelle[2].aktivieren_entspannen := FALSE; 
   STAT.Stelle[2].Teil_nicht_in_Ordnung := FALSE; 
   STAT.Stelle[2].res_200_5 := FALSE; 
   STAT.Stelle[2].res_200_6 := FALSE; 
   STAT.Stelle[2].res_200_7 := FALSE; 
   STAT.Stelle[2].res_201_0 := FALSE; 
   STAT.Stelle[2].res_201_1 := FALSE; 
   STAT.Stelle[2].res_201_2 := FALSE; 
   STAT.Stelle[2].res_201_3 := FALSE; 
   STAT.Stelle[2].res_201_4 := FALSE; 
   STAT.Stelle[2].res_201_5 := FALSE; 
   STAT.Stelle[2].res_201_6 := FALSE; 
   STAT.Stelle[2].res_201_7 := FALSE; 
   STAT.Stelle[2].res_202_w := W#16#0; 
   STAT.Stelle[2].res_204_w := W#16#0; 
   STAT.Stelle[2].res_206_w := W#16#0; 
   STAT.Stelle[2].res_208_w := W#16#0; 
   STAT.Stelle[3].gespannt := FALSE; 
   STAT.Stelle[3].entspannt := FALSE; 
   STAT.Stelle[3].aktivieren_spannen := FALSE; 
   STAT.Stelle[3].aktivieren_entspannen := FALSE; 
   STAT.Stelle[3].Teil_nicht_in_Ordnung := FALSE; 
   STAT.Stelle[3].res_200_5 := FALSE; 
   STAT.Stelle[3].res_200_6 := FALSE; 
   STAT.Stelle[3].res_200_7 := FALSE; 
   STAT.Stelle[3].res_201_0 := FALSE; 
   STAT.Stelle[3].res_201_1 := FALSE; 
   STAT.Stelle[3].res_201_2 := FALSE; 
   STAT.Stelle[3].res_201_3 := FALSE; 
   STAT.Stelle[3].res_201_4 := FALSE; 
   STAT.Stelle[3].res_201_5 := FALSE; 
   STAT.Stelle[3].res_201_6 := FALSE; 
   STAT.Stelle[3].res_201_7 := FALSE; 
   STAT.Stelle[3].res_202_w := W#16#0; 
   STAT.Stelle[3].res_204_w := W#16#0; 
   STAT.Stelle[3].res_206_w := W#16#0; 
   STAT.Stelle[3].res_208_w := W#16#0; 
   STAT.Stelle[4].gespannt := FALSE; 
   STAT.Stelle[4].entspannt := FALSE; 
   STAT.Stelle[4].aktivieren_spannen := FALSE; 
   STAT.Stelle[4].aktivieren_entspannen := FALSE; 
   STAT.Stelle[4].Teil_nicht_in_Ordnung := FALSE; 
   STAT.Stelle[4].res_200_5 := FALSE; 
   STAT.Stelle[4].res_200_6 := FALSE; 
   STAT.Stelle[4].res_200_7 := FALSE; 
   STAT.Stelle[4].res_201_0 := FALSE; 
   STAT.Stelle[4].res_201_1 := FALSE; 
   STAT.Stelle[4].res_201_2 := FALSE; 
   STAT.Stelle[4].res_201_3 := FALSE; 
   STAT.Stelle[4].res_201_4 := FALSE; 
   STAT.Stelle[4].res_201_5 := FALSE; 
   STAT.Stelle[4].res_201_6 := FALSE; 
   STAT.Stelle[4].res_201_7 := FALSE; 
   STAT.Stelle[4].res_202_w := W#16#0; 
   STAT.Stelle[4].res_204_w := W#16#0; 
   STAT.Stelle[4].res_206_w := W#16#0; 
   STAT.Stelle[4].res_208_w := W#16#0; 
   STAT.Ruestplatz.SpSt1_CTRL_aktivieren := FALSE; 
   STAT.Ruestplatz.SpSt2_CTRL_aktivieren := FALSE; 
   STAT.Ruestplatz.SpSt3_CTRL_aktivieren := FALSE; 
   STAT.Ruestplatz.SpSt4_CTRL_aktivieren := FALSE; 
   STAT.Ruestplatz.FP_entspannen_ok := FALSE; 
   STAT.Ruestplatz.FP_spannen_ok := FALSE; 
   STAT.Ruestplatz.FP_BEF_RPL_positionieren := FALSE; 
   STAT.Ruestplatz.FP_RPL_hat_positioniert := FALSE; 
   STAT.Ruestplatz.FN_BEF_RPL_positionieren := FALSE; 
   STAT.Ruestplatz.FP_Tuere_oeffnen := FALSE; 
   STAT.Ruestplatz.FP_Tuere_schliessen := FALSE; 
   STAT.Ruestplatz.res_241_3 := FALSE; 
   STAT.Ruestplatz.res_241_4 := FALSE; 
   STAT.Ruestplatz.res_241_5 := FALSE; 
   STAT.Ruestplatz.res_241_6 := FALSE; 
   STAT.Ruestplatz.res_241_7 := FALSE; 
   STAT.Ruestplatz.Sollpos_Realwert := 0.000000e+000; 
   STAT.Ruestplatz.res_246_w := W#16#0; 
   STAT.Ruestplatz.res_248_w := W#16#0; 
   STAT.Palettenwechsler.FP_PW_Freigabe_von_Rob := FALSE; 
   STAT.Palettenwechsler.res_250_1 := FALSE; 
   STAT.Palettenwechsler.res_250_2 := FALSE; 
   STAT.Palettenwechsler.res_250_3 := FALSE; 
   STAT.Palettenwechsler.res_250_4 := FALSE; 
   STAT.Palettenwechsler.res_250_5 := FALSE; 
   STAT.Palettenwechsler.res_250_6 := FALSE; 
   STAT.Palettenwechsler.res_250_7 := FALSE; 
   STAT.Palettenwechsler.res_251_b := B#16#0; 
   STAT.Roboter.Automation_ein := FALSE; 
   STAT.Roboter.res_252_1 := FALSE; 
   STAT.Roboter.res_252_2 := FALSE; 
   STAT.Roboter.res_252_3 := FALSE; 
   STAT.Roboter.res_252_4 := FALSE; 
   STAT.Roboter.res_252_5 := FALSE; 
   STAT.Roboter.res_252_6 := FALSE; 
   STAT.Roboter.res_252_7 := FALSE; 
   STAT.Roboter.LZ.P_Flanke := FALSE; 
   STAT.Roboter.LZ.N_Flanke := FALSE; 
   STAT.Roboter.LZ.Fehler := FALSE; 
END_DATA_BLOCK

